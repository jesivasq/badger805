/*!
 * Font Awesome Pro 5.15.4 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 */
(function () {
  'use strict';

  var _WINDOW = {};
  var _DOCUMENT = {};

  try {
    if (typeof window !== 'undefined') _WINDOW = window;
    if (typeof document !== 'undefined') _DOCUMENT = document;
  } catch (e) {}

  var _ref = _WINDOW.navigator || {},
      _ref$userAgent = _ref.userAgent,
      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;

  var WINDOW = _WINDOW;
  var DOCUMENT = _DOCUMENT;
  var IS_BROWSER = !!WINDOW.document;
  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';
  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');

  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';
  var PRODUCTION = function () {
    try {
      return "production" === 'production';
    } catch (e) {
      return false;
    }
  }();

  function bunker(fn) {
    try {
      fn();
    } catch (e) {
      if (!PRODUCTION) {
        throw e;
      }
    }
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);

      if (enumerableOnly) {
        symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }

      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(Object(source), true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  var w = WINDOW || {};
  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};
  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};
  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};
  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];
  var namespace = w[NAMESPACE_IDENTIFIER];

  function defineIcons(prefix, icons) {
    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var _params$skipHooks = params.skipHooks,
        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;
    var normalized = Object.keys(icons).reduce(function (acc, iconName) {
      var icon = icons[iconName];
      var expanded = !!icon.icon;

      if (expanded) {
        acc[icon.iconName] = icon.icon;
      } else {
        acc[iconName] = icon;
      }

      return acc;
    }, {});

    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {
      namespace.hooks.addPack(prefix, normalized);
    } else {
      namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), normalized);
    }
    /**
     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction
     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias
     * for `fas` so we'll easy the upgrade process for our users by automatically defining
     * this as well.
     */


    if (prefix === 'fas') {
      defineIcons('fa', icons);
    }
  }

  var icons = {
    "discord": [640, 512, [], "f392", "M524.531,69.836a1.5,1.5,0,0,0-.764-.7A485.065,485.065,0,0,0,404.081,32.03a1.816,1.816,0,0,0-1.923.91,337.461,337.461,0,0,0-14.9,30.6,447.848,447.848,0,0,0-134.426,0,309.541,309.541,0,0,0-15.135-30.6,1.89,1.89,0,0,0-1.924-.91A483.689,483.689,0,0,0,116.085,69.137a1.712,1.712,0,0,0-.788.676C39.068,183.651,18.186,294.69,28.43,404.354a2.016,2.016,0,0,0,.765,1.375A487.666,487.666,0,0,0,176.02,479.918a1.9,1.9,0,0,0,2.063-.676A348.2,348.2,0,0,0,208.12,430.4a1.86,1.86,0,0,0-1.019-2.588,321.173,321.173,0,0,1-45.868-21.853,1.885,1.885,0,0,1-.185-3.126c3.082-2.309,6.166-4.711,9.109-7.137a1.819,1.819,0,0,1,1.9-.256c96.229,43.917,200.41,43.917,295.5,0a1.812,1.812,0,0,1,1.924.233c2.944,2.426,6.027,4.851,9.132,7.16a1.884,1.884,0,0,1-.162,3.126,301.407,301.407,0,0,1-45.89,21.83,1.875,1.875,0,0,0-1,2.611,391.055,391.055,0,0,0,30.014,48.815,1.864,1.864,0,0,0,2.063.7A486.048,486.048,0,0,0,610.7,405.729a1.882,1.882,0,0,0,.765-1.352C623.729,277.594,590.933,167.465,524.531,69.836ZM222.491,337.58c-28.972,0-52.844-26.587-52.844-59.239S193.056,219.1,222.491,219.1c29.665,0,53.306,26.82,52.843,59.239C275.334,310.993,251.924,337.58,222.491,337.58Zm195.38,0c-28.971,0-52.843-26.587-52.843-59.239S388.437,219.1,417.871,219.1c29.667,0,53.307,26.82,52.844,59.239C470.715,310.993,447.538,337.58,417.871,337.58Z"],
    "fort-awesome": [512, 512, [], "f286", "M489.2 287.9h-27.4c-2.6 0-4.6 2-4.6 4.6v32h-36.6V146.2c0-2.6-2-4.6-4.6-4.6h-27.4c-2.6 0-4.6 2-4.6 4.6v32h-36.6v-32c0-2.6-2-4.6-4.6-4.6h-27.4c-2.6 0-4.6 2-4.6 4.6v32h-36.6v-32c0-6-8-4.6-11.7-4.6v-38c8.3-2 17.1-3.4 25.7-3.4 10.9 0 20.9 4.3 31.4 4.3 4.6 0 27.7-1.1 27.7-8v-60c0-2.6-2-4.6-4.6-4.6-5.1 0-15.1 4.3-24 4.3-9.7 0-20.9-4.3-32.6-4.3-8 0-16 1.1-23.7 2.9v-4.9c5.4-2.6 9.1-8.3 9.1-14.3 0-20.7-31.4-20.8-31.4 0 0 6 3.7 11.7 9.1 14.3v111.7c-3.7 0-11.7-1.4-11.7 4.6v32h-36.6v-32c0-2.6-2-4.6-4.6-4.6h-27.4c-2.6 0-4.6 2-4.6 4.6v32H128v-32c0-2.6-2-4.6-4.6-4.6H96c-2.6 0-4.6 2-4.6 4.6v178.3H54.8v-32c0-2.6-2-4.6-4.6-4.6H22.8c-2.6 0-4.6 2-4.6 4.6V512h182.9v-96c0-72.6 109.7-72.6 109.7 0v96h182.9V292.5c.1-2.6-1.9-4.6-4.5-4.6zm-288.1-4.5c0 2.6-2 4.6-4.6 4.6h-27.4c-2.6 0-4.6-2-4.6-4.6v-64c0-2.6 2-4.6 4.6-4.6h27.4c2.6 0 4.6 2 4.6 4.6v64zm146.4 0c0 2.6-2 4.6-4.6 4.6h-27.4c-2.6 0-4.6-2-4.6-4.6v-64c0-2.6 2-4.6 4.6-4.6h27.4c2.6 0 4.6 2 4.6 4.6v64z"],
    "github": [496, 512, [], "f09b", "M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"]
  };

  bunker(function () {
    defineIcons('fab', icons);
  });

}());
(function () {
  'use strict';

  var _WINDOW = {};
  var _DOCUMENT = {};

  try {
    if (typeof window !== 'undefined') _WINDOW = window;
    if (typeof document !== 'undefined') _DOCUMENT = document;
  } catch (e) {}

  var _ref = _WINDOW.navigator || {},
      _ref$userAgent = _ref.userAgent,
      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;

  var WINDOW = _WINDOW;
  var DOCUMENT = _DOCUMENT;
  var IS_BROWSER = !!WINDOW.document;
  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';
  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');

  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';
  var PRODUCTION = function () {
    try {
      return "production" === 'production';
    } catch (e) {
      return false;
    }
  }();

  function bunker(fn) {
    try {
      fn();
    } catch (e) {
      if (!PRODUCTION) {
        throw e;
      }
    }
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);

      if (enumerableOnly) {
        symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }

      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(Object(source), true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  var w = WINDOW || {};
  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};
  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};
  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};
  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];
  var namespace = w[NAMESPACE_IDENTIFIER];

  function defineIcons(prefix, icons) {
    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var _params$skipHooks = params.skipHooks,
        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;
    var normalized = Object.keys(icons).reduce(function (acc, iconName) {
      var icon = icons[iconName];
      var expanded = !!icon.icon;

      if (expanded) {
        acc[icon.iconName] = icon.icon;
      } else {
        acc[iconName] = icon;
      }

      return acc;
    }, {});

    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {
      namespace.hooks.addPack(prefix, normalized);
    } else {
      namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), normalized);
    }
    /**
     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction
     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias
     * for `fas` so we'll easy the upgrade process for our users by automatically defining
     * this as well.
     */


    if (prefix === 'fas') {
      defineIcons('fa', icons);
    }
  }

  var icons = {
    "badger-honey": [640, 512, [], "f6b4", ["M619.83 124.94c-57.65-32.65-71-50.67-115.56-69.92A103.7 103.7 0 0 0 463 46.47a111.24 111.24 0 0 0-55.45 15.21c-17.06 9.79-35.9 16.79-55 16.79h-227a127.66 127.66 0 0 0-51.86 11c5.66 20.73 20.06 55 42.62 84.79 30.11 39.85 56.45 48.21 73.24 48.21h45.47a69.64 69.64 0 0 0 30-6.82l102-61.74.53-.25c29.8-14.33 59.14-27.19 90-27.19h164.71c-.78-.53-1.6-1.06-2.43-1.53zm-78.24 113.53l16 32 16-32 7-14.11-41.89 8.34z", "M622.25 126.47H457.58c-30.86 0-60.2 12.86-90 27.19l-.53.25-102 61.74a69.64 69.64 0 0 1-30 6.82h-45.47c-16.79 0-43.13-8.36-73.24-48.21-22.56-29.79-37-64.06-42.62-84.79a128 128 0 0 0-76.14 117v16a16 16 0 0 0 16 16h20c7.82 33.38 28.08 64.24 53.56 81.17l-21.49 57.3a64 64 0 0 0-2.16 38l14.09 35.41a16 16 0 0 0 15.52 12.12h63.77a15.48 15.48 0 0 0 3.84-.48 16 16 0 0 0 11.64-19.4l-15.55-41.26 33-66.86h105.69l23 115.14a16 16 0 0 0 15.69 12.86h63.37a16 16 0 0 0 15.69-19.1l-27-135c64-43.1 119.18-66.48 152.43-75.67l41.94-8.34c22.4-2.82 33-2.82 40.79-19 7.32-15.11 16.16-35.79 16.16-47.62.02-12.86-5.85-24.68-15.31-31.27zm-128.67 54a23.94 23.94 0 0 1-23.46-29H517a23.5 23.5 0 0 1 .54 5 24 24 0 0 1-23.96 24z"]],
    "dragon": [640, 512, [], "f6d5", ["M320 194.35v42.27A247.35 247.35 0 0 0 334.73 320H112c-14.25 0-21.39-17.23-11.31-27.31L192 224 18.32 255.82C2.36 258.1-6.57 238 5.81 227.68l117.4-116.34a64 64 0 0 1 77.06-4.59z", "M575.19 289.88l-100.66-50.31A48 48 0 0 1 448 196.65V160h64l28.09 22.63a32 32 0 0 0 22.63 9.37h31a32 32 0 0 0 28.62-17.69l14.31-28.62a32 32 0 0 0-3-33.51l-74.58-99.42A32 32 0 0 0 533.47 0H296a8 8 0 0 0-5.66 13.61L352 64l-59.58 24.8a8 8 0 0 0 0 14.31L352 128v108.58A215.61 215.61 0 0 0 448 416c-195.59 6.81-344.56 41-434.1 60.91A17.78 17.78 0 0 0 17.76 512h499.08c63.29 0 119.61-47.56 123-110.76a116.7 116.7 0 0 0-64.65-111.36zm-86-223.63l45.65 11.41c-2.75 10.91-12.47 18.89-24.13 18.26-12.97-.71-25.86-12.53-21.53-29.67z"]],
    "duck": [512, 512, [], "f6d8", ["M512 128a96 96 0 0 1-96 96h-27c37.28-13.18 59-54.2 59-96z", "M401.31 277.43A41.38 41.38 0 0 1 384 243.8a39.9 39.9 0 0 1 5-19.8c37.28-13.18 59-54.2 59-96a96 96 0 0 0-192 0 94.05 94.05 0 0 0 22.1 60.59 41.44 41.44 0 0 1 9.9 26.53A40.88 40.88 0 0 1 247.13 256h-21.69c-31.51 0-80.18-13.2-101.68-36.24C113.74 209 96 216.17 96 230.63A153.38 153.38 0 0 0 249.38 384h-32c-76 0-138.67-55.44-150.82-128h-50.4C7 256-.63 263.66 0 272.75 8.62 388.64 105.36 480 223.43 480h107.2c55.51 0 110.81-44.52 116.72-99.71a111.23 111.23 0 0 0-46.04-102.86zM352 144a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]],
    "dumpster-fire": [640, 512, [], "f794", ["M288 321.6c0 48.5 18.6 92.7 48.8 126.4H128v16a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-16L44 288H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h20l-4-32h308.6c-32.7 46.7-52.6 93.7-52.6 129.6z", "M461.72 104.14a606.78 606.78 0 0 1 51.15 51.46c5.7-5.59 11.41-11.09 17.32-16.28l21.32-19 21.32 19c1.1.9 2.1 2.09 3.1 3.09a17.5 17.5 0 0 0 0-2.29l-24-95.93a15.85 15.85 0 0 0-15.44-12.09h-99l12.31 61.45zM146 160h126.24V32.1h-100.6zM24.5 44.19l-24 95.93A16 16 0 0 0 16 160h97.4L139 32.1H40a16.05 16.05 0 0 0-15.5 12.09zm526.7 119A419.31 419.31 0 0 0 511 204.4a538.72 538.72 0 0 0-71-76.4c-70.2 62.7-120 144.3-120 193.6 0 87.5 71.6 158.4 160 158.4s160-70.9 160-158.4c.1-36.6-37-112.2-88.8-158.4zM532.6 392.6a89 89 0 0 1-52.5 17c-49 0-88.9-33.5-88.9-88 0-27.1 16.5-51 49.4-91.9 4.7 5.6 67.1 88.1 67.1 88.1l39.8-47c2.8 4.8 5.4 9.5 7.7 14 18.6 36.7 10.8 83.6-22.6 107.8zM419.08 104.14l.2-.2L404.87 32h-100.6v127.9h60.86a543.28 543.28 0 0 1 53.95-55.76z"]],
    "flag-usa": [512, 512, [], "f74d", ["M299.9 303.62c-57.2-15.09-111.7-28.79-203.9 11.1V384c185.7-92.2 221.7 53.3 397.5-23.11a31.39 31.39 0 0 0 18.5-28.8v-36c-43.6 17.3-80.2 24.1-112.1 24.1-37.4-.07-68.9-8.36-100-16.57zm9.5-221.89c51.8 15.6 97.4 29 202.6-20.11V30.83c0-25.1-26.8-38.1-49.4-26.6-89.25 45.48-128.17 25.54-174.6 9.39v158c6.76 1.66 13.45 3.4 20.1 5.14 57.2 15 111.7 28.7 203.9-11.1V96.73c-53.6 23.5-93.3 31.39-126.1 31.39s-59-7.79-85.7-15.89c-4-1.21-8.1-2.4-12.1-3.5V75.52c7.2 2 14.3 4.1 21.3 6.21zm-9.5 125.89c-57.2-15.09-111.7-28.79-203.9 11.1v61.5c94.8-37.6 154.6-22.69 212.1-7.6 57.2 15.1 111.7 28.8 203.9-11.09V200c-43.6 17.3-80.2 24.09-112.1 24.09-37.4.03-68.9-8.26-100-16.47z", "M32 0A32 32 0 0 0 0 32v464a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V32A32 32 0 0 0 32 0zm64 32.4v151.93c83.83-33.17 140.29-25.43 192-12.75v-158C245.32-1.23 196.3-12.89 96 32.42zm64 95.7a16 16 0 1 1 16-16 16 16 0 0 1-16 16.02zm0-55.79a16 16 0 1 1 16-16 16 16 0 0 1-16 16.02zm64 47.9a16 16 0 1 1 16-16 16 16 0 0 1-16 16.02zm0-55.9a16 16 0 1 1 16-16 16 16 0 0 1-16 16.02z"]],
    "globe-snow": [448, 512, [], "f7a3", ["M67.9 384H192v-32h-57.9c-14.2 0-22-15-12.9-24.9l65.5-71.1h-30.1c-10.7 0-16.5-11.2-9.7-18.7l67.4-73.2a13.35 13.35 0 0 1 19.3 0l67.4 73.2c6.8 7.4 1 18.7-9.7 18.7h-30.1l65.5 71.1c9.1 9.9 1.3 24.9-12.9 24.9H256v32h124.1c41.7-40.6 67.9-97.1 67.9-160C448 100.3 347.7 0 224 0S0 100.3 0 224c0 62.9 26.1 119.4 67.9 160zM336 160a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm-96-96a16 16 0 1 1-16 16 16 16 0 0 1 16-16zM80 224a16 16 0 1 1-16 16 16 16 0 0 1 16-16z", "M134.1 352H192v32h64v-32h57.8c14.2 0 22-15 12.9-24.9L261.2 256h30.1c10.7 0 16.5-11.3 9.7-18.7l-67.4-73.2a13.35 13.35 0 0 0-19.3 0l-67.4 73.2c-6.8 7.5-1 18.7 9.7 18.7h30.1l-65.5 71.1c-9.1 9.9-1.3 24.9 12.9 24.9zm297.3 135.1L384 416H64l-47.4 71.1A16 16 0 0 0 29.9 512h388.2a16 16 0 0 0 13.3-24.9z"]],
    "graduation-cap": [640, 512, [], "f19d", ["M323.07 175.7L118.8 215.6a48.1 48.1 0 0 0-38.74 44.73 32 32 0 0 1 2.21 53.94l25.4 114.26A16 16 0 0 1 92 448H35.94a16 16 0 0 1-15.61-19.47l25.39-114.27a32 32 0 0 1 2.33-54 80.16 80.16 0 0 1 64.62-76.07l204.26-39.89a16 16 0 1 1 6.14 31.4z", "M622.33 198.8l-279 85.7a80 80 0 0 1-46.79 0L99.67 224a47.84 47.84 0 0 1 19.13-8.39l204.27-39.9a16 16 0 1 0-6.14-31.4l-204.26 39.88a79.87 79.87 0 0 0-47.57 29.18l-47.44-14.58c-23.54-7.23-23.54-38.36 0-45.59L296.6 67.5a79.92 79.92 0 0 1 46.8 0l278.93 85.7c23.55 7.24 23.55 38.36 0 45.6zM352.79 315.09a111.94 111.94 0 0 1-65.59 0l-145-44.55L128 384c0 35.35 86 64 192 64s192-28.65 192-64l-14.19-113.47z"]],
    "hammer": [576, 512, [], "f6e3", ["M19.64 405l255.1-238.17a97 97 0 0 0 9.85 12l49.14 49.14a97.23 97.23 0 0 0 11.44 9.41L107 492.36A61.84 61.84 0 1 1 19.64 405z", "M435.56 261.81l11.31-11.31L418 221.6a63.73 63.73 0 0 1-61.61-16.35l-49.14-49.14a64 64 0 0 1-18.75-45.25V92.11L198 46.86a160 160 0 0 1 226.28 0l45.25 45.25a63.73 63.73 0 0 1 16.35 61.61l28.9 28.9 11.31-11.31a16 16 0 0 1 22.63 0l22.63 22.63a16 16 0 0 1 0 22.62l-90.51 90.51a16 16 0 0 1-22.63 0l-22.63-22.63a16 16 0 0 1-.02-22.63z"]],
    "hands-heart": [640, 512, [], "f4c3", ["M608 64a32 32 0 0 0-32 32v148.4l-89.8 107.8a16.06 16.06 0 0 1-23.6 1.1l-12.8-12.8a16 16 0 0 1-1.5-20.9l38.1-50.8a32 32 0 1 0-51.2-38.4l-57.6 76.8A128.2 128.2 0 0 0 352 384v112a16 16 0 0 0 16 16h131.7a15.76 15.76 0 0 0 15.3-11.6 59.69 59.69 0 0 1 10.4-21.7l104.1-134.3a48.05 48.05 0 0 0 10.5-30V96a32 32 0 0 0-32-32zM204.8 230.42a32 32 0 1 0-51.2 38.4l38.1 50.8a16 16 0 0 1-1.5 20.9l-12.8 12.8a15.9 15.9 0 0 1-23.6-1.1L64 244.42V96a32 32 0 1 0-64 0v218.4a48.05 48.05 0 0 0 10.5 30l104.1 134.3a59.69 59.69 0 0 1 10.4 21.7 15.67 15.67 0 0 0 15.3 11.6H272a16 16 0 0 0 16-16V384a128.2 128.2 0 0 0-25.6-76.8z", "M198.4 136.32c-31.6-33.2-29.7-88.2 5.6-118.8 30.8-26.7 76.7-21.9 104.9 7.8l11.1 11.6 11.1-11.7c28.2-29.6 74.1-34.4 104.9-7.7 35.4 30.6 37.2 85.6 5.7 118.8l-108.9 114.2a17.42 17.42 0 0 1-25.5 0z"]],
    "hands-usd": [640, 512, [], "f4c5", ["M608 64a32 32 0 0 0-32 32v148.4l-89.8 107.8a16.06 16.06 0 0 1-23.6 1.1l-12.8-12.8a16 16 0 0 1-1.5-20.9l38.1-50.8a32 32 0 1 0-51.2-38.4l-57.6 76.8A128.2 128.2 0 0 0 352 384v112a16 16 0 0 0 16 16h131.7a15.76 15.76 0 0 0 15.3-11.6 59.69 59.69 0 0 1 10.4-21.7l104.1-134.3a48.05 48.05 0 0 0 10.5-30V96a32 32 0 0 0-32-32zM204.8 230.4a32 32 0 1 0-51.2 38.4l38.1 50.8a16 16 0 0 1-1.5 20.9l-12.8 12.8a15.9 15.9 0 0 1-23.6-1.1L64 244.4V96a32 32 0 0 0-64 0v218.4a48.05 48.05 0 0 0 10.5 30l104.1 134.3a59.69 59.69 0 0 1 10.4 21.7 15.67 15.67 0 0 0 15.3 11.6H272a16 16 0 0 0 16-16V384a128.2 128.2 0 0 0-25.6-76.8z", "M246.7 96.6c-4.1-32 19-59.4 49.3-63V16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v17.7a73.53 73.53 0 0 1 31.8 11.5c6.2 4.1 6.8 13.1 1.5 18.4l-17.5 17.5c-3.7 3.7-9.3 4.2-14.1 2a25.73 25.73 0 0 0-10.3-2.2h-32.8a8.41 8.41 0 0 0-2.3 16.5l50.1 14.3c22.2 6.4 40 24.7 42.9 47.7a56.14 56.14 0 0 1-49.3 63V240a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-17.7a73.53 73.53 0 0 1-31.8-11.5c-6.2-4.1-6.8-13.1-1.5-18.4l17.5-17.5c3.7-3.7 9.3-4.2 14.1-2a25.73 25.73 0 0 0 10.3 2.2h32.8a8.41 8.41 0 0 0 2.3-16.5l-50.1-14.3c-22.2-6.4-40-24.7-42.9-47.7z"]],
    "heart": [512, 512, [], "f004", ["M462.32 62.63C407.5 15.94 326 24.33 275.69 76.23L256 96.53l-19.69-20.3c-50.21-51.9-131.8-60.29-186.61-13.6-62.78 53.6-66.09 149.81-9.88 207.9l193.5 199.79a31.31 31.31 0 0 0 45.28 0l193.5-199.79c56.31-58.09 53-154.3-9.78-207.9zm-52.8 185l-143.1 143.85a15.29 15.29 0 0 1-21.7 0l-140-140.78c-28.37-28.52-33.78-75-8.37-106.23a76.44 76.44 0 0 1 113.77-5.88l45.49 45.7 42.37-42.58c28.38-28.52 74.65-34 105.71-8.45a77.35 77.35 0 0 1 5.83 114.36z", "M244.72 391.48l-140-140.78c-28.37-28.52-33.78-75-8.36-106.23a76.43 76.43 0 0 1 113.76-5.88l45.49 45.7 42.37-42.58c28.38-28.51 74.65-34 105.71-8.45a77.35 77.35 0 0 1 5.87 114.36L266.41 391.48a15.28 15.28 0 0 1-21.69 0z"]],
    "heart-broken": [512, 512, [], "f7a9", ["M473.68 73.78c48.71 49.79 50.8 129.08 7.3 182.08L268.8 474.53a17.82 17.82 0 0 1-25.19.5l-.51-.5L31 256c-43.49-53.1-41.39-132.39 7.3-182.18l2.4-2.4C87 24 159.7 19.6 211.41 57.39L240 143.87l-96 64 144 144-48-128 96-64-34.31-103.39c51.6-36.89 123.59-32.19 169.59 14.8z", "M288 352L144 208l96-64.1-28.59-86.52q16.68 14.15 32 29.81L256 100l11.67-12q16.23-16.64 34-31.6L336 159.87l-96 64z"]],
    "heart-circle": [496, 512, [], "f4c7", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM371.5,280.3,260.9,394.5a17.88,17.88,0,0,1-25.28.62h0c-.21-.2-.42-.41-.62-.62L124.5,280.3c-32.1-33.2-30.2-88.2,5.7-118.8,31.3-26.7,77.9-21.9,106.6,7.7l11.3,11.6,11.3-11.6c28.7-29.6,75.3-34.4,106.6-7.7,35.8,30.6,37.7,85.6,5.5,118.8Z", "M371.5,280.3,260.9,394.5a17.88,17.88,0,0,1-25.28.62h0c-.21-.2-.42-.41-.62-.62L124.5,280.3c-32.1-33.2-30.2-88.2,5.7-118.8,31.3-26.7,77.9-21.9,106.6,7.7l11.3,11.6,11.3-11.6c28.7-29.6,75.3-34.4,106.6-7.7,35.8,30.6,37.7,85.6,5.5,118.8Z"]],
    "heartbeat": [512, 512, [], "f21e", ["M320.21 243.85l-49.7 99.4a16 16 0 0 1-28.9-.6l-56.9-126.3-30 71.7h-94.1l182.5 186.5a17.82 17.82 0 0 0 25.7 0l182.61-186.5H342.31zM473.71 74l-2.4-2.5a131 131 0 0 0-187.39 0L256 100.05l-27.9-28.5a130.83 130.83 0 0 0-187.4 0L38.31 74c-48.7 49.8-50.8 129.1-7.3 182.1h102.41l35.89-86.2a16 16 0 0 1 29.4-.4l58.21 129.3 49-97.9a16 16 0 0 1 28.59 0l27.6 55.2H481c43.51-53.05 41.42-132.35-7.29-182.1z", "M451 288l-.1.05H342.31l-22.1-44.2-49.7 99.4a16 16 0 0 1-28.9-.6l-56.9-126.3-30 71.7H61V288l-29.95-31.95h102.37l35.89-86.2a16 16 0 0 1 29.4-.4l58.21 129.3 49-97.9a16 16 0 0 1 28.59 0l27.6 55.2H481z"]],
    "jedi": [576, 512, [], "f669", ["M226.67865,285.84578A7.99806,7.99806,0,0,1,238.039,275.15266l30.391,20.64669L279.99046,7.99485a8.00028,8.00028,0,0,1,16.00055,0L307.5214,295.73939l30.351-20.58673a7.99754,7.99754,0,0,1,11.38039,10.70309L329.12214,319.604l42.07144,8.72438a7.99376,7.99376,0,0,1,0,15.64992l-42.07144,8.71438L349.23281,386.401a7.99085,7.99085,0,0,1-1.34,9.91362,8.24461,8.24461,0,0,1-10.00034.79948L310.72149,378.656l2.27007,63.26922a123.48764,123.48764,0,0,1-22.07076,1.94876h-6.37022a123.4657,123.4657,0,0,1-21.62073-1.94876l2.29007-63.3092L238.049,397.07407a8.34473,8.34473,0,0,1-10.00034-.74951,7.9909,7.9909,0,0,1-1.39005-9.9336l20.13069-33.74824-42.07142-8.71439a7.99375,7.99375,0,0,1,0-15.64991l42.07144-8.72439Z", "M559,224.18551c.37,5.75628,1,11.45262,1,17.25888a269.158,269.158,0,0,1-5.13018,51.82659l-58.872,58.83208h40.00136C493.36773,446.21239,398.35448,512,287.99073,512q-6.39022,0-12.85044-.28982c-104.00354-4.76692-193.8866-69.43523-235.158-159.60712H79.91365l-58.602-58.56226a262.66174,262.66174,0,0,1-5.11017-39.37462,271.838,271.838,0,0,1,.5-29.98067H63.9131L22.53169,182.83215A269.557,269.557,0,0,1,130.53537,20.86654a16.00788,16.00788,0,0,1,9.27032-2.99807,16.35349,16.35349,0,0,1,13.48046,7.24533,15.98047,15.98047,0,0,1,1.62005,15.08028,138.20862,138.20862,0,0,0-9.84033,51.227c0,45.09094,21.00071,86.52423,57.712,113.66674a16.28373,16.28373,0,0,1,1.21,25.37364c-26.55091,23.98455-41.1714,56.4636-41.1714,91.521a123.12,123.12,0,0,0,19.76067,67.0168c22.25075,34.4578,60.92207,54.7947,102.00349,54.86463h6.37021c48.67164.08994,93.33319-28.3717,112.38383-73.13285a119.64467,119.64467,0,0,0,7.22025-23.265A123.37031,123.37031,0,0,0,371.9936,230.48145a16.31451,16.31451,0,0,1,1.21-25.41363c36.66125-27.14251,57.692-68.56581,57.692-113.65675a138.03962,138.03962,0,0,0-9.90033-51.27695,15.98051,15.98051,0,0,1,1.61-15.08028,16.35347,16.35347,0,0,1,13.49045-7.23533,16.00784,16.00784,0,0,1,9.25031,2.99806,271.03544,271.03544,0,0,1,107.9037,162.15548l-41.25141,41.21346Z"]],
    "kiwi-bird": [576, 512, [], "f535", ["M144 410v54a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-73.69A190.9 190.9 0 0 0 144 410zm432-186a112 112 0 0 1-102.62 111.61l72.54 136.05A16 16 0 0 0 560 480a16.2 16.2 0 0 0 3.95-.5A16 16 0 0 0 576 464V224zM208 415.32V464a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-58.95a191 191 0 0 1-48 10.27z", "M464 112h-15.74a260.23 260.23 0 0 1-147.74-46.24q-6.09-4.22-12.52-7.94v-.13A191.08 191.08 0 0 0 192 32C86 32 0 118 0 224s86 192 192 192a191.08 191.08 0 0 0 96-25.69v-.2c2.83-1.61 5.61-3.28 8.33-5.05C342 355.33 393.58 336.1 448 336h16a112 112 0 0 0 0-224zm0 136a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]],
    "moon-stars": [512, 512, [], "f755", ["M320 32L304 0l-16 32-32 16 32 16 16 32 16-32 32-16zm138.7 149.3L432 128l-26.7 53.3L352 208l53.3 26.7L432 288l26.7-53.3L512 208z", "M332.2 426.4c8.1-1.6 13.9 8 8.6 14.5a191.18 191.18 0 0 1-149 71.1C85.8 512 0 426 0 320c0-120 108.7-210.6 227-188.8 8.2 1.6 10.1 12.6 2.8 16.7a150.3 150.3 0 0 0-76.1 130.8c0 94 85.4 165.4 178.5 147.7z"]],
    "mug-hot": [512, 512, [], "f7b6", ["M139.3 67.3a94.83 94.83 0 0 1-26.4-53.5A16.11 16.11 0 0 0 96.8 0H80.4a16.31 16.31 0 0 0-16.3 18 145.36 145.36 0 0 0 40.6 84.4 81.22 81.22 0 0 1 22.4 44.1 16.23 16.23 0 0 0 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18a130.72 130.72 0 0 0-36.6-74.7zM287.9 142a130.72 130.72 0 0 0-36.6-74.7 94.83 94.83 0 0 1-26.4-53.5A16.11 16.11 0 0 0 208.8 0h-16.4c-9.8 0-17.5 8.5-16.3 18a145.36 145.36 0 0 0 40.6 84.4 81.22 81.22 0 0 1 22.4 44.1 16.23 16.23 0 0 0 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18z", "M400 192H32a32 32 0 0 0-32 32v192a96 96 0 0 0 96 96h192a96 96 0 0 0 96-96h16a112 112 0 0 0 0-224zm0 160h-16v-96h16a48 48 0 0 1 0 96z"]],
    "narwhal": [640, 512, [], "f6fe", ["M544 192c-243 0-315.29 224-380.12 224A35.92 35.92 0 0 1 128 380.11v-98l49.75-30.51A32 32 0 0 0 192 225v-81a16 16 0 0 0-24.88-13.31L96 178.11l-71.12-47.42A16 16 0 0 0 0 144v81a32 32 0 0 0 14.25 26.6L64 282.12v98A100 100 0 0 0 163.88 480H576a64 64 0 0 0 64-64V288a96.11 96.11 0 0 0-96-96zM432 360a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M634.6 33.32a10.48 10.48 0 0 0-14.25 4.07L535 192l.37.1c2.85-.1 5.73-.1 8.63-.1a95.55 95.55 0 0 1 56.9 18.73l38.83-165.87a10.49 10.49 0 0 0-5.13-11.54zM432 312a24 24 0 1 0 24 24 24 24 0 0 0-24-24z"]],
    "otter": [640, 512, [], "f700", ["M544 192h-22.86l-92.47 49.79.19.39-.86-.18-34.57-70.71L512 112h126.67A96 96 0 0 1 544 192z", "M512 352h-28.22l-54.92-109.82-.86-.18-34.57-70.71L512 112h126.67A97 97 0 0 0 640 96V64a32 32 0 0 0-32-32h-32l-13.25-13.25A64 64 0 0 0 517.49 0H497a64 64 0 0 0-31.75 8.43L312 96h-56C150 96 64 182 64 288v1.61c0 32.75-16 62.14-39.56 84.89a79.91 79.91 0 0 0-23.19 71.8C8 485.1 44.15 512 83.53 512H192a32 32 0 0 0 0-64H80a16 16 0 0 1 0-32h224a16 16 0 0 0 16-16v-16a32 32 0 0 0-32-32h-64l149.49-80.5L448 416h80a16 16 0 0 0 16-16v-16a32 32 0 0 0-32-32zm0-304a16 16 0 1 1-16 16 16 16 0 0 1 16-16z"]],
    "pegasus": [576, 512, [], "f703", ["M64.36 215.74A39.92 39.92 0 0 0 48 248v56a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-56a88 88 0 0 1 88-88h.46a95.62 95.62 0 0 0-24.1 55.74z", "M567.34 54.8c-3.78-4-8.58-9.12-13.69-14.5 11.06-6.84 19.5-17.49 22.18-30.66A8.09 8.09 0 0 0 567.9 0h-120a128 128 0 0 0-128 128c-63.9 0-104.18-36.78-127.64-90.27-3.22-7.35-13.61-7.76-17-.5A158.37 158.37 0 0 0 160 105.1c0 67 51 133.09 128 147.74V256c-82.89 0-143.33-57.52-157-122.86q-1.5.49-3 1v-.7a95.72 95.72 0 0 0-33.46 160.44l-25.72 68.6a63.94 63.94 0 0 0-2.16 38l24.85 99.41A16 16 0 0 0 107 512h66a16 16 0 0 0 15.52-19.88l-26.33-105.26L186 323.27l134 22.33V496a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V318.22A111.55 111.55 0 0 0 448 240c0-.22-.07-.42-.08-.64V136.89l16 7.11 18.9 37.7a32 32 0 0 0 40.49 15.37l32.55-13A32 32 0 0 0 576 154.31l-.06-77.71a31.76 31.76 0 0 0-8.6-21.8zM511.92 96a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]],
    "pencil-alt": [512, 512, [], "f303", ["M96 352H32l-16 64 80 80 64-16v-64H96zM498 74.26l-.11-.11L437.77 14a48.09 48.09 0 0 0-67.9 0l-46.1 46.1a12 12 0 0 0 0 17l111 111a12 12 0 0 0 17 0l46.1-46.1a47.93 47.93 0 0 0 .13-67.74z", "M.37 483.85a24 24 0 0 0 19.47 27.8 24.27 24.27 0 0 0 8.33 0l67.32-16.16-79-79zM412.3 210.78l-111-111a12.13 12.13 0 0 0-17.1 0L32 352h64v64h64v64l252.27-252.25a12 12 0 0 0 .03-16.97zm-114.41-24.93l-154 154a14 14 0 1 1-19.8-19.8l154-154a14 14 0 1 1 19.8 19.8z"]],
    "pepper-hot": [512, 512, [], "f816", ["M0 456a56 56 0 0 1 56-56c141.58 0 163.44-181.24 221.92-250.82l52.75 24.22v89.7h107.46l37.05 38.54C426.65 389.11 268.64 512 56 512a56 56 0 0 1-56-56z", "M362.67 152.86L288 118.57c22.34-14 48.34-22.59 76.34-22.59a142.91 142.91 0 0 1 57.16 12c18.45-37.22 8.26-62 1.4-72.32a8.07 8.07 0 0 1 .89-10.23l22.9-23a6.67 6.67 0 0 1 .68-.62A8 8 0 0 1 458.62 3c18.56 23.48 35.3 71.91 3.14 131.75A154 154 0 0 1 512 248.67c0 13.68-2.3 26.69-5.56 39.31l-54.68-56.88h-89.09z"]],
    "portal-enter": [512, 512, [], "e022", ["M512,256c0,141.38477-35.81641,256-80,256-40.78906,0-74.38281-97.75781-79.3125-224.00781H384a32.001,32.001,0,0,0,0-64.002H352.69141C357.625,97.74805,391.21094,0,432,0,476.18359,0,512,114.61523,512,256Z", "M113.6875,317.47852,98.875,351.99414H32a32.001,32.001,0,0,0,0,64.00195h77.4375a47.9242,47.9242,0,0,0,44.125-29.07812l8.78125-20.5332-10.65625-6.29688A95.3862,95.3862,0,0,1,113.6875,317.47852ZM272,96.00195a48.001,48.001,0,1,0-48-48A48.00237,48.00237,0,0,0,272,96.00195ZM384,223.99023H339.96875l-26.0625-53.25195c-12.5-25.54687-35.46875-44.21875-61.78125-50.9375L181.0625,98.6582a95.69075,95.69075,0,0,0-80.875,17.14258L60.5625,146.207A31.99634,31.99634,0,1,0,99.5,196.99023l39.6875-30.4082c7.65625-5.89062,17.4375-8,25.25-6.14062l14.6875,4.375-37.4375,87.39453A64.16017,64.16017,0,0,0,168,332.52539l84.9375,50.17383L225.5,470.41992a31.96894,31.96894,0,0,0,20.9375,40.0957,31.9422,31.9422,0,0,0,40.125-20.9707l31.625-101.06445a48.16,48.16,0,0,0-21.625-54.39258l-61.25-36.14258,31.3125-78.2832,20.28125,41.43945A48.2689,48.2689,0,0,0,330,287.99219h54a32.001,32.001,0,0,0,0-64.002Z"]],
    "portal-exit": [512, 512, [], "e023", ["M142.39844,415.99609C127.73438,474.47266,105.25,512,80,512,35.81641,512,0,397.38477,0,256S35.81641,0,80,0c32.41406,0,60.25781,61.79492,72.82812,150.47461-10.21484,11.23437-11.78124,28.14062-2.20312,40.59375a31.09936,31.09936,0,0,0,7.17969,6.27148C159.19141,216.207,160,235.78125,160,256a768.85148,768.85148,0,0,1-5.86719,95.99414H128a32.001,32.001,0,0,0,0,64.00195Z", "M368,96.00195a48.001,48.001,0,1,0-48-48A48.00237,48.00237,0,0,0,368,96.00195ZM209.6875,317.47852,194.875,351.99414H128a32.001,32.001,0,0,0,0,64.00195h77.4375a47.9242,47.9242,0,0,0,44.125-29.07812l8.78125-20.5332-10.65625-6.29688A95.3862,95.3862,0,0,1,209.6875,317.47852ZM480,223.99023H435.96875l-26.0625-53.25195c-12.5-25.54687-35.46875-44.21875-61.78125-50.9375L277.0625,98.6582a95.69075,95.69075,0,0,0-80.875,17.14258L156.5625,146.207A31.99634,31.99634,0,1,0,195.5,196.99023l39.6875-30.4082c7.65625-5.89062,17.4375-8,25.25-6.14062l14.6875,4.375-37.4375,87.39453A64.16017,64.16017,0,0,0,264,332.52539l84.9375,50.17383L321.5,470.41992a31.96894,31.96894,0,0,0,20.9375,40.0957,31.9422,31.9422,0,0,0,40.125-20.9707l31.625-101.06445a48.16,48.16,0,0,0-21.625-54.39258l-61.25-36.14258,31.3125-78.2832,20.28125,41.43945A48.2689,48.2689,0,0,0,426,287.99219h54a32.001,32.001,0,0,0,0-64.002Z"]],
    "route": [512, 512, [], "f4d7", ["M512 416a96.15 96.15 0 0 1-96 96H138.2a690.4 690.4 0 0 0 47.3-64H416a32 32 0 0 0 0-64h-96a96 96 0 0 1 0-192h45.24A799.82 799.82 0 0 0 416 256h-96a32 32 0 0 0 0 64h96a96.15 96.15 0 0 1 96 96z", "M96 256a96 96 0 0 0-96 96c0 53 96 160 96 160s96-107 96-160a96 96 0 0 0-96-96zm0 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32zM416 0a96 96 0 0 0-96 96c0 53 96 160 96 160s96-107 96-160a96 96 0 0 0-96-96zm0 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]],
    "seedling": [512, 512, [], "f4d8", ["M512 32c0 115.9-88 211.1-200.7 222.8a256.38 256.38 0 0 0-59-107.6C290.6 78.5 363.8 32 448 32z", "M288 320v144a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V320C100.3 320 0 219.7 0 96h64c123.7 0 224 100.3 224 224z"]],
    "turtle": [576, 512, [], "f726", ["M552.28 137.25l-48.65-34.75c-35.17-17.42-80.49 1.57-86.81 40.31A63.4 63.4 0 0 0 416 153v71.22a62.79 62.79 0 0 1-13.27 38.44A64.75 64.75 0 0 1 351.05 288H18.6a18.6 18.6 0 0 0-5.89 36.24l98.29 22.1L66.17 424A16 16 0 0 0 80 448h37a16 16 0 0 0 13.86-8l40.3-69.8c26 8.52 45.55 13.8 84.87 13.8s58.89-5.28 84.87-13.8l40.3 69.8a16 16 0 0 0 13.8 8h37a16 16 0 0 0 13.86-24l-47.21-81.76c21.25-8.42 40.36-21.78 54.81-40.53A126.33 126.33 0 0 0 478.74 240h40.62a56.65 56.65 0 0 0 32.92-102.76zM480 176a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M68.25 256c-23.54 0-41-19.8-35.1-40 20-69 90.53-152 174.44-152h.82c83.92 0 154.43 83 174.45 152 5.87 20.24-11.56 40-35.1 40z"]]
  };

  bunker(function () {
    defineIcons('fad', icons);
  });

}());
(function () {
  'use strict';

  var _WINDOW = {};
  var _DOCUMENT = {};

  try {
    if (typeof window !== 'undefined') _WINDOW = window;
    if (typeof document !== 'undefined') _DOCUMENT = document;
  } catch (e) {}

  var _ref = _WINDOW.navigator || {},
      _ref$userAgent = _ref.userAgent,
      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;

  var WINDOW = _WINDOW;
  var DOCUMENT = _DOCUMENT;
  var IS_BROWSER = !!WINDOW.document;
  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';
  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');

  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';
  var PRODUCTION = function () {
    try {
      return "production" === 'production';
    } catch (e) {
      return false;
    }
  }();

  function bunker(fn) {
    try {
      fn();
    } catch (e) {
      if (!PRODUCTION) {
        throw e;
      }
    }
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);

      if (enumerableOnly) {
        symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }

      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(Object(source), true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  var w = WINDOW || {};
  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};
  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};
  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};
  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];
  var namespace = w[NAMESPACE_IDENTIFIER];

  function defineIcons(prefix, icons) {
    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var _params$skipHooks = params.skipHooks,
        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;
    var normalized = Object.keys(icons).reduce(function (acc, iconName) {
      var icon = icons[iconName];
      var expanded = !!icon.icon;

      if (expanded) {
        acc[icon.iconName] = icon.icon;
      } else {
        acc[iconName] = icon;
      }

      return acc;
    }, {});

    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {
      namespace.hooks.addPack(prefix, normalized);
    } else {
      namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), normalized);
    }
    /**
     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction
     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias
     * for `fas` so we'll easy the upgrade process for our users by automatically defining
     * this as well.
     */


    if (prefix === 'fas') {
      defineIcons('fa', icons);
    }
  }

  var icons = {
    "air-freshener": [512, 512, [], "f5d0", "M160 240C115.875 240 80 275.875 80 320S115.875 400 160 400S240 364.125 240 320S204.125 240 160 240ZM160 368C133.5 368 112 346.5 112 320S133.5 272 160 272S208 293.5 208 320S186.5 368 160 368ZM224 128V32C224 14.406 209.594 0 192 0H128C110.406 0 96 14.406 96 32V128C43 128 0 171 0 224V448C0 483.203 28.812 512 64 512H256C291.188 512 320 483.203 320 448V224C320 171 277 128 224 128ZM128 32H192V128H128V32ZM288 448C288 465.672 273.688 480 256 480H64C46.312 480 32 465.672 32 448V224C32 188.797 60.812 160 96 160H224C259.188 160 288 188.797 288 224V448ZM496 224H480V208C480 199.156 472.844 192 464 192S448 199.156 448 208V224H432C423.156 224 416 231.156 416 240S423.156 256 432 256H448V272C448 280.844 455.156 288 464 288S480 280.844 480 272V256H496C504.844 256 512 248.844 512 240S504.844 224 496 224ZM432 64H448V80C448 88.844 455.156 96 464 96S480 88.844 480 80V64H496C504.844 64 512 56.844 512 48S504.844 32 496 32H480V16C480 7.156 472.844 0 464 0S448 7.156 448 16V32H432C423.156 32 416 39.156 416 48S423.156 64 432 64ZM416 160H432C440.844 160 448 152.844 448 144S440.844 128 432 128H416V112C416 103.156 408.844 96 400 96S384 103.156 384 112V128H368C359.156 128 352 135.156 352 144S359.156 160 368 160H384V176C384 184.844 391.156 192 400 192S416 184.844 416 176V160ZM352 64H368C376.844 64 384 56.844 384 48S376.844 32 368 32H352V16C352 7.156 344.844 0 336 0S320 7.156 320 16V32H304C295.156 32 288 39.156 288 48S295.156 64 304 64H320V80C320 88.844 327.156 96 336 96S352 88.844 352 80V64Z"],
    "alarm-clock": [512, 512, [], "f34e", "M32 112a80.09 80.09 0 0 1 80-80 79.23 79.23 0 0 1 50 18 253.22 253.22 0 0 1 34.44-10.8C175.89 15.42 145.86 0 112 0A112.14 112.14 0 0 0 0 112c0 25.86 9.17 49.41 24 68.39a255.93 255.93 0 0 1 17.4-31.64A78.94 78.94 0 0 1 32 112zM400 0c-33.86 0-63.89 15.42-84.44 39.25A253.22 253.22 0 0 1 350 50.05a79.23 79.23 0 0 1 50-18 80.09 80.09 0 0 1 80 80 78.94 78.94 0 0 1-9.36 36.75A255.93 255.93 0 0 1 488 180.39c14.79-19 24-42.53 24-68.39A112.14 112.14 0 0 0 400 0zM256 64C132.29 64 32 164.29 32 288a222.89 222.89 0 0 0 54.84 146.54L34.34 487a8 8 0 0 0 0 11.32l11.31 11.31a8 8 0 0 0 11.32 0l52.49-52.5a223.21 223.21 0 0 0 293.08 0L455 509.66a8 8 0 0 0 11.32 0l11.31-11.31a8 8 0 0 0 0-11.32l-52.5-52.49A222.89 222.89 0 0 0 480 288c0-123.71-100.29-224-224-224zm0 416c-105.87 0-192-86.13-192-192S150.13 96 256 96s192 86.13 192 192-86.13 192-192 192zm14.38-183.69V168a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v136a16 16 0 0 0 6 12.48l73.75 59a8 8 0 0 0 11.25-1.25l10-12.5a8 8 0 0 0-1.25-11.25z"],
    "alicorn": [640, 512, [], "f6b0", "M631.98 64h-96.92l-.24-.3c5.39-9.45 8.38-20.32 8.38-31.7 0-17.67-14.33-32-32-32H400c-69.18 0-125.38 55.26-127.59 123.92-35.69-9.21-63.11-34.71-81.51-76.61-4-9.16-13.06-15.16-23.03-15.31-10.53.2-18.84 5.36-23.13 14.39C133.63 69.94 128 95.08 128 121.09c0 75.38 56.56 143.6 132.87 161.9 4.42 1.06 8.86-1.96 9.7-6.43l2.97-15.7c.8-4.22-1.93-8.17-6.1-9.2C205.69 236.47 160 181.6 160 121.09c0-16.31 2.72-32.19 8.06-47.38C197.38 130.23 244.1 160 303.94 160l.06-32c0-53.02 42.98-96 96-96h111.2c0 13.29-8.1 24.66-19.63 29.5l20.39 24.78.05 93.88a16 16 0 0 1-10.83 15.15l-25.52 8.71c-9.33 3.19-16.14-2.76-18.48-6.27L432 160l-48-16v100.21c0 26.67-12.65 50.17-32 65.6V480h-64V318.69l-104.43-23.21-32.12 89.47L175.53 480H118l-21.13-87.86a31.698 31.698 0 0 1 .37-16.18l27.63-93.41C107.46 270.37 96 250.24 96 227.37c0-15.82 5.68-30.18 14.82-41.68-4.94-10.84-8.98-22.04-11.4-33.73-8.09 6.94-15.19 15.02-20.76 24.18C35.11 176.87 0 212.27 0 256v56c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8v-56c0-21.5 14.23-39.48 33.72-45.59-.96 5.54-1.71 11.15-1.71 16.96 0 24.2 8.9 47.33 24.53 65.24l-21.97 74.27c-3.12 10.77-3.38 22.03-.8 32.74l21.13 87.86C90.34 501.86 103.21 512 118 512h57.53c20.95 0 36.12-19.75 31.02-39.86l-21.68-85.57 19.29-53.73L256 344.36V480c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V323.8c20.5-21.5 32-49.75 32-79.59v-50.52l14.55 21.82c19.11 28.67 49.98 20.67 55.45 18.8l25.52-8.71c19.44-6.63 32.5-24.89 32.49-45.44l-.03-64.83 92.45-36.66c6.58-4.4 3.47-14.67-4.45-14.67zM464.01 96c0-8.84-7.16-16-16-16s-16 7.16-16 16 7.16 16 16 16c8.83 0 16-7.16 16-16z"],
    "american-sign-language-interpreting": [640, 512, [], "f2a3", "M635.9 213.3c0-.1-41.3-83.1-41.3-83.1-9.6-19.3-33.6-28.5-54.4-18l-55.3 28-79-7.4c-5.1-.5-32.5-.7-59.3 15.8-7.5-14.4-18.5-20.5-32.9-26.1 17-32.5-6.9-77-51.8-70.8C263.5 24.2 241.8 0 213.4 0c-11.3 0-22.3 4-31.1 11.2-45 37.2-74.1 89.9-81.7 147.7L68 218.1l-48.1 27.6c-18.2 10.8-25 33.9-15.8 53.1 0 .1 41.3 83.1 41.3 83.1 9.6 19.3 33.6 28.5 54.4 18l55.3-28c81.1 7.5 81.2 7.5 82.7 7.5 19.9 0 39.1-5.7 55.6-15.9 4.7 9.1 12.2 16.4 21.5 21.1 2.6 1.3 7 3.3 11.3 5-16.9 32.3 6.9 77 51.8 70.8-1.6 27.8 20.7 51.5 48.6 51.5 11.3 0 22.4-4 31.1-11.3 45-37.3 74-89.9 81.7-147.6l32.6-59.2s48-27.6 48.1-27.6c18.2-10.7 25-33.8 15.8-52.9zm-339.6-26.9c-20.4-10.3-44.5-11.7-66.1-4-8.4 3-6.3 15.5 2.7 15.5 33.4 0 58.9 15.1 71.9 42.6 9.2 19.4-19.8 34.9-30 14.3-7-14.4-21.2-23.4-37-23.4-22.6 0-40.9 18.5-40.9 41.1 0 25.4 21.2 41.1 40.9 41.1 15.8 0 30-9 37-23.4 0 0 0-.1.1-.1 9.4-20.2 39.4-5.4 30 14.4-12.3 25.9-38.4 42.7-66.7 42.8-4.7-.4-64-5.9-87-8-1.5-.1-3 .1-4.3.8l-61.4 31.1c-4.1 2.1-9.2.5-11.3-3.6v-.1l-41.1-82.8c-2-4.2-.6-9.3 3.3-11.6l53.7-30.8c1.3-.7 2.3-1.8 3-3.1l38-69.1c.5-.9.8-1.9.9-3 5.7-51.7 30.9-98.3 70.9-131.4 16.6-13.9 38.7 11.3 21 26.1-12.5 10.7-23.1 22.4-31.5 34.8-4.9 7.3 3.9 16.1 11.1 11.1 19.9-13.6 41.8-22 65.2-24.8 8.6-1.1 17.1 4.3 18.5 14.6 1.2 9.3-5.1 17.7-14.4 18.7-15.4 1.9-30.2 7-44 15.3-7.7 4.6-3 16.6 5.8 14.7 24.3-5.4 52.8-1.7 76.2 9.7 20.6 10.4 4.6 39.9-14.5 30.5zM248 272.6c-2 3.3-3.6 9.1-10.2 9.1-2.8 0-8.9-2.3-8.9-9.1 0-5.1 3.9-9.1 8.9-9.1 6.6-.1 8.1 5.6 10.2 9.1zm355.8-33.9l-53.7 30.8c-1.3.7-2.3 1.8-3 3.1l-38 69.1c-.5.9-.8 1.9-.9 3-5.7 51.7-30.9 98.3-71 131.5-16.5 13.8-38.7-11.4-21-26.1 12.5-10.7 23.1-22.3 31.5-34.8 5-7.4-4-16-11.1-11.1-19.9 13.6-41.8 22-65.1 24.8-21.6 2.7-26.2-30.8-4.2-33.3 15.4-1.9 30.2-7 44-15.3 7.7-4.6 3-16.6-5.8-14.7-24.3 5.4-52.8 1.7-76.2-9.7-20.8-10.5-4.5-39.8 14.4-30.5 20.4 10.3 44.5 11.7 66.2 4 8.4-3 6.3-15.5-2.7-15.5-33.4 0-58.9-15.1-71.9-42.6-9.4-19.8 20.5-34.6 30-14.4l.1.1c7 14.4 21.2 23.4 37 23.4 22.6 0 40.9-18.5 40.9-41.1 0-25.4-21.2-41.1-40.9-41.1-15.8 0-30 9-37 23.4l-.1.1c-9.4 20.2-39.4 5.5-30-14.4 12.5-26.3 38.6-42.7 68.2-42.8l85.5 8c1.5.1 3-.1 4.4-.8l61.4-31.1c4.1-2.1 9.2-.5 11.3 3.6v.1l41.1 82.8c1.9 4.2.5 9.2-3.4 11.5zm-211.8.7c1.9-3.3 3.5-9.1 10.2-9.1 2.8 0 8.9 2.3 8.9 9.1 0 5.1-3.9 9.1-8.9 9.1-6.6.1-8.1-5.6-10.2-9.1z"],
    "biohazard": [576, 512, [], "f780", "M288.1 96c17.7 0 34.8 2.7 50.9 7.6 6.5-8.5 11.1-18.4 13.1-29.4-20.2-6.5-41.7-10.1-64-10.1-22.4 0-44 3.7-64.2 10.2 1.9 11 6.6 21 13.1 29.4 16.2-5 33.3-7.7 51.1-7.7zm-.1 144.1c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zM146.1 423.6c9.7-5.6 17.2-13.6 22.6-22.7-28.5-26.4-48.2-62.2-54.4-102.4-.4 0-.8-.2-1.2-.2-10.4 0-20.7 2.9-30 7.9 7.7 46 30.4 86.9 63 117.4zm428.6-147c-13.8-40.3-41.2-74.1-77.2-95.3-12.2-7.2-25.6-12.8-40.1-16.7 3.5-13.9 5.2-27.4 5.2-40.8 0-42.2-15.1-83.2-42.4-115.5-7.3-8.6-19.7-10.9-29.7-5.2-9.7 5.6-14.1 17.4-10.6 27.9 3.7 11.3 5.5 21.5 5.5 31.1 0 54.7-43.6 99.3-97.3 99.3s-97.3-44.5-97.3-99.3c0-9.6 1.8-19.8 5.4-31 3.5-10.7-.9-22.5-10.7-28-9.8-5.6-22.2-3.5-29.6 5.2-27.4 32.3-42.5 73.3-42.5 115.5 0 13.4 1.7 26.9 5.2 40.8-14.5 4-27.9 9.6-40.1 16.7-36 21.1-63.4 55-77.2 95.3-3.7 10.6.5 22.2 10.2 28.1 9.7 5.8 22.2 3.8 29.7-4.8 7.7-8.8 15.4-15.5 23.6-20.3 22.3-13.1 48.3-16.6 73.2-9.9 25.3 6.8 46.4 23.2 59.5 46.2 26.9 47.5 10.9 108.4-35.7 135.8-8.2 4.8-17.7 8.3-29 10.7-11 2.3-18.8 12.1-18.7 23.4.1 11.2 8.1 20.9 19.1 23.1 11 2.1 22.1 3.2 33.1 3.2 30.4 0 60.4-8 86.9-23.6 12.5-7.3 24.1-16.5 34.7-27.3 10.7 10.9 22.3 20 34.7 27.3 36 21.2 78.6 28.5 119.9 20.4 11.1-2.1 18.9-11.6 19.1-23.1.1-11.3-7.8-21.1-18.7-23.4-11.4-2.4-20.8-5.9-29-10.7-46.6-27.4-62.6-88.3-35.7-135.8 13.1-23 34.2-39.4 59.5-46.2 24.9-6.7 50.9-3.2 73.2 9.9 8.2 4.8 15.9 11.4 23.6 20.3 7.5 8.6 20 10.5 29.8 4.7 9.9-5.9 14-17.4 10.4-28zm-145.1-37.8c-33.7 9-61.7 30.8-79 61.3-35.6 62.6-14.3 143 47.2 179.1.2.1.3.2.4.2-20.8-1.7-41.1-8-59.3-18.7-14.1-8.3-27-19.7-38.4-33.8L288 411.5 275.5 427c-11.4 14.1-24.3 25.5-38.4 33.8-18.2 10.7-38.5 17-59.3 18.7.1-.1.3-.2.4-.2 61.6-36.2 82.8-116.5 47.3-179.1-17.3-30.5-45.4-52.3-79.1-61.3-11-3-22.2-4.4-33.2-4.4-22.3 0-44.3 5.9-64.1 17.4C61 234.4 76.5 219.7 94.7 209c13.9-8.1 29.2-13.6 46.9-16.7l18.5-3.2-6.1-17.8c-5.7-16.7-8.6-32.2-8.6-47.5 0-21.1 4.6-41.9 13.3-60.9.4 72 58.2 130.5 129.3 130.5 71 0 128.9-58.5 129.3-130.5 8.7 19 13.3 39.8 13.3 60.9 0 15.2-2.8 30.7-8.5 47.5L416 189l18.5 3.2c17.7 3.1 33 8.5 46.9 16.7 18.2 10.7 33.7 25.4 45.6 42.9-29.7-17.2-64.3-21.9-97.4-13zm32.3 59.8c-6.2 40.2-25.9 76-54.5 102.5 5.5 9.1 12.9 17.1 22.5 22.8 32.7-30.5 55.4-71.4 63.1-117.4-9.4-5.1-19.7-8-30.2-8-.3 0-.6.1-.9.1z"],
    "birthday-cake": [448, 512, [], "f1fd", "M96 96c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm48 160h-32V112h-32v144h-96V112h-32v144h-96V112H80v144H48c-26.5 0-48 21.5-48 48v208h448V304c0-26.5-21.5-48-48-48zm16 224H32v-72.043C48.222 398.478 55.928 384 74.75 384c27.951 0 31.253 32 74.75 32 42.843 0 47.217-32 74.5-32 28.148 0 31.201 32 74.75 32 43.357 0 46.767-32 74.75-32 18.488 0 26.245 14.475 42.5 23.955V480zm0-112.374C406.374 359.752 394.783 352 373.5 352c-43.43 0-46.825 32-74.75 32-27.695 0-31.454-32-74.75-32-42.842 0-47.218 32-74.5 32-28.148 0-31.202-32-74.75-32-21.463 0-33.101 7.774-42.75 15.658V304c0-8.822 7.178-16 16-16h352c8.822 0 16 7.178 16 16v63.626z"],
    "bug": [576, 512, [], "f188", "M544,272H480V150.627L523.314,107.314A16,16,0,0,0,500.686,84.687L457.373,128H415a127.00381,127.00381,0,1,0-254,0H118.627L75.314,84.687A16,16,0,1,0,52.686,107.314L96,150.627V272H32a16,16,0,0,0,0,32H96v24a174.98856,174.98856,0,0,0,30.484,98.889L68.687,484.686a15.99972,15.99972,0,1,0,22.627,22.627l55.616-55.616A175.45165,175.45165,0,0,0,272,504h32a175.45165,175.45165,0,0,0,125.07-52.303l55.616,55.616a15.99972,15.99972,0,0,0,22.627-22.627l-57.797-57.797A174.98856,174.98856,0,0,0,480,328V304h64a16,16,0,0,0,0-32ZM288,32.01263A95.99568,95.99568,0,0,1,383,128H193A95.99568,95.99568,0,0,1,288,32.01263ZM448,328c0,79.401-64.598,144-144,144V236a12.00052,12.00052,0,0,0-12-12h-8a12.00052,12.00052,0,0,0-12,12V472c-79.402,0-144-64.599-144-144V160H448Z"],
    "cat": [576, 512, [], "f6be", "M432 128c-8.84 0-16 7.16-16 16s7.16 16 16 16 16-7.16 16-16-7.16-16-16-16zm48 16c0 8.84 7.16 16 16 16s16-7.16 16-16-7.16-16-16-16-16 7.16-16 16zM544.01 0c-9.32 0-18.39 4.08-24.59 11.52L475.68 64h-23.36l-43.74-52.49A32.024 32.024 0 0 0 383.99 0C366.37 0 352 14.3 352 32v128h-16c-103.82 0-194.18 58.53-240 144.27V176c0-44.11-35.88-80-80-80-8.84 0-16 7.16-16 16s7.16 16 16 16c26.47 0 48 21.53 48 48v256c0 44.11 35.88 80 80 80h208c17.66 0 32-14.36 32-32 0-33.05-25.19-60.33-57.38-63.66L416 376.63V480c0 17.64 14.34 32 32 32h32c17.66 0 32-14.36 32-32V260.77c37.7-18.05 64-56.25 64-100.77V32c0-17.7-14.37-32-31.99-32zM480 480h-32V327.38l-144.81 64.37c-3.98-39-30.03-72.23-67.25-84.89-4.33-1.47-8.99 1.34-10.1 5.77l-3.88 15.55c-1.03 4.12 1.41 8.09 5.39 9.57A68.41 68.41 0 0 1 272 401.97V448h48c17.66 0 32 14.36 32 32H144c-26.47 0-48-21.53-48-48 0-132.34 107.66-240 240-240h21.22c13.87 46.1 56.22 80 106.78 80 5.48 0 10.73-.85 16-1.62V480zm64-320c0 44.18-35.82 80-80 80s-80-35.82-80-80V32l53.33 64h53.33L544 32v128z"],
    "cat-space": [640, 512, [], "e001", "M512,176a16,16,0,1,0-16-16A15.9908,15.9908,0,0,0,512,176ZM576,32.72461V32l-.46094.3457C548.81445,12.30469,515.97461,0,480,0s-68.81445,12.30469-95.53906,32.3457L384,32v.72461C345.35156,61.93164,320,107.82422,320,160c0,.38086.10938.73242.11133,1.11328A272.01015,272.01015,0,0,0,96,304.26562V176A80.08413,80.08413,0,0,0,16,96a16,16,0,0,0,0,32,48.05249,48.05249,0,0,1,48,48V432a80.08413,80.08413,0,0,0,80,80H352a32.03165,32.03165,0,0,0,32-32,64.0956,64.0956,0,0,0-57.375-63.65625L416,376.625V480a32.03165,32.03165,0,0,0,32,32h32a32.03165,32.03165,0,0,0,32-32V316.77539A160.036,160.036,0,0,0,640,160C640,107.82422,614.64844,61.93164,576,32.72461ZM480,32a126.94015,126.94015,0,0,1,68.78906,20.4082L512,80H448L411.21094,52.4082A126.94015,126.94015,0,0,1,480,32Zm64,64v64a64,64,0,0,1-128,0V96l21.334,16h85.332ZM480,480H448V351.99609A15.99929,15.99929,0,0,0,425.5,337.377L303.1875,391.75a100.1169,100.1169,0,0,0-67.25-84.89062,7.96929,7.96929,0,0,0-10.09375,5.76562l-3.875,15.5625a8.16346,8.16346,0,0,0,5.375,9.5625C252,346.875,272,375.625,272,401.90625V448h48a32.03165,32.03165,0,0,1,32,32H144c-26.94531,0-48.13086-22.27344-47.99609-49.21875.63671-127.52734,101.31054-231.53516,227.36914-238.14063A160.02931,160.02931,0,0,0,480,320Zm0-192A128.14414,128.14414,0,0,1,352,160c0-32.16992,12.334-61.25391,32-83.76367V160a96,96,0,0,0,192,0V76.23633C595.666,98.74609,608,127.83008,608,160A128.14414,128.14414,0,0,1,480,288ZM432,160a16,16,0,1,0,16-16A15.9908,15.9908,0,0,0,432,160ZM162.94531,68.76953l39.71094,16.56055,16.5625,39.71094a5.32345,5.32345,0,0,0,9.53906,0l16.5586-39.71094,39.71484-16.56055a5.336,5.336,0,0,0,0-9.541l-39.71484-16.5586L228.75781,2.957a5.325,5.325,0,0,0-9.53906,0l-16.5625,39.71289-39.71094,16.5586a5.336,5.336,0,0,0,0,9.541Z"],
    "cauldron": [448, 512, [], "f6bf", "M272 128c26.51 0 48-21.49 48-48s-21.49-48-48-48-48 21.49-48 48 21.49 48 48 48zm0-64c8.82 0 16 7.18 16 16s-7.18 16-16 16-16-7.18-16-16 7.18-16 16-16zm176 120v-16c0-4.42-3.58-8-8-8H8c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8h46.73C20.78 237.78 0 293.62 0 345.6c0 39.08 11.82 70.65 32 95.53V496c0 8.84 7.16 16 16 16s16-7.16 16-16v-25.34C104.66 498.69 161.28 512 224 512c62.71 0 119.34-13.31 160-41.33V496c0 8.84 7.16 16 16 16s16-7.16 16-16v-54.87c20.18-24.88 32-56.45 32-95.53 0-51.98-20.78-107.82-54.73-153.6H440c4.42 0 8-3.58 8-8zm-32 161.6C416 466.9 281.73 480 224 480S32 466.9 32 345.6c0-52.25 24.14-110.02 63.64-153.6h256.71C391.86 235.58 416 293.35 416 345.6zM160 64c17.67 0 32-14.33 32-32S177.67 0 160 0s-32 14.33-32 32 14.33 32 32 32z"],
    "code": [576, 512, [], "f121", "M228.5 511.8l-25-7.1c-3.2-.9-5-4.2-4.1-7.4L340.1 4.4c.9-3.2 4.2-5 7.4-4.1l25 7.1c3.2.9 5 4.2 4.1 7.4L235.9 507.6c-.9 3.2-4.3 5.1-7.4 4.2zm-75.6-125.3l18.5-20.9c1.9-2.1 1.6-5.3-.5-7.1L49.9 256l121-102.5c2.1-1.8 2.4-5 .5-7.1l-18.5-20.9c-1.8-2.1-5-2.3-7.1-.4L1.7 252.3c-2.3 2-2.3 5.5 0 7.5L145.8 387c2.1 1.8 5.3 1.6 7.1-.5zm277.3.4l144.1-127.2c2.3-2 2.3-5.5 0-7.5L430.2 125.1c-2.1-1.8-5.2-1.6-7.1.4l-18.5 20.9c-1.9 2.1-1.6 5.3.5 7.1l121 102.5-121 102.5c-2.1 1.8-2.4 5-.5 7.1l18.5 20.9c1.8 2.1 5 2.3 7.1.4z"],
    "code-branch": [384, 512, [], "f126", "M384 144c0-44.2-35.8-80-80-80s-80 35.8-80 80c0 39.2 28.2 71.8 65.5 78.7-.8 17.2-5 30.4-12.7 40-17.5 21.8-53.1 25.2-90.7 28.7-28.2 2.6-57.4 5.4-80.4 16.9-3.4 1.7-6.7 3.6-9.7 5.7V158.4c36.5-7.4 64-39.7 64-78.4 0-44.2-35.8-80-80-80S0 35.8 0 80c0 38.7 27.5 71 64 78.4v195.2C27.5 361 0 393.3 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-36.9-24.9-67.9-58.9-77.2 5-9.6 12.3-14.6 19-18 17.5-8.8 42.5-11.2 68.9-13.7 42.6-4 86.7-8.1 112.7-40.5 12.4-15.5 19-35.5 19.8-60.7C357.3 214 384 182.1 384 144zM32 80c0-26.5 21.5-48 48-48s48 21.5 48 48-21.5 48-48 48-48-21.5-48-48zm96 352c0 26.5-21.5 48-48 48s-48-21.5-48-48c0-26.4 21.4-47.9 47.8-48h.6c26.3.2 47.6 21.7 47.6 48zm187.8-241.5L304 192c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48c0 22.4-15.4 41.2-36.2 46.5z"],
    "code-commit": [640, 512, [], "f386", "M320 128c34.19 0 66.33 13.31 90.51 37.49S448 221.81 448 256s-13.31 66.33-37.49 90.51S354.19 384 320 384s-66.33-13.31-90.51-37.49S192 290.19 192 256s13.31-66.33 37.49-90.51S285.81 128 320 128m0-32c-88.37 0-160 71.63-160 160s71.63 160 160 160 160-71.63 160-160S408.37 96 320 96zm308 144H511.33c.44 5.3.67 10.63.67 16s-.23 10.7-.67 16H628c6.63 0 12-5.37 12-12v-8c0-6.63-5.37-12-12-12zm-500 16c0-5.37.23-10.7.67-16H12c-6.63 0-12 5.37-12 12v8c0 6.63 5.37 12 12 12h116.67c-.44-5.3-.67-10.63-.67-16z"],
    "code-merge": [384, 512, [], "f387", "M304 192c-41.7 0-76 32-79.7 72.8-25.2-1.3-61.6-7.9-88.8-31.7-20.3-17.8-32.8-43-37.5-75.1 35.5-8.2 62-40 62-77.9 0-44.2-35.8-80-80-80S0 35.8 0 80c0 38.7 27.5 71 64 78.4v195.2C27.5 361 0 393.3 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-38.7-27.5-71-64-78.4V237.4c5.5 7.2 11.7 13.9 18.6 19.9C151 289 197.9 296.1 228 297c10.5 31.9 40.5 55 76 55 44.2 0 80-35.8 80-80s-35.8-80-80-80zM32 80c0-26.5 21.5-48 48-48s48 21.5 48 48-21.5 48-48 48-48-21.5-48-48zm96 352c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm176-112c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z"],
    "coffee": [576, 512, [], "f0f4", "M517.9 448H26.1c-24.5 0-33.1-32-20-32h531.8c13.1 0 4.5 32-20 32zM576 159.1c.5 53.4-42.7 96.9-96 96.9h-32v32c0 53-43 96-96 96H160c-53 0-96-43-96-96V76c0-6.6 5.4-12 12-12h402.8c52.8 0 96.7 42.2 97.2 95.1zM416 96H96v192c0 35.3 28.7 64 64 64h192c35.3 0 64-28.7 64-64V96zm128 64c0-35.3-28.7-64-64-64h-32v128h32c35.3 0 64-28.7 64-64z"],
    "comment-smile": [512, 512, [], "f4b4", "M256 32C114.6 32 0 125.1 0 240c0 47.6 19.9 91.2 52.9 126.3C38 405.7 7 439.1 6.5 439.5c-6.6 7-8.4 17.2-4.6 26S14.4 480 24 480c61.5 0 110-25.7 139.1-46.3C192 442.8 223.2 448 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm0 384c-28.3 0-56.3-4.3-83.2-12.8l-15.2-4.8-13 9.2c-23 16.3-58.5 35.3-102.6 39.6 12-15.1 29.8-40.4 40.8-69.6l7.1-18.7-13.7-14.6C47.3 313.7 32 277.6 32 240c0-97 100.5-176 224-176s224 79 224 176-100.5 176-224 176zm75.8-130.7C313 307.4 285.4 320 256 320s-57-12.6-75.8-34.6c-5.7-6.7-15.8-7.4-22.5-1.8-6.8 5.8-7.5 15.8-1.8 22.6C180.7 335.3 217.2 352 256 352s75.3-16.7 100.2-45.9c5.8-6.7 4.9-16.8-1.8-22.6-6.7-5.7-16.8-4.9-22.6 1.8zM192 216c13.3 0 24-10.7 24-24s-10.7-24-24-24-24 10.7-24 24 10.7 24 24 24zm128 0c13.3 0 24-10.7 24-24s-10.7-24-24-24-24 10.7-24 24 10.7 24 24 24z"],
    "dragon": [640, 512, [], "f6d5", "M481.01 119.95c14.92.86 27.35-9.89 30.88-24.58L453.47 80c-6.49 27.12 15.51 39.26 27.54 39.95zm54.5 131.8c-29.84-16.98-55.61-31.64-55.61-51.38V192h16.96l28.62 22.03c8.34 6.42 18.74 9.97 29.27 9.97h29.18c21.15 0 40.09-14.17 46.02-34.45l7.4-25.16c5.84-19.8 1.88-41.44-10.62-57.91L569.8 31.59C554.78 11.81 530.98 0 506.14 0H297.16c-19.47 0-33.09 24.04-15.4 41.25l37.49 30.25-32.55 13.42c-16.19 7.94-19.14 32.81 1.13 42.64l48.11 19.25v50.89l-190.3-47.88c-19.18-4.86-39.68 2.83-50.99 19.08L3.76 299.12c-5.03 7.91-5 17.72.03 25.59 1.69 2.62 9.54 13.11 24.99 10.91l115.02-21.8-12.07 17.3c-5.03 7.91-5 17.72.03 25.59 6.7 10.45 17.87 11.86 24.15 11.05l202.87-27.39c8.33 16.71 18.17 32.35 31.17 45.73-130.55 8.75-252.39 36.8-364.13 61.33C10.86 450.7.01 464.1.01 479.31c0 18 14.75 32.64 32.87 32.64l474.01.05c42.65 0 83.14-19.77 108.29-52.89 23.4-30.8 30.49-68.73 19.9-106.8-14.5-52.15-61.68-79-99.57-100.56zM41.72 300.62l79.17-113.41c3.75-5.39 10.59-7.86 17-6.36l84.07 21.02L170 276.3 41.72 300.62zm127.18 33.1l86.23-123.48 80.79 20.5c0 47.9 8.68 72.63 10.6 79L168.9 333.72zM506.89 480H32c230.53-56.77 352.62-62.36 400.47-64.02 15.54-.53 21.22-20.83 8.22-29.34-48.96-32.23-72.76-80.92-72.76-148.83V135.98c0-6.55-3.97-12.42-10.06-14.86l-38.15-15.23 36.71-15.09c5.22-2.16 8.94-6.91 9.75-12.5s-1.41-11.2-5.81-14.75L321.15 32h184.99c14.9 0 29.18 7.08 38.18 18.95l56.92 74.91c6.38 8.38 8.4 19.39 5.44 29.48l-7.4 25.19c-2 6.75-8.31 11.47-15.34 11.47h-29.18c-3.56 0-6.9-1.14-9.75-3.33l-32.96-25.36a16.01 16.01 0 0 0-9.75-3.31h-38.4c-8.84 0-16 7.16-16 16v24.38c0 38.34 34.87 58.19 71.8 79.19 36.18 20.59 73.58 41.89 84.57 81.33 19.36 69.86-41.14 119.1-97.38 119.1z"],
    "duck": [576, 512, [], "f6d8", "M432 256c70.69 0 144-57.31 144-128h-97.57c-.44-3.21-.56-6.36-1.29-9.61-9.02-40.55-41.61-73.73-82.06-83.21C385.9 33.02 376.83 32 368 32c-61.86 0-112 50.14-112 112v112h-60.73c-25.68 0-49.79-10.07-69.95-25.99-5-3.95-11.13-6.02-17.35-6.02-3.61 0-7.24.7-10.71 2.12C86.77 230.47 80 240.6 80 251.95c0 1.39.37 2.67.41 4.05H32.25C12.87 256-2.72 273.21.4 292.34 17.76 398.77 110.13 480 221.47 480h99.94c68.24 0 128.85-55.86 126.53-124.06-1.01-29.74-13.09-56.53-31.93-76.98V256H432zm46.73-96h59.79c-11.59 32.68-56.4 57.25-91.47 62.8 16.7-16.61 28.14-38.37 31.68-62.8zm-86.27 140.64c14.44 15.68 22.78 35.7 23.49 56.38.75 22.18-7.95 43.83-24.5 60.96-18.44 19.08-43.97 30.02-70.04 30.02h-99.94c-94.97 0-174.05-69.31-189.33-160h52.82c16.21 64.17 73.95 112 143.09 112H248c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8h-19.96c-60.8 0-110.84-47-115.66-106.59 21.26 17.65 49.09 26.59 82.88 26.59H288V144c0-44.18 35.82-80 80-80s80 35.82 80 80c0 33.83-21.07 62.6-50.75 74.3-12.82 6.12-11.61 5.54-13.25 6.33v66.83l8.46 9.18zM368 128c-8.84 0-16 7.16-16 16s7.16 16 16 16 16-7.16 16-16-7.16-16-16-16z"],
    "dumpster-fire": [640, 512, [], "f794", "M551.1 163.2c-14.9 13.3-28.3 27.2-40.2 41.2-19.5-25.8-43.6-52-71-76.4-70.2 62.7-120 144.3-120 193.6 0 87.5 71.6 158.4 160 158.4s160-70.9 160-158.4c.1-36.6-37-112.2-88.8-158.4zm-57 283.4c-4.7.5-9.2 1.4-14.1 1.4s-9.4-.9-14.1-1.4c-31.8-6.4-55.8-34.2-55.8-67.4 0-14 15.4-46.1 44.5-78.3 7.1 7.6 13.6 15.3 19.4 23l24.1 31.9 25.9-30.5c.1-.1.1-.2.2-.2 16.2 22.2 25.5 46.1 25.5 54.1.1 33.2-23.9 61-55.6 67.4zm85.5-46.6c1.4-6.7 2.2-13.7 2.2-20.8 0-23.3-23.6-71.4-56.6-100.8-9.5 8.4-18 17.3-25.6 26.2-12.4-16.4-27.8-33.1-45.2-48.6-44.7 39.9-76.4 91.9-76.4 123.2 0 7.1.8 14.1 2.2 20.8-17.5-21.6-28.4-48.7-28.4-78.4 0-31.6 32.5-93.2 88.1-149.5 16.8 16.7 32.2 34.3 45.3 51.6l24.1 31.9 25.9-30.5c4.9-5.8 9.9-11.4 15.1-16.8 34.3 39.9 57.5 91.4 57.5 113.3.2 29.8-10.7 56.8-28.2 78.4zM128 416v32H96L67.8 192h272.8c7.5-10.7 15.5-21.4 24.3-32H304V64h106.9l8 40c6-5.3 13.6-8 21.1-8 3.5 0 7 .7 10.3 1.9L443.5 64h78.7l14.3 71.3c4.6-2.4 9.5-4.1 14.6-4.1 6.6 0 12.9 2.4 18.5 6.4l-18.1-90.5C549.7 38.2 543.3 32 536 32H40c-7.3 0-13.7 6.2-15.5 15.1l-24 120C-2 179.8 5.6 192 16 192h19.5l7.1 64H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h38.2L64 448v16c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-16h176.8c-8.8-9.8-16.7-20.5-23.3-32H128zm37.1-352H272v96H145.9l19.2-96zM34.6 160l19.2-96h78.7l-19.2 96H34.6z"],
    "file-code": [384, 512, [], "f1c9", "M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zm-22.627 22.628a15.89 15.89 0 0 1 4.195 7.431H256V32.491a15.88 15.88 0 0 1 7.431 4.195l83.883 83.883zM336 480H48c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16h176v104c0 13.255 10.745 24 24 24h104v304c0 8.837-7.163 16-16 16zm-161.471-67.404l-25.928-7.527a5.1 5.1 0 0 1-3.476-6.32l58.027-199.869a5.1 5.1 0 0 1 6.32-3.476l25.927 7.527a5.1 5.1 0 0 1 3.476 6.32L180.849 409.12a5.1 5.1 0 0 1-6.32 3.476zm-48.446-47.674l18.492-19.724a5.101 5.101 0 0 0-.351-7.317L105.725 304l38.498-33.881a5.1 5.1 0 0 0 .351-7.317l-18.492-19.724a5.1 5.1 0 0 0-7.209-.233L57.61 300.279a5.1 5.1 0 0 0 0 7.441l61.263 57.434a5.1 5.1 0 0 0 7.21-.232zm139.043.232l61.262-57.434a5.1 5.1 0 0 0 0-7.441l-61.262-57.434a5.1 5.1 0 0 0-7.209.233l-18.492 19.724a5.101 5.101 0 0 0 .351 7.317L278.275 304l-38.499 33.881a5.1 5.1 0 0 0-.351 7.317l18.492 19.724a5.1 5.1 0 0 0 7.209.232z"],
    "fist-raised": [384, 512, [], "f6de", "M350.82 167.94c.46-2.63 1.18-5.18 1.18-7.94V80c0-26.51-21.49-48-48-48h-16c-6.32 0-12.32 1.29-17.85 3.52C264.62 15.12 246.12 0 224 0h-16c-22.12 0-40.62 15.12-46.15 35.52C156.32 33.29 150.32 32 144 32h-16c-22.12 0-40.62 15.12-46.15 35.52C76.32 65.29 70.32 64 64 64H48C21.49 64 0 85.49 0 112v186.98c0 38.17 15.16 74.78 42.15 101.77L64 422.62V504c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8v-94.63l-31.22-31.23A111.97 111.97 0 0 1 32 298.98v-45.93c5.03 1.79 10.36 2.95 16 2.95h16c12.34 0 23.49-4.81 32-12.48 8.51 7.68 19.66 12.48 32 12.48h16c13.16 0 25.09-5.34 33.77-13.95.24.3 9.34 14.63 30.62 23.65-19.67 15.79-33.92 35.74-57.27 70.77a7.992 7.992 0 0 0 2.22 11.09l13.31 8.88a7.992 7.992 0 0 0 11.09-2.22l6.31-9.47c31.91-47.87 51.56-70.29 96.12-72.56 4.25-.22 7.82-3.67 7.82-7.93V248c0-4.42-3.58-8-8-8h-40.67c-26.16 0-47.36-21.21-47.36-47.36v-.74c0-8.78 7.12-15.9 15.9-15.9H288c35.35 0 64 28.65 64 64v88.32c0 25.41-10.09 49.77-28.06 67.74L288 432v72c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8v-58.75l26.51-26.51c24-24 37.49-56.56 37.49-90.51V240c0-28.87-13.01-54.46-33.18-72.06zM80 208c0 8.84-7.16 16-16 16H48c-8.84 0-16-7.16-16-16v-96c0-8.84 7.16-16 16-16h16c8.84 0 16 7.16 16 16v96zm80 0c0 8.84-7.16 16-16 16h-16c-8.84 0-16-7.16-16-16V80c0-8.84 7.16-16 16-16h16c8.84 0 16 7.16 16 16v128zm80-64h-32.03c-5.58 0-10.92 1.1-15.97 2.85V48c0-8.84 7.16-16 16-16h16c8.84 0 16 7.16 16 16v96zm80 5.88c-10.05-3.57-20.72-5.88-32-5.88h-16V80c0-8.84 7.16-16 16-16h16c8.84 0 16 7.16 16 16v69.88z"],
    "flower-daffodil": [512, 512, [], "f800", "M288 144a32 32 0 1 0-32 32 32 32 0 0 0 32-32zm207.87 144H448.6A224 224 0 0 0 272 374v-96.54A85.76 85.76 0 0 0 312.87 288 87.22 87.22 0 0 0 400 200.89 85.82 85.82 0 0 0 378.62 144 85.82 85.82 0 0 0 400 87.11 87.22 87.22 0 0 0 312.87 0 85.8 85.8 0 0 0 256 21.36 85.8 85.8 0 0 0 199.13 0 87.22 87.22 0 0 0 112 87.11 85.82 85.82 0 0 0 133.38 144 85.82 85.82 0 0 0 112 200.89 87.22 87.22 0 0 0 199.13 288 85.64 85.64 0 0 0 240 277.46V374a224 224 0 0 0-176.6-86H16.13c-9.19 0-17 9-16.06 19.65C10.06 422.15 106.43 512 223.83 512h64.34c117.4 0 213.77-89.85 223.76-204.35.92-10.65-6.87-19.65-16.06-19.65zM240 480h-16.17c-93.89 0-174.52-69.14-189.94-160H63.4a192.45 192.45 0 0 1 165 93.35C242 436.09 240 454.05 240 480zm16-263.61l-12.84 17.22a54.58 54.58 0 0 1-44 22.39A55.17 55.17 0 0 1 144 200.89a54.59 54.59 0 0 1 22.41-44.06L183.63 144l-17.22-12.83A54.59 54.59 0 0 1 144 87.11 55.17 55.17 0 0 1 199.13 32a54.58 54.58 0 0 1 44 22.39L256 71.61l12.84-17.22a54.58 54.58 0 0 1 44-22.39A55.17 55.17 0 0 1 368 87.11a54.59 54.59 0 0 1-22.41 44.06L328.37 144l17.22 12.83A54.59 54.59 0 0 1 368 200.89 55.17 55.17 0 0 1 312.87 256a54.58 54.58 0 0 1-44-22.39zM288 480h-16c0-26-2-43.9 11.63-66.65A192.45 192.45 0 0 1 448.6 320h29.51C462.69 410.86 382.05 480 288 480z"],
    "flower-tulip": [512, 512, [], "f801", "M495.87 288H448.6A224 224 0 0 0 272 374v-86a144 144 0 0 0 144-144V16a16 16 0 0 0-25.45-12.88l-73.91 53.64-48.35-51a16 16 0 0 0-24.58 0l-48.35 51-73.91-53.64A16 16 0 0 0 96 16v128a144 144 0 0 0 144 144v86a224 224 0 0 0-176.6-86H16.13c-9.19 0-17 9-16.06 19.65C10.06 422.15 106.43 512 223.83 512h64.34c117.4 0 213.77-89.85 223.76-204.35.92-10.65-6.87-19.65-16.06-19.65zM128 144V47.41l71.28 51.73L256 39.3l56.72 59.84L384 47.41V144a112 112 0 0 1-112 112h-32a112 112 0 0 1-112-112zm112 336h-16.17c-93.89 0-174.52-69.14-189.94-160H63.4a192.45 192.45 0 0 1 165 93.35C242 436.09 240 454.05 240 480zm48 0h-16c0-26-2-43.9 11.63-66.65A192.45 192.45 0 0 1 448.6 320h29.51C462.69 410.86 382.05 480 288 480z"],
    "globe-americas": [496, 512, [], "f57d", "M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm215.72 253.45l-42.82-10.71c-1.97-.5-3.66-1.67-4.75-3.33l-17.97-26.97a8.05 8.05 0 0 1 0-8.88l19.59-29.39c.78-1.16 1.81-2.09 3.06-2.7l23.97-11.99C457.03 194.53 464 224.44 464 256c0 1.84-.23 3.62-.28 5.45zM32 256c0-11.92 1.22-23.53 3.09-34.93 7.16 10.6 14.52 21.46 19.91 29.36 5.88 8.67 12.81 16.61 21.38 24.34 10.72 9.69 22.56 17.83 35.16 24.16 13.81 6.97 34.06 17.95 48.28 25.83 5.03 2.8 8.19 8.16 8.19 13.97v32.02c0 12.81 5 24.88 14.06 33.94 12.66 12.66 18.91 31.67 17.94 39.94v21.81C103.95 444.53 32 358.59 32 256zm199.92 215.19l-.08-24.44c2.5-18.58-9.44-46.98-27.16-64.69-2.97-2.98-4.69-7.11-4.69-11.31v-32.02c0-17.47-9.47-33.55-24.72-41.97-14.5-8.03-35.19-19.27-49.34-26.41-10.06-5.05-19.53-11.56-28.94-20.05a100.36 100.36 0 0 1-15.56-17.89c-9.66-14.19-25.54-37.72-35.4-52.35 25.98-68.87 85.98-121.14 159.56-135.85L257.38 96l-15.03 15.03c-9.03 9.03-9.34 23.53-.94 32.94l-5.72.03c-6.25 0-12.19 2.41-16.72 6.8l-9.91 9.64c-7.56 7.3-9.47 18.53-4.75 27.95l4 7.98c-6.94-2.75-14.78-3.12-22.03-.66l-31.19 10.39A27.893 27.893 0 0 0 136 232.6c0 10.66 5.91 20.23 15.44 25l11.09 5.55c10.72 5.36 22.62 8.38 34.62 8.8 2.38 2.3 6.25 7.56 8.69 10.89 5.91 8.08 11.5 15.72 19 19.47l3.38 1.69h70.53c4.22 0 8.34 1.7 11.31 4.69l13.69 13.69a14.66 14.66 0 0 1 4.25 10.27c0 8.05-3.28 15.92-9.06 21.66l-11.34 11.33a39.93 39.93 0 0 0-10.25 17.88l-1.12 4.41c-.94 3.69-1.84 7.38-3.19 11l-26.78 72.17c-6.03.51-12.09.92-18.25.92-5.44-.02-10.76-.44-16.09-.83zm70.82-6.49L323 410.09c1.78-4.7 3.03-9.53 4.25-14.36l1.03-4.05c.34-1.31 1.06-2.55 4.09-5.58l9.19-9.16c11.72-11.64 18.44-27.8 18.44-44.31 0-12.25-4.97-24.23-13.62-32.89l-13.69-13.69c-8.94-8.94-21.31-14.06-33.94-14.06h-60.94c-1.91-2.23-4.34-5.59-6.16-8.06C223.44 252.72 214.12 240 200 240c-8 0-16-1.89-23.16-5.47l-2.34-1.17 21.91-7.3 9.28 8.06c4.38 3.78 9.94 5.88 15.72 5.88h5.66c8.38 0 16-4.25 20.41-11.39 4.41-7.12 4.81-15.86 1.06-23.34l-12.97-25.95 3.38-3.31h5.75c6.41 0 12.44-2.5 16.97-7.03l8-8c9.03-9.03 9.34-23.53.94-32.94l9.41-9.41c6.03-6.05 9.38-14.08 9.38-22.62s-3.34-16.58-9.38-22.62l-33.31-33.31c.44 0 .87-.07 1.31-.07 76.13 0 143.04 39.68 181.52 99.35l-22.98 11.49a39.974 39.974 0 0 0-15.38 13.58l-19.59 29.39c-9 13.48-9 30.89 0 44.38l17.97 26.97c5.53 8.28 13.88 14.17 23.59 16.61l47.38 11.84c-14.72 83.15-77.04 149.87-157.79 171.08z"],
    "head-side-mask": [512, 512, [], "e063", "M512,288a31.66,31.66,0,0,0-2.77-13c-21-47.12-48.5-151.75-73.12-186.75A208.11,208.11,0,0,0,266.11,0H197.68C93.48,0,4,80.61.13,184.74-2.08,244.4,23.08,298.13,64,334.88V504a8,8,0,0,0,8,8H88a8,8,0,0,0,8-8l0-183.4-10.61-9.53a159.87,159.87,0,0,1-52.79-133l.68-.31L224,316.51V504a8,8,0,0,0,8,8H401.88a64,64,0,0,0,60.71-43.76l47.77-143.31A32,32,0,0,0,512,314.81Zm-44.38,64H336a16,16,0,0,0,0,32H456.94l-10.67,32H336a16,16,0,0,0,0,32h99.6l-3.38,10.12A32,32,0,0,1,401.88,480H256V320H478.27Zm12.16-64H239.21L40.69,143.61C62.58,79.4,126.15,32,200,32h66.15a176.21,176.21,0,0,1,143.82,74.66c12.48,17.75,29,66.57,42.35,105.8,9.78,28.83,19,56.06,27.49,75.48ZM320,160a32,32,0,1,0,32,32A32.07,32.07,0,0,0,320,160Z"],
    "heart": [512, 512, [], "f004", "M462.3 62.7c-54.5-46.4-136-38.7-186.6 13.5L256 96.6l-19.7-20.3C195.5 34.1 113.2 8.7 49.7 62.7c-62.8 53.6-66.1 149.8-9.9 207.8l193.5 199.8c6.2 6.4 14.4 9.7 22.6 9.7 8.2 0 16.4-3.2 22.6-9.7L472 270.5c56.4-58 53.1-154.2-9.7-207.8zm-13.1 185.6L256.4 448.1 62.8 248.3c-38.4-39.6-46.4-115.1 7.7-161.2 54.8-46.8 119.2-12.9 142.8 11.5l42.7 44.1 42.7-44.1c23.2-24 88.2-58 142.8-11.5 54 46 46.1 121.5 7.7 161.2z"],
    "heart-broken": [512, 512, [], "f7a9", "M473.7 73.9c-39.6-41.2-83.8-41.7-95.5-41.7-28.7 0-57.5 9.4-81.3 28.2-5.2 4.1-7 11.4-4.9 17.6l25 75.4-85.8 57.2c-6.2 4.1-8.7 12-6.1 18.9l22.1 58.8-78-78 79.7-53.2c6-4 8.6-11.5 6.3-18.3l-17.4-52.5c-1.7-5-4.6-9.8-8.4-13.4-43.9-41.6-80.9-41.1-95-41.1-12 0-54.1 0-96.1 41.9C-10.4 123.7-12.5 203 31 256l212.1 218.5c3.5 3.6 8.2 5.5 12.8 5.5 4.7 0 9.3-1.8 12.8-5.5L481 256c43.5-53 41.4-132.3-7.3-182.1zM457 234.8l-201 207-201-207C22.3 194 25 133.4 61 96.6 81.1 76.4 103.8 64 134.4 64c27.3 0 51.6 10.3 72.8 32l13.7 41.5-85.8 57.2c-8.4 5.6-9.6 17.5-2.4 24.6l130.9 130.9c15.2 15.2 40.4-1 32.9-21.2l-37-98.8 85.4-57c6-4 8.6-11.5 6.3-18.4L326 79c15.6-9.7 33.6-14.8 52.2-14.8 26.7 0 51.3 9.9 72.6 32.1 36.3 37.1 38.9 97.7 6.2 138.5z"],
    "heart-circle": [496, 512, [], "f4c7", "M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 464c-119.1 0-216-96.9-216-216S128.9 40 248 40s216 96.9 216 216-96.9 216-216 216zm116-318.4c-41.9-36.3-89.5-8.4-104.9 7.7L248 172.9l-11.1-11.6c-26.6-27.9-72.5-35.9-104.9-7.7-35.3 30.6-37.2 85.6-5.6 118.7l108.9 114.1c7 7.4 18.4 7.4 25.5 0l108.9-114.1c31.5-33.2 29.7-88.1-5.7-118.7zm-17 96.5l-99 103.8-99-103.8c-16.7-17.5-20.4-51.6 3.4-72.1 22.2-19.3 50-6.8 61.9 5.7L248 219l33.7-35.3c8.7-9.2 37.5-26.8 61.9-5.7 23.8 20.5 20.1 54.5 3.4 72.1z"],
    "heart-square": [448, 512, [], "f4c8", "M340 145.6c-14.4-12.5-30.6-17.6-46.4-17.6-22.8 0-44.6 10.7-58.6 25.3l-11 11.6-11.1-11.6C199.2 139 177.3 128 154.2 128c-15.7 0-31.8 5.1-46.3 17.6-35.3 30.6-37.2 85.6-5.6 118.7l108.9 114.1c7 7.4 18.4 7.4 25.5 0l108.9-114.1c31.6-33.2 29.8-88.1-5.6-118.7zm-17 96.5l-99 103.8-99-103.8c-16.7-17.5-20.4-51.6 3.4-72.1 8.2-7.1 17.3-9.9 26.3-9.9 13.9 0 27.3 6.9 35.6 15.6L224 211l33.7-35.3c8.2-8.6 21.7-15.5 35.6-15.5 8.9 0 18.1 2.8 26.2 9.9 23.9 20.4 20.2 54.4 3.5 72zM400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm16 400c0 8.8-7.2 16-16 16H48c-8.8 0-16-7.2-16-16V80c0-8.8 7.2-16 16-16h352c8.8 0 16 7.2 16 16v352z"],
    "heartbeat": [512, 512, [], "f21e", "M468.7 76.5C423.6 32.2 375 32 362.3 32c-12.7 0-61.5.2-106.3 44.4C211.3 32.3 162.5 32 149.7 32c-12.7 0-61.4.2-106.4 44.5C15.4 104 0 140.7 0 179.9 0 214.1 12.3 246 33.8 272h120.8l29.9-71.8 56.9 126.4c5.5 12.3 22.9 12.7 28.9.6l49.7-99.4 22.1 44.2h136c21.5-26 33.8-57.9 33.8-92.1.1-39.2-15.3-75.9-43.2-103.4zM462.5 240H361.9l-27.6-55.2c-5.9-11.8-22.7-11.8-28.6 0l-48.9 97.9-58.2-129.3c-5.8-12.8-24-12.5-29.4.4L133.3 240H49.5c-9.2-14.6-42.6-82.7 18.3-142.7C90.4 75.1 120 64 149.7 64c33.9 0 54.5 6.3 106.3 57.3C311 67.1 330.5 64 362.3 64c29.7 0 59.3 11.1 81.8 33.3 61 60.1 27.5 128.2 18.4 142.7zM268.7 443.4c-6.2 6.1-16.2 6.1-22.4 0L108.9 304H64l159.9 162.2c18.7 18.5 48.6 18.4 67.3 0L448 304h-44.5L268.7 443.4z"],
    "jug": [448, 512, [], "f8c6", "M304 272H144a48.05 48.05 0 0 0-48 48v64a48.05 48.05 0 0 0 48 48h160a48 48 0 0 0 48-48v-64a48 48 0 0 0-48-48zm16 112a16 16 0 0 1-16 16H144a16 16 0 0 1-16-16v-64a16 16 0 0 1 16-16h160a16 16 0 0 1 16 16zm128-248a71.75 71.75 0 0 0-137.71-28.48A32 32 0 0 1 304 88.78V32h8a8 8 0 0 0 8-8V8a8 8 0 0 0-8-8H136a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h8v56.78a32 32 0 0 1-7 20l-76.95 96.16a128 128 0 0 0-28 80V448a64 64 0 0 0 64 64H352a64 64 0 0 0 64-64V284.9a128 128 0 0 0-26.88-78.22A71.93 71.93 0 0 0 448 136zm-64 312a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V284.9a96.39 96.39 0 0 1 21-60l77-96.14a64.22 64.22 0 0 0 14-40V32h96v56.78a64.23 64.23 0 0 0 14 40l76.93 96.18a96.34 96.34 0 0 1 21 60zm-8-272a39.41 39.41 0 0 1-13.41-2.71l-25.49-31.87c-.27-1.85-1.1-3.5-1.1-5.42a40 40 0 1 1 40 40z"],
    "key": [512, 512, [], "f084", "M336 32c79.529 0 144 64.471 144 144s-64.471 144-144 144c-18.968 0-37.076-3.675-53.661-10.339L240 352h-48v64h-64v64H32v-80l170.339-170.339C195.675 213.076 192 194.968 192 176c0-79.529 64.471-144 144-144m0-32c-97.184 0-176 78.769-176 176 0 15.307 1.945 30.352 5.798 44.947L7.029 379.716A24.003 24.003 0 0 0 0 396.686V488c0 13.255 10.745 24 24 24h112c13.255 0 24-10.745 24-24v-40h40c13.255 0 24-10.745 24-24v-40h19.314c6.365 0 12.47-2.529 16.971-7.029l30.769-30.769C305.648 350.055 320.693 352 336 352c97.184 0 176-78.769 176-176C512 78.816 433.231 0 336 0zm48 108c11.028 0 20 8.972 20 20s-8.972 20-20 20-20-8.972-20-20 8.972-20 20-20m0-28c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z"],
    "moon-stars": [512, 512, [], "f755", "M333.9 426.2c-.6 0-1.2.1-1.8.2-9.6 1.8-19.2 2.7-28.6 2.7-81.3 0-150-66.1-150-150.4 0-54.2 29-104 76.1-130.8 7.3-4.1 5.4-15.1-2.8-16.7-11.6-2.1-23.3-3.2-35-3.2C85.9 128 0 213.9 0 320c0 106 85.8 192 191.8 192 59.2 0 113.2-26.9 149-71.1 4.9-6 .3-14.7-6.9-14.7zM191.8 480C103.7 480 32 408.2 32 320c0-78.5 56.8-144 131.4-157.5-26.6 32.2-41.8 73.2-41.8 116.2 0 89.8 65.1 164.7 150.5 179.7-24 14-51.6 21.6-80.3 21.6zm311.4-286.3l-48.6-24.3-24.3-48.6c-5.4-10.8-23.2-10.8-28.6 0l-24.3 48.6-48.6 24.3c-5.4 2.7-8.8 8.2-8.8 14.3s3.4 11.6 8.8 14.3l48.6 24.3 24.3 48.6c2.7 5.4 8.2 8.8 14.3 8.8s11.6-3.4 14.3-8.8l24.3-48.6 48.6-24.3c5.4-2.7 8.8-8.2 8.8-14.3s-3.4-11.6-8.8-14.3zm-67.7 26.7c-3.1 1.5-5.6 4.1-7.2 7.2L416 252.2l-12.3-24.7c-1.6-3.1-4.1-5.6-7.2-7.2L371.8 208l24.7-12.4c3.1-1.5 5.6-4.1 7.2-7.2l12.3-24.7 12.3 24.7c1.6 3.1 4.1 5.6 7.2 7.2l24.7 12.4-24.7 12.4zM304 96l16-32 32-16-32-16-16-32-16 32-32 16 32 16 16 32z"],
    "portal-enter": [512, 512, [], "e022", "M448,0c-49.10352,0-60.52539,142.78711-63.17578,216h-3.35547l-9.03126-27.125c-8.125-24.3125-24.18749-44-44.5-58.03125C347,117.90625,360,96.73438,360,72a72,72,0,0,0-144,0,71.00847,71.00847,0,0,0,4.18749,23.71875A112.98756,112.98756,0,0,0,135.4375,108.5L89.25,132.5625a52.01084,52.01084,0,0,0,52.4375,89.82812l18.9375-9.84374L101.75,344H52a52,52,0,0,0,0,104h62.90625A83.90044,83.90044,0,0,0,192.125,397.07812l19.31249-39.73437,43.68751,19.625L235.5,445.70312A52.05212,52.05212,0,0,0,271.18749,510,52.89215,52.89215,0,0,0,285.5,512a52.24717,52.24717,0,0,0,50-37.6875l24.375-85.40625a84.15978,84.15978,0,0,0-12-71.10937A85.07673,85.07673,0,0,0,367.09375,320H396a51.95957,51.95957,0,0,0,20.75977-99.60938C419.97852,111.33594,437.041,48.01172,448,33.875,460.125,49.51562,480,124.45312,480,256s-19.875,206.48438-32,222.125c-8.75586-11.29492-21.46094-53.98438-27.89648-126.125H388.168c6.18359,73.043,21.54687,160,59.832,160,62.21875,0,64-229.79688,64-256S510.21875,0,448,0ZM288,32a40,40,0,1,1-40,40A39.997,39.997,0,0,1,288,32ZM162.6875,384.48438C155.25,401.875,133.875,416,114.9375,416H52a20,20,0,0,1,0-40h62.90625a11.9977,11.9977,0,0,0,11.03125-7.28125l26.71875-56.875A83.10126,83.10126,0,0,0,182.625,343.26562ZM396,288H367.03125c-20.6875,0-42.78125-15.92188-49.3125-35.54688L304.125,211.65625a43.28918,43.28918,0,0,0-15-20.67187l-41.46875,103.6875,52.78124,23.71874A52.30819,52.30819,0,0,1,329.125,380.125L304.71875,465.5c-7.22492,25.37752-45.81231,14.7403-38.46875-11l24.40625-85.375a12.07949,12.07949,0,0,0-6.625-14.25s-85.8125-39.04688-88.71875-41.17188a52.12113,52.12113,0,0,1-18.5-57.875l37.75-87.5625s-16.90624-3.78124-20.5-3.78124a43.34675,43.34675,0,0,0-22.5,6.3125l-45.25,23.51562a23.5854,23.5854,0,0,1-10.28125,2.84375,19.9989,19.9989,0,0,1-10.3125-37.14063l45.25-23.53124A83.78091,83.78091,0,0,1,194.09375,124.5a85.03565,85.03565,0,0,1,20.5,2.53125l68.1875,17.04687A83.59572,83.59572,0,0,1,342.09375,199l13.59374,40.79688A11.979,11.979,0,0,0,367.06249,248H396a20,20,0,0,1,0,40Z"],
    "portal-exit": [512, 512, [], "e023", "M460,216H445.46875l-9.03125-27.125c-8.125-24.3125-24.1875-44-44.5-58.03125C411,117.90625,424,96.73438,424,72a72,72,0,0,0-144,0,71.00848,71.00848,0,0,0,4.1875,23.71875A112.98758,112.98758,0,0,0,199.4375,108.5L153.25,132.5625a51.63613,51.63613,0,0,0-15.418,14.24414C129.09766,71.17773,109.79688,0,72,0,15.15625,0,0,160.92188,0,256S15.15625,512,72,512c22.94727,0,38.99023-26.44922,50.082-64h56.82422A83.90044,83.90044,0,0,0,256.125,397.07812l19.3125-39.73437,43.6875,19.625L299.5,445.70312A52.05212,52.05212,0,0,0,335.1875,510,52.892,52.892,0,0,0,349.5,512a52.24717,52.24717,0,0,0,50-37.6875l24.375-85.40625a84.15978,84.15978,0,0,0-12-71.10937A85.07673,85.07673,0,0,0,431.09375,320H460a52,52,0,0,0,0-104ZM352,32a40,40,0,1,1-40,40A39.997,39.997,0,0,1,352,32ZM72.65625,480.09375C58.46875,474.60938,32,392.79688,32,256,32,121.32812,57.65625,39.95312,72,32.21875,86.34375,39.95312,112,121.32812,112,256c0,16.86133-.418,32.84961-1.14648,48h31.9082C143.582,287.01562,144,270.67969,144,256c0-13.10352-.32422-27.51758-.96875-42.5293a51.69161,51.69161,0,0,0,62.65625,8.91992l18.9375-9.84374L165.75,344H116a51.81787,51.81787,0,0,0-24.86914,97.377C84.47656,464.63086,77.57812,477.99805,72.65625,480.09375ZM226.6875,384.48438C219.25,401.875,197.875,416,178.9375,416H116a20,20,0,0,1,0-40h62.90625a11.9977,11.9977,0,0,0,11.03125-7.28125l26.71875-56.875A83.10126,83.10126,0,0,0,246.625,343.26562ZM460,288H431.03125c-20.6875,0-42.78125-15.92188-49.3125-35.54688L368.125,211.65625a43.28905,43.28905,0,0,0-15-20.67187l-41.46875,103.6875,52.78125,23.71874A52.3082,52.3082,0,0,1,393.125,380.125L368.71875,465.5A19.97861,19.97861,0,0,1,349.5,480a20.38928,20.38928,0,0,1-5.5-.76562A20.014,20.014,0,0,1,330.25,454.5l24.40625-85.375a12.07948,12.07948,0,0,0-6.625-14.25s-85.8125-39.04688-88.71875-41.17188a52.12113,52.12113,0,0,1-18.5-57.875l37.75-87.5625s-16.90625-3.78124-20.5-3.78124a43.34675,43.34675,0,0,0-22.5,6.3125l-45.25,23.51562a23.5854,23.5854,0,0,1-10.28125,2.84375,19.9989,19.9989,0,0,1-10.3125-37.14063l45.25-23.53124A83.78091,83.78091,0,0,1,258.09375,124.5a85.03559,85.03559,0,0,1,20.5,2.53125l68.1875,17.04687A83.59571,83.59571,0,0,1,406.09375,199l13.59375,40.79688A11.979,11.979,0,0,0,431.0625,248H460a20,20,0,0,1,0,40Z"],
    "quote-left": [512, 512, [], "f10d", "M448 224h-64v-24c0-30.9 25.1-56 56-56h16c22.1 0 40-17.9 40-40V72c0-22.1-17.9-40-40-40h-16c-92.6 0-168 75.4-168 168v216c0 35.3 28.7 64 64 64h112c35.3 0 64-28.7 64-64V288c0-35.3-28.7-64-64-64zm32 192c0 17.7-14.3 32-32 32H336c-17.7 0-32-14.3-32-32V200c0-75.1 60.9-136 136-136h16c4.4 0 8 3.6 8 8v32c0 4.4-3.6 8-8 8h-16c-48.6 0-88 39.4-88 88v56h96c17.7 0 32 14.3 32 32v128zM176 224h-64v-24c0-30.9 25.1-56 56-56h16c22.1 0 40-17.9 40-40V72c0-22.1-17.9-40-40-40h-16C75.4 32 0 107.4 0 200v216c0 35.3 28.7 64 64 64h112c35.3 0 64-28.7 64-64V288c0-35.3-28.7-64-64-64zm32 192c0 17.7-14.3 32-32 32H64c-17.7 0-32-14.3-32-32V200c0-75.1 60.9-136 136-136h16c4.4 0 8 3.6 8 8v32c0 4.4-3.6 8-8 8h-16c-48.6 0-88 39.4-88 88v56h96c17.7 0 32 14.3 32 32v128z"],
    "quote-right": [512, 512, [], "f10e", "M176 32H64C28.7 32 0 60.7 0 96v128c0 35.3 28.7 64 64 64h64v24c0 30.9-25.1 56-56 56H56c-22.1 0-40 17.9-40 40v32c0 22.1 17.9 40 40 40h16c92.6 0 168-75.4 168-168V96c0-35.3-28.7-64-64-64zm32 280c0 75.1-60.9 136-136 136H56c-4.4 0-8-3.6-8-8v-32c0-4.4 3.6-8 8-8h16c48.6 0 88-39.4 88-88v-56H64c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h112c17.7 0 32 14.3 32 32v216zM448 32H336c-35.3 0-64 28.7-64 64v128c0 35.3 28.7 64 64 64h64v24c0 30.9-25.1 56-56 56h-16c-22.1 0-40 17.9-40 40v32c0 22.1 17.9 40 40 40h16c92.6 0 168-75.4 168-168V96c0-35.3-28.7-64-64-64zm32 280c0 75.1-60.9 136-136 136h-16c-4.4 0-8-3.6-8-8v-32c0-4.4 3.6-8 8-8h16c48.6 0 88-39.4 88-88v-56h-96c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h112c17.7 0 32 14.3 32 32v216z"],
    "sitemap": [640, 512, [], "f0e8", "M608 352h-32v-97.59c0-16.77-13.62-30.41-30.41-30.41H336v-64h48c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32H256c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h48v64H94.41C77.62 224 64 237.64 64 254.41V352H32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32H96v-96h208v96h-32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32h-32v-96h208v96h-32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zm-480 32v96H32v-96h96zm240 0v96h-96v-96h96zM256 128V32h128v96H256zm352 352h-96v-96h96v96z"],
    "spa": [576, 512, [], "f5bb", "M568.28 192.08h-.04c-22.64.1-92 4.29-158.85 42.35-19.43-81.58-60.36-153.88-112.52-199.29-2.4-2.09-5.63-3.14-8.85-3.14s-6.44 1.04-8.85 3.14C227 80.55 186.05 152.85 166.6 234.44 99.76 196.37 30.4 192.19 7.75 192.08h-.04c-4.39 0-7.76 3.41-7.72 7.82.23 27.94 7.14 126.2 88.77 199.41 58.23 56.73 131.07 74.8 176.96 80.46.01.3 44.52.3 44.52 0 45.89-5.66 118.73-23.73 176.96-80.46 81.64-73.2 88.54-171.47 88.77-199.41.07-4.41-3.29-7.82-7.69-7.82zM110.13 375.47c-55.22-49.52-71.61-112.28-76.32-149.92 40.84 4.1 110.91 19.31 166.44 73.44 25.37 22.72 44.4 49.96 58.17 83.28 8.5 20.57 13.57 41.3 13.57 65.82-42.77-1.15-114.58-26.6-161.86-72.62zm111.46-100.34c-8.51-8.3-17.45-15.42-26.46-22.15 15.13-71.58 48.71-138.15 92.9-182.33 44.17 44.17 77.74 110.74 92.85 182.32-9.02 6.73-17.95 13.85-26.47 22.15-33.12 29.65-53.36 63.34-66.41 94.91-13.05-31.57-33.29-65.26-66.41-94.9zM464.9 376.37c-44.61 43.46-116.13 70.51-160.9 71.71 0-24.31 4.98-45.03 13.57-65.82 13.77-33.33 32.8-60.57 59.17-84.22 54.78-53.42 124.71-68.46 165.44-72.52-4.74 37.68-21.29 100.62-77.28 150.85z"],
    "sparkles": [512, 512, [], "f890", "M328.84 109.75l48.57 24.32 24.28 48.63a16 16 0 0 0 28.62 0l24.28-48.63 48.57-24.32a16 16 0 0 0 0-28.66l-48.57-24.32-24.28-48.63c-5.43-10.85-23.19-10.85-28.62 0l-24.28 48.63-48.57 24.32a16 16 0 0 0 0 28.66zM396.5 83a16.1 16.1 0 0 0 7.16-7.16L416 51.14l12.34 24.74A16.1 16.1 0 0 0 435.5 83l24.72 12.38-24.72 12.42a16.2 16.2 0 0 0-7.16 7.16L416 139.7 403.66 115a16.2 16.2 0 0 0-7.16-7.16l-24.72-12.42zm106.66 318.53l-48.57-24.31-24.28-48.63c-5.43-10.86-23.19-10.86-28.62 0l-24.28 48.63-48.57 24.31a16 16 0 0 0 0 28.67l48.57 24.31 24.28 48.63a16 16 0 0 0 28.62 0l24.28-48.63 48.57-24.31a16 16 0 0 0 0-28.67zm-67.66 26.71a16.17 16.17 0 0 0-7.16 7.17L416 460.15l-12.34-24.74a16.17 16.17 0 0 0-7.16-7.17l-24.72-12.37 24.72-12.38a16.17 16.17 0 0 0 7.16-7.17L416 371.59l12.34 24.73a16.17 16.17 0 0 0 7.16 7.17l24.72 12.38zM384 255.64a16.06 16.06 0 0 0-8.84-14.33L262.59 185 206.31 72.23c-5.43-10.86-23.19-10.86-28.62 0L121.41 185 8.84 241.31a16 16 0 0 0 0 28.67l112.57 56.36 56.28 112.71a16 16 0 0 0 28.62 0l56.28-112.71L375.16 270a16.09 16.09 0 0 0 8.84-14.36zm-140.5 44.43a16.1 16.1 0 0 0-7.16 7.16L192 396.06l-44.34-88.83a16.1 16.1 0 0 0-7.16-7.16l-88.72-44.43 88.72-44.42a16.2 16.2 0 0 0 7.16-7.16L192 115.23l44.34 88.83a16.2 16.2 0 0 0 7.16 7.16l88.72 44.42z"],
    "squirrel": [512, 512, [], "f71a", "M400 160c8.84 0 16-7.16 16-16s-7.16-16-16-16-16 7.16-16 16 7.16 16 16 16zm63.74 258.19C473.95 401.69 480 384.36 480 368c0-34.12-28.88-70.66-76.78-78.47l9.91-49.53h50.72c28.81 0 48.16-22.05 48.16-54.86 0-59.81-42.62-111.17-96.16-119.84V32h-16c-50.13 0-84.09 41.08-105.37 80.06C270.98 51.21 207.09 0 144 0 64.59 0 0 64.59 0 144c0 71.06 51.75 130.27 119.53 141.92l-13.72 28.41c-6.5 17.19-9.81 34.58-9.81 51.69C96 446.52 161.47 512 241.97 512H480c17.68 0 32-14.33 32-32 0-29.83-20.6-54.74-48.26-61.81zM241.97 480C179.12 480 128 428.86 128 366.02c0-13.22 2.59-26.8 7.19-39.05L169.5 256h-21.58C91 256 40.21 215.21 32.95 158.76 24.17 90.46 77.4 32 144 32c62.22 0 128 65.8 128 128l-59.7 146.46c-1.7 4.08.23 8.76 4.31 10.46l14.79 6.16c4.08 1.7 8.76-.23 10.46-4.31l76.46-183.61c11.44-22.88 33.97-59.09 65.53-68.73V96h16c42.69 0 80.16 41.66 80.16 89.14 0 8.53-2.09 22.86-16.16 22.86h-76.97l-22.41 112H384c39.53 0 64 24.92 64 48 0 14.86-8.43 32.39-22.26 48H392c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8h56c17.66 0 32 14.36 32 32H241.97z"],
    "star": [576, 512, [], "f005", "M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM405.8 317.9l27.8 162L288 403.5 142.5 480l27.8-162L52.5 203.1l162.7-23.6L288 32l72.8 147.5 162.7 23.6-117.7 114.8z"],
    "star-shooting": [512, 512, [], "e036", "M364.294,267.28691,259.4951,251.99064l-46.90716-95.19941a22.9468,22.9468,0,0,0-41.18829,0l-46.90716,95.19941L19.69358,267.28691C.89634,269.98993-6.71318,293.19215,6.99021,306.4885l75.90772,73.99711L64.89758,485.07527A23.05232,23.05232,0,0,0,87.525,512a22.46219,22.46219,0,0,0,10.67013-2.72255l93.7987-49.38869,93.79869,49.38869A22.89785,22.89785,0,0,0,319.09,485.07527L301.199,380.48561l75.89209-73.99711C390.70077,293.19215,383.09125,269.98993,364.294,267.28691ZM278.85876,357.5744l-12.03734,11.73587,2.836,16.56966,14.80107,86.53177-77.55424-40.83629-14.91044-7.85126-14.91045,7.85126L99.5506,472.4l14.885-86.48686,2.85357-16.58919-12.053-11.7515-62.843-61.26127,86.72238-12.65771,16.64681-2.42959,7.43569-15.09121L191.9938,187.3955l38.79567,78.73716,7.43569,15.09121,16.64876,2.42959,86.80442,12.66943ZM498.34544,194.33469a8.00345,8.00345,0,0,0-11.31467,0l-68.68884,68.68676a7.99644,7.99644,0,0,0,0,11.31206l11.31077,11.31206a8.00347,8.00347,0,0,0,11.31467,0L509.6562,216.9588a7.99643,7.99643,0,0,0,0-11.31206ZM314.34187,186.337l11.31077,11.31011a7.99994,7.99994,0,0,0,11.31467,0L509.6562,24.96631a7.99643,7.99643,0,0,0,0-11.31206L498.34544,2.34219a8.00347,8.00347,0,0,0-11.31467,0L314.34187,175.02294A7.9988,7.9988,0,0,0,314.34187,186.337ZM237.649,93.65308a8.00347,8.00347,0,0,0,11.31467,0l68.68883-68.68677a7.99644,7.99644,0,0,0,0-11.31206L306.34172,2.34219a8.00348,8.00348,0,0,0-11.31468,0L226.33821,71.029a7.99644,7.99644,0,0,0,0,11.31206Z"],
    "stars": [512, 512, [], "f762", "M509.05273,219.03853l-39.71289-16.56934-16.55859-39.73866a5.32506,5.32506,0,0,0-9.541,0l-16.56054,39.73866-39.71094,16.56934a5.33947,5.33947,0,0,0,0,9.54721L426.67969,245.157l16.56054,39.73671a5.3235,5.3235,0,0,0,9.541,0L469.33984,245.157l39.71289-16.57129a5.33947,5.33947,0,0,0,0-9.54721ZM364.30049,267.08,259.38106,251.77833,212.46892,156.549a22.735,22.735,0,0,0-20.59634-12.7878A22.40581,22.40581,0,0,0,171.37,156.549l-46.91214,95.22933L19.6322,267.08C.84859,269.76557-6.65235,293.06155,6.94311,306.349l75.91578,74.05684L64.85663,485.01914A23.00313,23.00313,0,0,0,87.45322,512a22.60025,22.60025,0,0,0,10.68884-2.6856l93.82428-49.37123,93.82429,49.37123A23.38328,23.38328,0,0,0,296.38571,512a23.09547,23.09547,0,0,0,22.69035-26.88718l-17.9085-104.61329,75.91578-74.05685C390.6788,293.06155,383.0841,269.87487,364.30049,267.08ZM266.78824,369.28873l17.596,103.14558-92.51162-48.7779L99.361,472.43431l17.596-103.14558L42.26,296.1531l103.388-15.08305,46.31831-93.83969,46.19331,93.83969L341.57888,296.1531ZM423.1875,81.33009,374.59375,57.01744,350.3125,8.17327c-5.40625-10.89769-23.21875-10.89769-28.625,0L297.40625,56.81419,248.8125,81.12683A16.04689,16.04689,0,0,0,240,95.433a16.46336,16.46336,0,0,0,8.8125,14.50941L297.40625,134.255,321.6875,182.896A16.07056,16.07056,0,0,0,336,191.79235a15.87374,15.87374,0,0,0,14.3125-8.8964L374.59375,134.255l48.59375-24.31264a16.0185,16.0185,0,0,0,0-28.6123ZM355.5,107.94109a16.19316,16.19316,0,0,0-7.1875,7.2078L336,139.86805l-12.3125-24.71916a16.75685,16.75685,0,0,0-7.1875-7.2078L291.8125,95.54243,316.5,83.12813a16.11584,16.11584,0,0,0,7.1875-7.2078L336,51.20117l12.3125,24.71916a16.59161,16.59161,0,0,0,7.1875,7.2078l24.6875,12.4143Z"],
    "taco": [512, 512, [], "f826", "M511.47 407.64a309.9 309.9 0 0 0-14.63-62.14c7.7-19.83 1.06-27.47 7.5-49.89 5.32-18.45 12.55-43.48 3-69.58-10.11-27.73-33.39-41.74-48.79-51-3.35-2-8.64-5.19-11.12-7.13-.87-2.68-2.43-10.2-3.43-14.9-4.11-19.32-9.73-45.75-31.76-63.74-20.51-16.74-44.58-16.74-52.49-16.74-11.43 0-21.5 1.41-29.26 1.34C316.54 62.7 293.75 32 257.42 32c-37.66 0-64.67 32.84-75.88 41.86-8.22.07-17.45-1.35-29.26-1.35h-.11c-8 0-32 .08-52.38 16.75-22 18-27.66 44.41-31.76 63.71-1 4.47-2.44 11.52-3.66 15-2.57 2-7.64 5-10.86 6.94-15.45 9.33-38.73 23.34-48.85 51.09-9.54 26.06-2.32 51.08 3 69.35 6.47 22.56-.11 30.37 7.55 50.09a310.2 310.2 0 0 0-14.68 62.2C-3.86 442.58 21 480 60.49 480h391c39.51 0 64.38-37.34 59.98-72.36zm-60 40.36h-391c-17.11 0-30.62-17.19-28.21-36.38C47.87 287.47 142.09 192 256 192s208.13 95.47 223.72 219.62c2.41 19.19-11.1 36.38-28.21 36.38zm21-156c-46.43-79.73-127-132-216.52-132S85.92 212.27 39.49 292c-3.65-15.68-11.61-36.31-4.77-55C41 219.83 56.38 210.56 70 202.38c22.08-13.26 23.44-14.83 29.35-42.75 3.46-16.27 7.39-34.73 20.69-45.58 9.49-7.75 20.91-9.54 32.26-9.54 39.31 0 35.55 8 60.68-16C231.39 70.81 245.37 64 257.42 64c15.25 0 27.42 10.9 41.62 24.51 25.13 24.08 21.36 16 60.69 16 11.34 0 22.77 1.79 32.26 9.53 13.3 10.86 17.23 29.31 20.69 45.58 5.91 27.91 7.25 29.48 29.34 42.75 13.6 8.19 29 17.46 35.26 34.61 5.72 15.58 1.56 28.02-4.76 55.02zM112 352a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm64-64a16 16 0 1 0 16 16 16 16 0 0 0-16-16z"],
    "theater-masks": [640, 512, [], "f630", "M151.06 206.02c19.34-3.41 35.78-17.86 45.16-39.67 3.47-8.12-.28-17.53-8.41-21.02-8.12-3.5-17.53.25-21.03 8.39-2.94 6.89-9.62 18.73-21.28 20.78-11.69 2.16-22.03-6.81-27.16-12.25-6.09-6.44-16.22-6.72-22.62-.69-6.44 6.06-6.75 16.19-.69 22.62 5.17 5.5 26.31 27.14 56.03 21.84zm362.78 2.12c-19.41-3.48-39.47 4.25-56.03 21.81-6.06 6.44-5.75 16.56.69 22.62 6.41 6.03 16.53 5.75 22.62-.69 5.12-5.47 15.38-14.34 27.16-12.25 11.66 2.06 18.34 13.91 21.28 20.78 3.54 8.19 13.02 11.85 21.03 8.39 8.12-3.48 11.88-12.89 8.41-21.02-9.37-21.78-25.81-36.23-45.16-39.64zm5.69 110.61c-26.31 15.94-63.06 21.23-100.88 14.58-37.81-6.67-70.53-24.23-89.81-48.2-9.15-11.34-27.25-5.52-28.41 8.7-5.25 63.08 38.69 119.08 102.19 130.27 21.1 3.72 115.04 6.5 140.62-87.45 3.77-13.83-11.24-25.35-23.71-17.9zm-111.34 73.84c-33.19-5.86-59.19-28.08-70.28-56.95 21.34 14.09 47.22 24.27 75.19 29.19 28.03 4.98 55.75 4.25 80.66-1.72-20.35 23.33-52.38 35.3-85.57 29.48zm-68.88-165.7c5.12-5.44 15.5-14.55 27.16-12.25 11.66 2.05 18.34 13.89 21.28 20.78 3.54 8.19 13.02 11.85 21.03 8.39 8.12-3.48 11.88-12.89 8.41-21.02-9.5-22.14-25.53-36.23-45.16-39.69-19.59-3.36-39.5 4.31-56.03 21.84-6.06 6.44-5.75 16.56.69 22.62 6.44 6.05 16.53 5.77 22.62-.67zM606.8 119.91c-41.73-23.22-120-58.55-227.1-56.93-5.87-33.25-28.59-53.11-54.53-57.26C301.27 1.89 277.24 0 253.32 0 176.66 0 101.02 19.47 33.2 57.21 9.03 70.65-3.92 98.72 1.05 126.9l31.73 179.96C47.01 387.58 169.11 449.3 237.23 449.3c13.85 0 23.86-1.88 43.61-11.66 2.58 2.98 62.79 74.36 121.93 74.36 68.12 0 190.22-61.71 204.45-142.44l31.73-179.96c4.97-28.17-7.98-56.24-32.15-69.69zM237.23 417.29c-57.45 0-162.04-54.21-172.94-115.99L32.57 121.34c-2.61-14.79 3.9-29.33 16.19-36.17C74.2 71.02 178.25 14.61 320.12 37.32c13.48 2.16 24.17 13.06 27.18 27.22-10.83.94-21.66 2.15-32.47 3.88-27.31 4.37-49.08 26.32-54.04 54.49L237.12 257.1c-67.24 3.06-100.25 46.03-101.65 47.78-5.53 6.89-4.44 16.97 2.44 22.5 7.9 6.32 17.79 3.41 22.5-2.44 1.02-1.27 22.34-29.55 70.95-35.12l-2.3 13.07c-6.25 35.42 8.43 74.42 32.1 109.1-10.52 4.48-16.13 5.3-23.93 5.3zm370.21-233.25L575.7 364.01C564.81 425.79 460.21 480 402.77 480c-39.05 0-86.86-50.33-99.56-65.31-31.81-37.54-47.76-77.26-42.64-106.25l31.73-179.96c2.61-14.79 13.7-26.23 27.59-28.45 142.14-22.74 246.27 33.89 271.36 47.85 12.29 6.83 18.79 21.37 16.19 36.16z"],
    "toilet": [384, 512, [], "f7d8", "M376 32c4.4 0 8-3.6 8-8V8c0-4.4-3.6-8-8-8H8C3.6 0 0 3.6 0 8v16c0 4.4 3.6 8 8 8h24v172.7C11.8 214.8 0 226.9 0 240c0 67.2 34.6 126.2 86.8 160.5l-21.4 70.2C59.1 491.2 74.5 512 96 512h192c21.5 0 36.9-20.8 30.6-41.3l-21.4-70.2C349.4 366.2 384 307.2 384 240c0-13.1-11.8-25.2-32-35.3V32h24zM64 32h256v160.4c-34-10.2-78.8-16.4-128-16.4s-94 6.2-128 16.4V32zm128 176c83.9 0 152 14.3 152 32s-68.1 32-152 32-152-14.3-152-32 68.1-32 152-32zM96 480l19.5-63.9C139 426.3 164.8 432 192 432s53-5.7 76.5-15.9L288 480H96zm96-80c-75.2 0-138.1-52.3-155.1-122.4 34.9 16 91.3 26.4 155.1 26.4s120.2-10.4 155.1-26.4C330.1 347.7 267.2 400 192 400zM152 64h-48c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V72c0-4.4-3.6-8-8-8z"],
    "toilet-paper": [576, 512, [], "f71e", "M112 192c-8.84 0-16 7.16-16 16s7.16 16 16 16 16-7.16 16-16-7.17-16-16-16zm64 0c-8.84 0-16 7.16-16 16s7.16 16 16 16 16-7.16 16-16-7.17-16-16-16zm64 0c-8.84 0-16 7.16-16 16s7.16 16 16 16 16-7.16 16-16-7.17-16-16-16zm64 0c-8.84 0-16 7.16-16 16s7.16 16 16 16 16-7.16 16-16-7.17-16-16-16zM464 0H144C82.14 0 32 85.96 32 192v172.07c0 41.12-9.8 62.77-31.17 126.87C-2.62 501.3 5.09 512 16.01 512h312.92c13.77 0 26-8.81 30.36-21.88 11.16-33.48 21.59-63.54 24.11-106.12H464c61.86 0 112-85.96 112-192S525.86 0 464 0zM352 192v172.07c0 46.83-9.67 75.79-21.9 112.45l-1.16 3.48H38.29c.54-1.61 1.08-3.18 1.61-4.72C55.44 429.55 64 404.37 64 364.07V192c0-94.29 42.16-160 80-160h258.14C371.93 66.39 352 125.18 352 192zm112 160c-37.84 0-80-65.71-80-160s42.16-160 80-160 80 65.71 80 160-42.16 160-80 160zm0-208c-13.25 0-24 21.49-24 48s10.75 48 24 48c13.26 0 24-21.49 24-48s-10.74-48-24-48z"],
    "tools": [512, 512, [], "f7d9", "M502.6 389.5L378.2 265c-15.6-15.6-36.1-23.4-56.6-23.4-15.4 0-30.8 4.4-44.1 13.3L192 169.4V96L64 0 0 64l96 128h73.4l85.5 85.5c-20.6 31.1-17.2 73.3 10.2 100.7l124.5 124.5c6.2 6.2 14.4 9.4 22.6 9.4 8.2 0 16.4-3.1 22.6-9.4l67.9-67.9c12.4-12.6 12.4-32.8-.1-45.3zM160 158.1v1.9h-48L42.3 67 67 42.3l93 69.7v46.1zM412.1 480L287.7 355.5c-9.1-9.1-14.1-21.1-14.1-33.9 0-12.8 5-24.9 14.1-33.9 9.1-9.1 21.1-14.1 33.9-14.1 12.8 0 24.9 5 33.9 14.1L480 412.1 412.1 480zM64 432c0 8.8 7.2 16 16 16s16-7.2 16-16-7.2-16-16-16-16 7.2-16 16zM276.8 66.9C299.5 44.2 329.4 32 360.6 32c6.9 0 13.8.6 20.7 1.8L312 103.2l13.8 83 83.1 13.8 69.3-69.3c6.7 38.2-5.3 76.8-33.1 104.5-8.9 8.9-19.1 16-30 21.5l23.6 23.6c10.4-6.2 20.2-13.6 29-22.5 37.8-37.8 52.7-91.4 39.7-143.3-2.3-9.5-9.7-17-19.1-19.6-9.5-2.6-19.7 0-26.7 7l-63.9 63.9-44.2-7.4-7.4-44.2L410 50.3c6.9-6.9 9.6-17.1 7-26.5-2.6-9.5-10.2-16.8-19.7-19.2C345.6-8.3 292 6.5 254.1 44.3c-12.9 12.9-22.9 27.9-30.1 44v67.8l22.1 22.1c-9.6-40.4 1.6-82.2 30.7-111.3zM107 467.1c-16.6 16.6-45.6 16.6-62.2 0-17.1-17.1-17.1-45.1 0-62.2l146.1-146.1-22.6-22.6L22.2 382.3c-29.6 29.6-29.6 77.8 0 107.5C36.5 504.1 55.6 512 75.9 512c20.3 0 39.4-7.9 53.7-22.3L231.4 388c-6.7-9.2-11.8-19.3-15.5-29.8L107 467.1z"],
    "trees": [640, 512, [], "f724", "M636.09 389.46l-74.12-85.55H592c6.22 0 11.91-3.61 14.5-9.27 2.62-5.66 1.75-12.32-2.28-17.07l-72.5-85.71H560c6.31 0 12.03-3.72 14.62-9.49 2.56-5.78 1.5-12.52-2.72-17.23L427.9 5.07c-6.12-6.75-17.69-6.75-23.81 0L320 98.55 235.91 5.07c-6.12-6.75-17.69-6.75-23.81 0l-144 160.07a16.06 16.06 0 0 0-2.72 17.23c2.59 5.77 8.31 9.49 14.62 9.49h28.28l-72.5 85.71c-4.03 4.75-4.91 11.41-2.28 17.07 2.59 5.66 8.28 9.27 14.5 9.27h30.03L3.91 389.46c-4.09 4.74-5.06 11.44-2.47 17.13 2.62 5.71 8.31 9.36 14.56 9.36h160v24.46l-24.2 48.42c-5.32 10.64 2.42 23.17 14.31 23.17h115.78c11.89 0 19.63-12.52 14.31-23.17L272 440.41v-24.46h96v24.46l-24.2 48.42c-5.32 10.64 2.42 23.17 14.31 23.17h115.78c11.89 0 19.63-12.52 14.31-23.17L464 440.41v-24.46h160c6.25 0 11.94-3.66 14.56-9.36 2.6-5.69 1.63-12.39-2.47-17.13zM192 479.98l16-32.01v-32.02h32v32.02l16 32.01h-64zM50.78 384l96-112H82.5l94.78-112h-61.34L224 39.92 332.06 160h-61.34l94.78 112h-64.28l96 112H50.78zM384 479.98l16-32.01v-32.02h32v32.02l16 32.01h-64zM439.36 384l-69.39-80.1H400c6.22 0 11.91-3.61 14.5-9.27 2.62-5.66 1.75-12.32-2.28-17.07l-72.5-85.71H368c6.31 0 12.03-3.72 14.62-9.49 2.56-5.78 1.5-12.52-2.72-17.23l-38.29-42.56L416 39.92 524.06 160h-61.34l94.78 112h-64.28l96 112H439.36z"],
    "trumpet": [640, 512, [], "f8e3", "M617.38 65.36l-.09-.07a32.32 32.32 0 0 0-35.85 12.94c-.44.66-44.93 66.33-112.36 102-14.57 7.67-31.95 11.77-50.3 11.77h-50.36v-24a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v24h-32v-24a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v24h-31.8v-24a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v24H33v-8a8 8 0 0 0-8-8H9a8 8 0 0 0-8 8v112a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-8h48.49a103.74 103.74 0 0 0 87.25 160h239.62A103.93 103.93 0 0 0 512.2 344a100.34 100.34 0 0 0-1.83-16.84c43.6 34.41 70.73 74.07 71.1 74.63A32 32 0 0 0 608.05 416a32.85 32.85 0 0 0 9.33-1.41A31.83 31.83 0 0 0 640 384V96a31.82 31.82 0 0 0-22.62-30.64zM168.74 416a71.74 71.74 0 0 1-44.63-128h84.56v128zm71.88 0V288h31.95v128zm63.9 0V288h32v128zm103.84 0h-39.94V288h50.36a108.77 108.77 0 0 1 44 9.43A71.65 71.65 0 0 1 408.36 416zM484 271.45C464.87 261.32 442.31 256 418.78 256H33v-32h385.78c23.53 0 46.09-5.34 65.21-15.47C559.38 168.62 607.77 96.42 608 96l.16 288.25c-.39-.73-48.78-72.92-124.16-112.8z"],
    "turkey": [640, 512, [], "f725", "M579.77 75.55c5.52-33.13-19.71-70.89-58.88-75.13-46.18-5.18-83.29 38.92-71.17 83.83 2.9 11.06.5 21.06-6.46 26.76-11.92 9.79-15 12.73-29.5 21.66C375.87 110.18 333.51 96 288.56 96 129.74 96 0 269.14 0 384s129.74 128 288.56 128 287.55-13.12 287.55-128c0-52.74-27.36-117.63-72.09-172.54 4-3.64 1.55-2.23 10-9.17 10.76-8.89 24.4-2.62 28.3-.5a64.79 64.79 0 0 0 24.27 7.62c36 4.05 69.16-22.41 73-59.79 3.73-35.33-20.59-69.71-59.82-74.07zM544.17 384c0 70.88-66.89 96-255.6 96S32 454.89 32 384c0-98.75 118-256 256.61-256 31.18 0 61.14 8.26 89 21.71-23.1 7.91-38.83 9.48-58.87 10.15-56.86 1.94-106.69 40-121.2 92.7-12 43.54-1.31 89.2 28.58 122.13A125.85 125.85 0 0 0 319.73 416c77.87 0 113.27-63.53 122.68-102 7.09-29 20.95-55.83 39.38-78.88 38.61 48.37 62.38 104.5 62.38 148.88zm13.51-210.27C480.61 131.64 419.44 273.48 411 307.89c-9.58 39.08-38.63 68.34-74 74.54-33.2 5.91-65.09-4.78-87.28-29.23-22.5-24.78-30.48-59.2-21.4-92.12 4-14.51 23.43-67 98.92-69.48C374.53 190 500.46 151.48 480.58 76a35.38 35.38 0 0 1 11.95-36.43c23.12-18.73 58.91-.63 55.6 31.46a35.05 35.05 0 0 1-5.34 15 16 16 0 0 0 19.13 23.45 33.57 33.57 0 0 1 15.29-2.08c18.94 2 32.67 19.48 30.67 38.86-2.67 25.41-29.58 38.76-50.2 27.43z"],
    "turtle": [576, 512, [], "f726", "M464 128c-8.84 0-16 7.16-16 16s7.16 16 16 16 16-7.16 16-16-7.16-16-16-16zm81.59-19.77C510.52 83.36 487.21 63.89 458.64 64c-70.67.28-74.64 70.17-74.64 73v71.19c-.02 6.89-2.07 13.4-4.99 19.59C306.47-5.44 87.67 22.02 33.15 241.28c-1.28 5.16-1.28 10.24-.52 15.11C14.53 257.47 0 272.21 0 290.59c0 14.91 9.5 28.11 23.66 32.81l47.69 15.91L36.31 400c-5.78 10.02-5.78 21.98 0 32s16.16 16 27.72 16h36.94c11.38 0 22-6.12 27.72-16l33.88-58.66C183.78 379.75 204.75 384 240 384s56.22-4.25 77.44-10.66l33.88 58.69c5.72 9.84 16.34 15.97 27.72 15.97h36.94c11.56 0 21.94-5.98 27.72-16 5.78-10.02 5.78-21.98 0-32l-38.47-66.64c17.81-9.58 32.88-22.28 44.91-37.91 12.75-16.58 21.47-35.19 26.03-55.45h27.19c40.06 0 72.66-32.59 72.66-72.66-.02-23.39-11.4-45.48-30.43-59.11zM351.8 249.01c.89 3.59-1.52 6.99-4.04 6.99H68.25c-2.53 0-4.93-3.42-4.04-7 50.42-202.79 236.99-203.48 287.59.01zM503.34 208h-54.75l-1.75 14c-2.53 20.03-9.97 38.17-22.09 53.94-19.88 25.87-43.07 33.45-65.25 42.25L415.97 416H379l-46.75-81.05C303.17 344.49 284.62 352 240 352c-45.86 0-64.64-8-92.25-17.05L100.97 416H64l54.66-94.63L32 288h303.06c29.22 0 51.64-15.08 64.38-31.59 10.78-14.05 16.53-30.7 16.56-48.19V137c0-26.99 22.44-40.55 42.26-41 19.93-.45 36.75 15.44 68.71 38.26 10.66 7.62 17.03 20 17.03 33.08 0 22.43-18.25 40.66-40.66 40.66z"],
    "typewriter": [512, 512, [], "f8e7", "M312 384h16a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm64 0h16a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-256 0h16a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm360-192h-32v-82.73a32.07 32.07 0 0 0-9.38-22.65L361.38 9.38A32 32 0 0 0 338.75 0H112a48 48 0 0 0-48 48v144H32a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32v128a64 64 0 0 0 64 64h320a64 64 0 0 0 64-64V320a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zM352 45.25L402.75 96H352zM96 48a16 16 0 0 1 16-16h208v64a32 32 0 0 0 32 32h64v64h-50.75a32 32 0 0 0-22.62 9.37l-13.26 13.26a32 32 0 0 1-22.62 9.37h-101.5a32 32 0 0 1-22.62-9.37l-13.26-13.26a32 32 0 0 0-22.62-9.37H96zm352 400a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V320h384zm32-160H32v-64h114.75L160 237.25A63.58 63.58 0 0 0 205.25 256h101.5A63.58 63.58 0 0 0 352 237.25L365.25 224H480zM144 440a8 8 0 0 0 8 8h208a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H152a8 8 0 0 0-8 8zm40-56h16a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm64 0h16a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8z"],
    "unicorn": [640, 512, [], "f727", "M448 80c-8.84 0-16 7.16-16 16s7.16 16 16 16 16-7.16 16-16-7.16-16-16-16zm183.98-16h-96.93l-.24-.3c5.39-9.45 8.38-20.32 8.38-31.7 0-17.67-14.33-32-32-32H400c-70.58 0-128 57.42-128 128H163.36c-35.98 0-67.27 19.42-84.7 48.13C35.11 176.87 0 212.28 0 256v56c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8v-56c0-21.5 14.23-39.48 33.71-45.59-.96 5.54-1.71 11.15-1.71 16.96 0 24.2 8.9 47.33 24.53 65.24l-21.97 74.27c-3.12 10.77-3.38 22.03-.8 32.74l21.13 87.86C90.34 501.86 103.21 512 118 512h57.53c20.95 0 36.12-19.76 31.02-39.86l-21.68-85.57 19.29-53.73L256 344.36V480c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V323.8c20.5-21.5 32-49.75 32-79.59v-50.52l14.55 21.82c19.11 28.67 49.98 20.67 55.45 18.8l25.52-8.71c19.44-6.63 32.5-24.89 32.49-45.44l-.03-64.83 92.46-36.67c6.57-4.39 3.46-14.66-4.46-14.66zM501.17 195.31l-25.52 8.71c-9.33 3.19-16.14-2.76-18.48-6.27L432 160l-48-16v100.21c0 26.67-12.65 50.17-32 65.6V480h-64V318.69l-104.43-23.21-32.12 89.47L175.53 480H118l-21.13-87.86a31.698 31.698 0 0 1 .37-16.18l27.63-93.41C107.45 270.37 96 250.24 96 227.37c0-37.21 30.16-67.37 67.37-67.37H304v-32c0-53.02 42.98-96 96-96h111.19c0 13.29-8.1 24.66-19.63 29.5l20.39 24.78.05 93.88a16 16 0 0 1-10.83 15.15z"],
    "user-astronaut": [448, 512, [], "f4fb", "M288 128H160c-35.3 0-64 28.7-64 64v16c0 61.8 50.2 112 112 112h32c61.8 0 112-50.2 112-112v-16c0-35.3-28.7-64-64-64zm32 80c0 44.1-35.9 80-80 80h-32c-44.1 0-80-35.9-80-80v-16c0-17.6 14.3-32 32-32h128c17.7 0 32 14.4 32 32v16zm-128-32l-12 36-36 12 36 12 12 36 12-36 36-12-36-12-12-36zm112 224H144c-26.5 0-48 21.5-48 48v56c0 4.4 3.6 8 8 8h16c4.4 0 8-3.6 8-8v-56c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16v56c0 4.4 3.6 8 8 8h16c4.4 0 8-3.6 8-8v-56c0-26.5-21.5-48-48-48zm-32 48c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm-96 0c-8.8 0-16 7.2-16 16v40c0 4.4 3.6 8 8 8h16c4.4 0 8-3.6 8-8v-40c0-8.8-7.2-16-16-16zm183.2-119.7c20.3-20.1 35.9-44.8 45.7-72.3H416c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-11.2C378.5 53.5 307.6 0 224 0S69.5 53.5 43.2 128H32c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16h11.2c9.7 27.5 25.4 52.2 45.7 72.3C37.1 347 0 396.2 0 454.4V504c0 4.4 3.6 8 8 8h16c4.4 0 8-3.6 8-8v-49.6c0-51.6 38.5-94 88.3-101C150.2 372.7 185.8 384 224 384s73.8-11.3 103.7-30.6c49.8 6.9 88.3 49.3 88.3 101V504c0 4.4 3.6 8 8 8h16c4.4 0 8-3.6 8-8v-49.6c0-58.2-37.1-107.4-88.8-126.1zM224 352c-88.2 0-160-71.8-160-160S135.8 32 224 32s160 71.8 160 160-71.8 160-160 160z"],
    "user-cog": [640, 512, [], "f4fe", "M628.3 358.3l-16.5-9.5c.8-8.5.8-17.1 0-25.6l16.6-9.5c9.5-5.5 13.8-16.7 10.5-27-7.2-23.4-19.9-45.4-36.7-63.5-7.4-8.1-19.3-9.9-28.7-4.4l-16.5 9.5c-7-5-14.4-9.3-22.2-12.8v-19c0-11-7.5-20.3-18.2-22.7-23.9-5.4-49.3-5.4-73.2 0-10.7 2.4-18.2 11.8-18.2 22.7v19c-7.8 3.5-15.2 7.8-22.2 12.8l-16.5-9.5c-9.5-5.5-21.3-3.7-28.7 4.4-16.7 18.1-29.4 40.1-36.7 63.4-3.3 10.4 1.2 21.8 10.6 27.2l16.5 9.5c-.8 8.5-.8 17.1 0 25.6l-16.6 9.5c-9.3 5.4-13.8 16.9-10.5 27.1 7.2 23.4 19.9 45.4 36.7 63.5 7.4 8 19.2 9.8 28.7 4.4l16.5-9.5c7 5 14.4 9.3 22.2 12.8v19c0 11 7.5 20.3 18.2 22.7 12 2.7 24.3 4 36.6 4s24.7-1.3 36.6-4c10.7-2.4 18.2-11.8 18.2-22.7v-19c7.8-3.5 15.2-7.8 22.2-12.8l16.5 9.5c9.4 5.4 21.3 3.6 28.7-4.4 16.7-18.1 29.4-40.1 36.7-63.4 3.3-10.4-1.2-21.9-10.6-27.3zm-51.6 7.2l29.4 17c-5.2 14.3-13 27.8-22.8 39.5l-29.4-17c-21.4 18.3-24.5 20.1-51.1 29.5v34c-15.1 2.6-30.6 2.6-45.6 0v-34c-26.9-9.5-30.2-11.7-51.1-29.5l-29.4 17c-9.8-11.8-17.6-25.2-22.8-39.5l29.4-17c-4.9-26.8-5.2-30.6 0-59l-29.4-17c5.2-14.3 13-27.7 22.8-39.5l29.4 17c21.4-18.3 24.5-20.1 51.1-29.5v-34c15.1-2.5 30.7-2.5 45.6 0v34c26.8 9.5 30.2 11.6 51.1 29.5l29.4-17c9.8 11.8 17.6 25.2 22.8 39.5l-29.4 17c4.9 26.8 5.2 30.6 0 59zm-96.7-94c-35.6 0-64.5 29-64.5 64.5s28.9 64.5 64.5 64.5 64.5-29 64.5-64.5-28.9-64.5-64.5-64.5zm0 97c-17.9 0-32.5-14.6-32.5-32.5s14.6-32.5 32.5-32.5 32.5 14.6 32.5 32.5-14.6 32.5-32.5 32.5zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm0-224c52.9 0 96 43.1 96 96s-43.1 96-96 96-96-43.1-96-96 43.1-96 96-96zM48 480c-8.8 0-16-7.2-16-16v-41.6C32 365.9 77.9 320 134.4 320c19.6 0 39.1 16 89.6 16 19.2 0 38-3.3 56.5-8.7.5-11.6 1.8-23 4.2-34-8.9 2.7-30.1 10.7-60.7 10.7-47.1 0-60.8-16-89.6-16C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h337c-16-8.6-30.6-19.5-43.5-32H48z"],
    "wifi": [640, 512, [], "f1eb", "M320 320c-44.18 0-80 35.82-80 80 0 44.19 35.83 80 80 80 44.19 0 80-35.84 80-80 0-44.18-35.82-80-80-80zm0 128c-26.47 0-48-21.53-48-48s21.53-48 48-48 48 21.53 48 48-21.53 48-48 48zm316.21-290.05C459.22-9.9 180.95-10.06 3.79 157.95c-4.94 4.69-5.08 12.51-.26 17.32l5.69 5.69c4.61 4.61 12.07 4.74 16.8.25 164.99-156.39 423.64-155.76 587.97 0 4.73 4.48 12.19 4.35 16.8-.25l5.69-5.69c4.81-4.81 4.67-12.63-.27-17.32zM526.02 270.31c-117.34-104.48-294.86-104.34-412.04 0-5.05 4.5-5.32 12.31-.65 17.2l5.53 5.79c4.46 4.67 11.82 4.96 16.66.67 105.17-93.38 264-93.21 368.98 0 4.83 4.29 12.19 4.01 16.66-.67l5.53-5.79c4.65-4.89 4.38-12.7-.67-17.2z"],
    "wind": [512, 512, [], "f72e", "M8 224h344c59.8 0 106.8-54.6 93.8-116.7-7.6-36.3-36.9-65.6-73.2-73.2-59.1-12.3-111.5 29.8-116.3 85.4-.4 4.6 3.5 8.4 8 8.4h16.2c4.2 0 7.4-3.3 7.9-7.4 4.3-36.6 39.5-63.8 78.7-54.8 23.1 5.3 41.8 24.1 47.2 47.2 9.6 41.8-22.1 79.1-62.3 79.1H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm148 32H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h149.1c33.4 0 63.3 24.4 66.5 57.6 3.7 38.1-26.3 70.4-63.7 70.4-32.8 0-59.9-24.8-63.6-56.5-.5-4.2-3.7-7.4-7.9-7.4h-16c-4.6 0-8.4 3.9-8 8.4 4.3 49.1 45.5 87.6 95.6 87.6 54 0 97.6-44.6 96-98.9-1.6-52.7-47.5-93.2-100-93.2zm239.3 0H243.8c10.5 9.2 19.4 19.9 26.4 32h126.2c41.8 0 79.1 30.4 83.2 72 4.7 47.7-32.9 88-79.6 88-36.5 0-67.3-24.5-76.9-58-1-3.5-4-6-7.7-6h-16.1c-5 0-9 4.6-7.9 9.5C302.9 443 347 480 400 480c63 0 113.9-52 112-115.4-1.9-61.3-55.4-108.6-116.7-108.6z"]
  };

  bunker(function () {
    defineIcons('fal', icons);
  });

}());
(function () {
  'use strict';

  var _WINDOW = {};
  var _DOCUMENT = {};

  try {
    if (typeof window !== 'undefined') _WINDOW = window;
    if (typeof document !== 'undefined') _DOCUMENT = document;
  } catch (e) {}

  var _ref = _WINDOW.navigator || {},
      _ref$userAgent = _ref.userAgent,
      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;

  var WINDOW = _WINDOW;
  var DOCUMENT = _DOCUMENT;
  var IS_BROWSER = !!WINDOW.document;
  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';
  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');

  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';
  var PRODUCTION = function () {
    try {
      return "production" === 'production';
    } catch (e) {
      return false;
    }
  }();

  function bunker(fn) {
    try {
      fn();
    } catch (e) {
      if (!PRODUCTION) {
        throw e;
      }
    }
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);

      if (enumerableOnly) {
        symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }

      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(Object(source), true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  var w = WINDOW || {};
  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};
  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};
  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};
  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];
  var namespace = w[NAMESPACE_IDENTIFIER];

  function defineIcons(prefix, icons) {
    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var _params$skipHooks = params.skipHooks,
        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;
    var normalized = Object.keys(icons).reduce(function (acc, iconName) {
      var icon = icons[iconName];
      var expanded = !!icon.icon;

      if (expanded) {
        acc[icon.iconName] = icon.icon;
      } else {
        acc[iconName] = icon;
      }

      return acc;
    }, {});

    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {
      namespace.hooks.addPack(prefix, normalized);
    } else {
      namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), normalized);
    }
    /**
     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction
     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias
     * for `fas` so we'll easy the upgrade process for our users by automatically defining
     * this as well.
     */


    if (prefix === 'fas') {
      defineIcons('fa', icons);
    }
  }

  var icons = {
    "dragon": [640, 512, [], "f6d5", "M481.12 119.98c14.92.85 27.36-9.89 30.88-24.59l-58.43-15.37c-6.5 27.13 15.51 39.27 27.55 39.96zm82.55 136.9l-94.19-44.21a9.876 9.876 0 0 1-4.6-4.69h18.68c4.9 3.12 8.91 5.72 12.25 7.89 16.52 10.73 24.81 16.12 42.65 16.12h27.87c23.03 0 43.8-12.59 54.22-32.85l12.88-25.04c10.49-20.39 8.19-45.32-5.84-63.51L560.5 23.65C549.07 8.84 530.99 0 512.12 0h-213.7c-37.28 0-52.93 46.77-24.99 69.01l12.52 9.94c-4.44 1.8-3.56 1.43-4.75 2.01-29.37 14.28-29.24 55.87.01 70.08L320 166.01v12.95l-167.69-41.84c-22.03-5.48-45.5 3.28-58.53 21.77L5.03 285.13c-14.39 22.6 4.05 52.39 33.06 48.25l91.52-17.21c-14.71 23.28 5.27 52.03 31.82 48.36l180.76-24.23c4.91 10.23 10.58 19.99 17.01 29.17-147.08 10.08-247.2 32.47-321.46 48.52C15.88 422.71 0 442.24 0 464.42c0 26.21 21.52 47.54 47.98 47.54l449.17.04c76.07.01 138.73-55.84 142.65-127.15 2.96-53.81-26.93-104.04-76.13-127.97zM68.03 278.95l65-92.44c1.66-2.38 4.59-3.66 7.69-2.81l69.82 17.33-41.4 58.87-101.11 19.05zm123.03 33.18l69.38-98.67L320 228.47c0 21.25.13 36.77 6.72 65.48l-135.66 18.18zM497.15 464l-449.26.9c92.02-19.88 196.84-43.56 383.18-51.02 16.58-.67 23.38-21.76 9.29-31.79C367.78 330.38 368 258.74 368 239.03V132.98l-45.11-17.22 57.34-23.24L324.16 48h188.22c3.96 0 7.7 1.84 10.12 4.97l67.13 87.01c2.7 3.5 3.13 8.23 1.11 12.16l-12.88 25.04c-2.12 4.13-6.65 6.79-11.53 6.79h-27.87c-3.61 0-3.61 0-16.5-8.37-5.12-3.33-24.56-15.64-24.56-15.64H416v44.11c0 22.19 12.6 42.09 33.08 52.04l93.59 43.92c32.27 15.69 51.12 47.18 49.2 82.16-2.48 45.13-44.97 81.82-94.72 81.81z"],
    "duck": [576, 512, [], "f6d8", "M416 144c0-8.84-7.16-16-16-16s-16 7.16-16 16 7.16 16 16 16 16-7.16 16-16zm48 96c61.86 0 112-50.14 112-112h-65.57c-.46-3.32-.6-6.58-1.36-9.95-9.15-40.61-41.97-73.7-82.54-83-9-2.07-17.88-3.05-26.53-3.05-61.86 0-112 50.14-112 112v80h-54.23c-39 0-78.18-13.76-104.79-42.28-3.96-4.25-8.94-6.14-13.82-6.14-9.78 0-19.16 7.59-19.16 19.06 0 94.71 72.21 178.39 164.58 188.02 9.47.99 17.77-6.49 17.77-16.01v-16.09c0-8.02-5.94-14.86-13.9-15.77-45.77-5.2-85.53-35.7-105.91-77.49 23.38 9.37 48.83 14.27 75.24 14.27L336 272V144c0-35.29 28.71-64 64-64 5.19 0 10.5.62 15.79 1.83 22.66 5.2 41.32 23.99 46.46 46.77 7.9 35.06-11.85 61.87-34.92 72.89L400 214.54v71.63l11.86 13.57c8.89 10.18 19.61 27.21 20.12 50.54.43 19.57-7.61 38.82-22.64 54.19-17.12 17.5-40.59 27.54-64.39 27.54h-91.17c-6.03 0-12.1-.31-18.66-.97-88.83-7.9-163.37-73.51-183.76-159.04h29.28a190.546 190.546 0 0 1-14.15-48H32.25C12.96 224-2.39 241.03.31 260.13 16.82 376.94 112.22 468.3 230.87 478.84c7.53.77 15.18 1.16 22.91 1.16h91.17c71.96 0 136.61-58.84 135.02-130.78-.69-31.13-12.86-59.21-31.97-81.07V240h16z"]
  };

  bunker(function () {
    defineIcons('far', icons);
  });

}());
(function () {
  'use strict';

  var _WINDOW = {};
  var _DOCUMENT = {};

  try {
    if (typeof window !== 'undefined') _WINDOW = window;
    if (typeof document !== 'undefined') _DOCUMENT = document;
  } catch (e) {}

  var _ref = _WINDOW.navigator || {},
      _ref$userAgent = _ref.userAgent,
      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;

  var WINDOW = _WINDOW;
  var DOCUMENT = _DOCUMENT;
  var IS_BROWSER = !!WINDOW.document;
  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';
  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');

  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';
  var PRODUCTION = function () {
    try {
      return "production" === 'production';
    } catch (e) {
      return false;
    }
  }();

  function bunker(fn) {
    try {
      fn();
    } catch (e) {
      if (!PRODUCTION) {
        throw e;
      }
    }
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);

      if (enumerableOnly) {
        symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }

      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(Object(source), true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  var w = WINDOW || {};
  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};
  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};
  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};
  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];
  var namespace = w[NAMESPACE_IDENTIFIER];

  function defineIcons(prefix, icons) {
    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var _params$skipHooks = params.skipHooks,
        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;
    var normalized = Object.keys(icons).reduce(function (acc, iconName) {
      var icon = icons[iconName];
      var expanded = !!icon.icon;

      if (expanded) {
        acc[icon.iconName] = icon.icon;
      } else {
        acc[iconName] = icon;
      }

      return acc;
    }, {});

    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {
      namespace.hooks.addPack(prefix, normalized);
    } else {
      namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), normalized);
    }
    /**
     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction
     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias
     * for `fas` so we'll easy the upgrade process for our users by automatically defining
     * this as well.
     */


    if (prefix === 'fas') {
      defineIcons('fa', icons);
    }
  }

  var icons = {
    "badger-honey": [640, 512, [], "f6b4", "M622.25 142.47c-57.65-32.65-70.98-50.67-115.56-69.92C493.37 66.8 479.4 64 465.45 64c-19.05 0-38.09 5.21-55.47 15.21C392.89 89.05 374.05 96 354.95 96H128C57.31 96 0 153.31 0 224v16c0 8.84 7.16 16 16 16h20.03c7.79 33.38 28.05 64.24 53.53 81.18l-21.49 57.3a63.945 63.945 0 0 0-2.16 37.99L80 467.88A16.002 16.002 0 0 0 95.52 480h63.77c10.41 0 18.05-9.78 15.52-19.88l-15.55-41.26L192.22 352h105.69l23.03 115.14c1.5 7.48 8.06 12.86 15.69 12.86H400c10.1 0 17.67-9.24 15.69-19.14l-27-134.96c45.38-30.54 101.24-61.08 152.48-75.55L560 288l22.65-45.3c28.46-2.37 36.45-9.47 41.19-19.81 7-15.27 16.16-35.79 16.16-47.62 0-13.93-6.88-26.65-17.75-32.8zM515.19 160c.28 1.34.81 2.58.81 4 0 11.04-8.96 20-20 20s-20-8.96-20-20c0-1.42.53-2.66.81-4H460c-29.06 0-57.86 13.05-84.85 26.01l-101.98 61.75c-11.34 5.44-23.44 8.24-35.65 8.24H192c-42.49 0-78.12-41.48-90.76-90.66C113.52 152.13 130.03 144 148.3 144h206.65c25.67 0 52.24-7.8 78.97-23.19 10.02-5.77 20.92-8.81 31.53-8.81 7.65 0 15.12 1.55 22.21 4.62 26.87 11.6 36.43 20.42 71.41 43.38h-43.88z"],
    "dragon": [640, 512, [], "f6d5", "M18.32 255.78L192 223.96l-91.28 68.69c-10.08 10.08-2.94 27.31 11.31 27.31h222.7c-9.44-26.4-14.73-54.47-14.73-83.38v-42.27l-119.73-87.6c-23.82-15.88-55.29-14.01-77.06 4.59L5.81 227.64c-12.38 10.33-3.45 30.42 12.51 28.14zm556.87 34.1l-100.66-50.31A47.992 47.992 0 0 1 448 196.65v-36.69h64l28.09 22.63c6 6 14.14 9.37 22.63 9.37h30.97a32 32 0 0 0 28.62-17.69l14.31-28.62a32.005 32.005 0 0 0-3.02-33.51l-74.53-99.38C553.02 4.7 543.54 0 533.47 0H296.02c-7.13 0-10.7 8.57-5.66 13.61L352 63.96 292.42 88.8c-5.9 2.95-5.9 11.36 0 14.31L352 127.96v108.62c0 72.08 36.03 139.39 96 179.38-195.59 6.81-344.56 41.01-434.1 60.91C5.78 478.67 0 485.88 0 494.2 0 504 7.95 512 17.76 512h499.08c63.29.01 119.61-47.56 122.99-110.76 2.52-47.28-22.73-90.4-64.64-111.36zM489.18 66.25l45.65 11.41c-2.75 10.91-12.47 18.89-24.13 18.26-12.96-.71-25.85-12.53-21.52-29.67z"],
    "duck": [512, 512, [], "f6d8", "M416 224c53.02 0 96-42.98 96-96h-64c0-53.02-42.98-96-96-96s-96 42.98-96 96c0 23.15 8.37 44.15 22.1 60.59 6.25 7.48 9.9 16.78 9.9 26.53 0 22.58-18.3 40.88-40.88 40.88h-21.69c-31.51 0-80.18-13.2-101.68-36.24C113.73 209.03 96 216.17 96 230.63 96 315.33 164.67 384 249.37 384h-32c-76.01 0-138.67-55.44-150.82-128h-50.4C7.03 256-.64 263.66.03 272.75 8.61 388.64 105.35 480 223.42 480h107.2c55.51 0 110.81-44.52 116.72-99.71 4.54-42.43-14.76-80.4-46.04-102.86-10.85-7.79-17.3-20.27-17.3-33.63 0-7.12 1.97-13.83 5.33-19.79H416zm-64-80c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16z"]
  };

  bunker(function () {
    defineIcons('fas', icons);
  });

}());
(function () {
  'use strict';

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);

      if (enumerableOnly) {
        symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }

      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(Object(source), true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _typeof(obj) {
    "@babel/helpers - typeof";

    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function (obj) {
        return typeof obj;
      };
    } else {
      _typeof = function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }

  function _iterableToArrayLimit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;

    var _s, _e;

    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
  }

  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;

    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

    return arr2;
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var noop = function noop() {};

  var _WINDOW = {};
  var _DOCUMENT = {};
  var _MUTATION_OBSERVER = null;
  var _PERFORMANCE = {
    mark: noop,
    measure: noop
  };

  try {
    if (typeof window !== 'undefined') _WINDOW = window;
    if (typeof document !== 'undefined') _DOCUMENT = document;
    if (typeof MutationObserver !== 'undefined') _MUTATION_OBSERVER = MutationObserver;
    if (typeof performance !== 'undefined') _PERFORMANCE = performance;
  } catch (e) {}

  var _ref = _WINDOW.navigator || {},
      _ref$userAgent = _ref.userAgent,
      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;

  var WINDOW = _WINDOW;
  var DOCUMENT = _DOCUMENT;
  var MUTATION_OBSERVER = _MUTATION_OBSERVER;
  var PERFORMANCE = _PERFORMANCE;
  var IS_BROWSER = !!WINDOW.document;
  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';
  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');

  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';
  var UNITS_IN_GRID = 16;
  var DEFAULT_FAMILY_PREFIX = 'fa';
  var DEFAULT_REPLACEMENT_CLASS = 'svg-inline--fa';
  var DATA_FA_I2SVG = 'data-fa-i2svg';
  var DATA_FA_PSEUDO_ELEMENT = 'data-fa-pseudo-element';
  var DATA_FA_PSEUDO_ELEMENT_PENDING = 'data-fa-pseudo-element-pending';
  var DATA_PREFIX = 'data-prefix';
  var DATA_ICON = 'data-icon';
  var HTML_CLASS_I2SVG_BASE_CLASS = 'fontawesome-i2svg';
  var MUTATION_APPROACH_ASYNC = 'async';
  var TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS = ['HTML', 'HEAD', 'STYLE', 'SCRIPT'];
  var PRODUCTION = function () {
    try {
      return "production" === 'production';
    } catch (e) {
      return false;
    }
  }();
  var PREFIX_TO_STYLE = {
    'fas': 'solid',
    'far': 'regular',
    'fal': 'light',
    'fad': 'duotone',
    'fab': 'brands',
    'fak': 'kit',
    'fa': 'solid'
  };
  var STYLE_TO_PREFIX = {
    'solid': 'fas',
    'regular': 'far',
    'light': 'fal',
    'duotone': 'fad',
    'brands': 'fab',
    'kit': 'fak'
  };
  var LAYERS_TEXT_CLASSNAME = 'fa-layers-text';
  var FONT_FAMILY_PATTERN = /Font Awesome ([5 ]*)(Solid|Regular|Light|Duotone|Brands|Free|Pro|Kit).*/i; // TODO: do we need to handle font-weight for kit SVG pseudo-elements?

  var FONT_WEIGHT_TO_PREFIX = {
    '900': 'fas',
    '400': 'far',
    'normal': 'far',
    '300': 'fal'
  };
  var oneToTen = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
  var oneToTwenty = oneToTen.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);
  var ATTRIBUTES_WATCHED_FOR_MUTATION = ['class', 'data-prefix', 'data-icon', 'data-fa-transform', 'data-fa-mask'];
  var DUOTONE_CLASSES = {
    GROUP: 'group',
    SWAP_OPACITY: 'swap-opacity',
    PRIMARY: 'primary',
    SECONDARY: 'secondary'
  };
  var RESERVED_CLASSES = ['xs', 'sm', 'lg', 'fw', 'ul', 'li', 'border', 'pull-left', 'pull-right', 'spin', 'pulse', 'rotate-90', 'rotate-180', 'rotate-270', 'flip-horizontal', 'flip-vertical', 'flip-both', 'stack', 'stack-1x', 'stack-2x', 'inverse', 'layers', 'layers-text', 'layers-counter', DUOTONE_CLASSES.GROUP, DUOTONE_CLASSES.SWAP_OPACITY, DUOTONE_CLASSES.PRIMARY, DUOTONE_CLASSES.SECONDARY].concat(oneToTen.map(function (n) {
    return "".concat(n, "x");
  })).concat(oneToTwenty.map(function (n) {
    return "w-".concat(n);
  }));

  var initial = WINDOW.FontAwesomeConfig || {};

  function getAttrConfig(attr) {
    var element = DOCUMENT.querySelector('script[' + attr + ']');

    if (element) {
      return element.getAttribute(attr);
    }
  }

  function coerce(val) {
    // Getting an empty string will occur if the attribute is set on the HTML tag but without a value
    // We'll assume that this is an indication that it should be toggled to true
    // For example <script data-search-pseudo-elements src="..."></script>
    if (val === '') return true;
    if (val === 'false') return false;
    if (val === 'true') return true;
    return val;
  }

  if (DOCUMENT && typeof DOCUMENT.querySelector === 'function') {
    var attrs = [['data-family-prefix', 'familyPrefix'], ['data-replacement-class', 'replacementClass'], ['data-auto-replace-svg', 'autoReplaceSvg'], ['data-auto-add-css', 'autoAddCss'], ['data-auto-a11y', 'autoA11y'], ['data-search-pseudo-elements', 'searchPseudoElements'], ['data-observe-mutations', 'observeMutations'], ['data-mutate-approach', 'mutateApproach'], ['data-keep-original-source', 'keepOriginalSource'], ['data-measure-performance', 'measurePerformance'], ['data-show-missing-icons', 'showMissingIcons']];
    attrs.forEach(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          attr = _ref2[0],
          key = _ref2[1];

      var val = coerce(getAttrConfig(attr));

      if (val !== undefined && val !== null) {
        initial[key] = val;
      }
    });
  }

  var _default = {
    familyPrefix: DEFAULT_FAMILY_PREFIX,
    replacementClass: DEFAULT_REPLACEMENT_CLASS,
    autoReplaceSvg: true,
    autoAddCss: true,
    autoA11y: true,
    searchPseudoElements: false,
    observeMutations: true,
    mutateApproach: 'async',
    keepOriginalSource: true,
    measurePerformance: false,
    showMissingIcons: true
  };

  var _config = _objectSpread2(_objectSpread2({}, _default), initial);

  if (!_config.autoReplaceSvg) _config.observeMutations = false;

  var config = _objectSpread2({}, _config);

  WINDOW.FontAwesomeConfig = config;

  var w = WINDOW || {};
  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};
  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};
  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};
  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];
  var namespace = w[NAMESPACE_IDENTIFIER];

  var functions = [];

  var listener = function listener() {
    DOCUMENT.removeEventListener('DOMContentLoaded', listener);
    loaded = 1;
    functions.map(function (fn) {
      return fn();
    });
  };

  var loaded = false;

  if (IS_DOM) {
    loaded = (DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(DOCUMENT.readyState);
    if (!loaded) DOCUMENT.addEventListener('DOMContentLoaded', listener);
  }

  function domready (fn) {
    if (!IS_DOM) return;
    loaded ? setTimeout(fn, 0) : functions.push(fn);
  }

  var PENDING = 'pending';
  var SETTLED = 'settled';
  var FULFILLED = 'fulfilled';
  var REJECTED = 'rejected';

  var NOOP = function NOOP() {};

  var isNode = typeof global !== 'undefined' && typeof global.process !== 'undefined' && typeof global.process.emit === 'function';
  var asyncSetTimer = typeof setImmediate === 'undefined' ? setTimeout : setImmediate;
  var asyncQueue = [];
  var asyncTimer;

  function asyncFlush() {
    // run promise callbacks
    for (var i = 0; i < asyncQueue.length; i++) {
      asyncQueue[i][0](asyncQueue[i][1]);
    } // reset async asyncQueue


    asyncQueue = [];
    asyncTimer = false;
  }

  function asyncCall(callback, arg) {
    asyncQueue.push([callback, arg]);

    if (!asyncTimer) {
      asyncTimer = true;
      asyncSetTimer(asyncFlush, 0);
    }
  }

  function invokeResolver(resolver, promise) {
    function resolvePromise(value) {
      resolve(promise, value);
    }

    function rejectPromise(reason) {
      reject(promise, reason);
    }

    try {
      resolver(resolvePromise, rejectPromise);
    } catch (e) {
      rejectPromise(e);
    }
  }

  function invokeCallback(subscriber) {
    var owner = subscriber.owner;
    var settled = owner._state;
    var value = owner._data;
    var callback = subscriber[settled];
    var promise = subscriber.then;

    if (typeof callback === 'function') {
      settled = FULFILLED;

      try {
        value = callback(value);
      } catch (e) {
        reject(promise, e);
      }
    }

    if (!handleThenable(promise, value)) {
      if (settled === FULFILLED) {
        resolve(promise, value);
      }

      if (settled === REJECTED) {
        reject(promise, value);
      }
    }
  }

  function handleThenable(promise, value) {
    var resolved;

    try {
      if (promise === value) {
        throw new TypeError('A promises callback cannot return that same promise.');
      }

      if (value && (typeof value === 'function' || _typeof(value) === 'object')) {
        // then should be retrieved only once
        var then = value.then;

        if (typeof then === 'function') {
          then.call(value, function (val) {
            if (!resolved) {
              resolved = true;

              if (value === val) {
                fulfill(promise, val);
              } else {
                resolve(promise, val);
              }
            }
          }, function (reason) {
            if (!resolved) {
              resolved = true;
              reject(promise, reason);
            }
          });
          return true;
        }
      }
    } catch (e) {
      if (!resolved) {
        reject(promise, e);
      }

      return true;
    }

    return false;
  }

  function resolve(promise, value) {
    if (promise === value || !handleThenable(promise, value)) {
      fulfill(promise, value);
    }
  }

  function fulfill(promise, value) {
    if (promise._state === PENDING) {
      promise._state = SETTLED;
      promise._data = value;
      asyncCall(publishFulfillment, promise);
    }
  }

  function reject(promise, reason) {
    if (promise._state === PENDING) {
      promise._state = SETTLED;
      promise._data = reason;
      asyncCall(publishRejection, promise);
    }
  }

  function publish(promise) {
    promise._then = promise._then.forEach(invokeCallback);
  }

  function publishFulfillment(promise) {
    promise._state = FULFILLED;
    publish(promise);
  }

  function publishRejection(promise) {
    promise._state = REJECTED;
    publish(promise);

    if (!promise._handled && isNode) {
      global.process.emit('unhandledRejection', promise._data, promise);
    }
  }

  function notifyRejectionHandled(promise) {
    global.process.emit('rejectionHandled', promise);
  }
  /**
   * @class
   */


  function P(resolver) {
    if (typeof resolver !== 'function') {
      throw new TypeError('Promise resolver ' + resolver + ' is not a function');
    }

    if (this instanceof P === false) {
      throw new TypeError('Failed to construct \'Promise\': Please use the \'new\' operator, this object constructor cannot be called as a function.');
    }

    this._then = [];
    invokeResolver(resolver, this);
  }

  P.prototype = {
    constructor: P,
    _state: PENDING,
    _then: null,
    _data: undefined,
    _handled: false,
    then: function then(onFulfillment, onRejection) {
      var subscriber = {
        owner: this,
        then: new this.constructor(NOOP),
        fulfilled: onFulfillment,
        rejected: onRejection
      };

      if ((onRejection || onFulfillment) && !this._handled) {
        this._handled = true;

        if (this._state === REJECTED && isNode) {
          asyncCall(notifyRejectionHandled, this);
        }
      }

      if (this._state === FULFILLED || this._state === REJECTED) {
        // already resolved, call callback async
        asyncCall(invokeCallback, subscriber);
      } else {
        // subscribe
        this._then.push(subscriber);
      }

      return subscriber.then;
    },
    catch: function _catch(onRejection) {
      return this.then(null, onRejection);
    }
  };

  P.all = function (promises) {
    if (!Array.isArray(promises)) {
      throw new TypeError('You must pass an array to Promise.all().');
    }

    return new P(function (resolve, reject) {
      var results = [];
      var remaining = 0;

      function resolver(index) {
        remaining++;
        return function (value) {
          results[index] = value;

          if (! --remaining) {
            resolve(results);
          }
        };
      }

      for (var i = 0, promise; i < promises.length; i++) {
        promise = promises[i];

        if (promise && typeof promise.then === 'function') {
          promise.then(resolver(i), reject);
        } else {
          results[i] = promise;
        }
      }

      if (!remaining) {
        resolve(results);
      }
    });
  };

  P.race = function (promises) {
    if (!Array.isArray(promises)) {
      throw new TypeError('You must pass an array to Promise.race().');
    }

    return new P(function (resolve, reject) {
      for (var i = 0, promise; i < promises.length; i++) {
        promise = promises[i];

        if (promise && typeof promise.then === 'function') {
          promise.then(resolve, reject);
        } else {
          resolve(promise);
        }
      }
    });
  };

  P.resolve = function (value) {
    if (value && _typeof(value) === 'object' && value.constructor === P) {
      return value;
    }

    return new P(function (resolve) {
      resolve(value);
    });
  };

  P.reject = function (reason) {
    return new P(function (resolve, reject) {
      reject(reason);
    });
  };

  var picked = typeof Promise === 'function' ? Promise : P;

  var d = UNITS_IN_GRID;
  var meaninglessTransform = {
    size: 16,
    x: 0,
    y: 0,
    rotate: 0,
    flipX: false,
    flipY: false
  };

  function isReserved(name) {
    return ~RESERVED_CLASSES.indexOf(name);
  }

  function bunker(fn) {
    try {
      fn();
    } catch (e) {
      if (!PRODUCTION) {
        throw e;
      }
    }
  }
  function insertCss(css) {
    if (!css || !IS_DOM) {
      return;
    }

    var style = DOCUMENT.createElement('style');
    style.setAttribute('type', 'text/css');
    style.innerHTML = css;
    var headChildren = DOCUMENT.head.childNodes;
    var beforeChild = null;

    for (var i = headChildren.length - 1; i > -1; i--) {
      var child = headChildren[i];
      var tagName = (child.tagName || '').toUpperCase();

      if (['STYLE', 'LINK'].indexOf(tagName) > -1) {
        beforeChild = child;
      }
    }

    DOCUMENT.head.insertBefore(style, beforeChild);
    return css;
  }
  var idPool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
  function nextUniqueId() {
    var size = 12;
    var id = '';

    while (size-- > 0) {
      id += idPool[Math.random() * 62 | 0];
    }

    return id;
  }
  function toArray(obj) {
    var array = [];

    for (var i = (obj || []).length >>> 0; i--;) {
      array[i] = obj[i];
    }

    return array;
  }
  function classArray(node) {
    if (node.classList) {
      return toArray(node.classList);
    } else {
      return (node.getAttribute('class') || '').split(' ').filter(function (i) {
        return i;
      });
    }
  }
  function getIconName(familyPrefix, cls) {
    var parts = cls.split('-');
    var prefix = parts[0];
    var iconName = parts.slice(1).join('-');

    if (prefix === familyPrefix && iconName !== '' && !isReserved(iconName)) {
      return iconName;
    } else {
      return null;
    }
  }
  function htmlEscape(str) {
    return "".concat(str).replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
  }
  function joinAttributes(attributes) {
    return Object.keys(attributes || {}).reduce(function (acc, attributeName) {
      return acc + "".concat(attributeName, "=\"").concat(htmlEscape(attributes[attributeName]), "\" ");
    }, '').trim();
  }
  function joinStyles(styles) {
    return Object.keys(styles || {}).reduce(function (acc, styleName) {
      return acc + "".concat(styleName, ": ").concat(styles[styleName], ";");
    }, '');
  }
  function transformIsMeaningful(transform) {
    return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;
  }
  function transformForSvg(_ref) {
    var transform = _ref.transform,
        containerWidth = _ref.containerWidth,
        iconWidth = _ref.iconWidth;
    var outer = {
      transform: "translate(".concat(containerWidth / 2, " 256)")
    };
    var innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
    var innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
    var innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
    var inner = {
      transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
    };
    var path = {
      transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
    };
    return {
      outer: outer,
      inner: inner,
      path: path
    };
  }
  function transformForCss(_ref2) {
    var transform = _ref2.transform,
        _ref2$width = _ref2.width,
        width = _ref2$width === void 0 ? UNITS_IN_GRID : _ref2$width,
        _ref2$height = _ref2.height,
        height = _ref2$height === void 0 ? UNITS_IN_GRID : _ref2$height,
        _ref2$startCentered = _ref2.startCentered,
        startCentered = _ref2$startCentered === void 0 ? false : _ref2$startCentered;
    var val = '';

    if (startCentered && IS_IE) {
      val += "translate(".concat(transform.x / d - width / 2, "em, ").concat(transform.y / d - height / 2, "em) ");
    } else if (startCentered) {
      val += "translate(calc(-50% + ".concat(transform.x / d, "em), calc(-50% + ").concat(transform.y / d, "em)) ");
    } else {
      val += "translate(".concat(transform.x / d, "em, ").concat(transform.y / d, "em) ");
    }

    val += "scale(".concat(transform.size / d * (transform.flipX ? -1 : 1), ", ").concat(transform.size / d * (transform.flipY ? -1 : 1), ") ");
    val += "rotate(".concat(transform.rotate, "deg) ");
    return val;
  }

  var ALL_SPACE = {
    x: 0,
    y: 0,
    width: '100%',
    height: '100%'
  };

  function fillBlack(abstract) {
    var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

    if (abstract.attributes && (abstract.attributes.fill || force)) {
      abstract.attributes.fill = 'black';
    }

    return abstract;
  }

  function deGroup(abstract) {
    if (abstract.tag === 'g') {
      return abstract.children;
    } else {
      return [abstract];
    }
  }

  function makeIconMasking (_ref) {
    var children = _ref.children,
        attributes = _ref.attributes,
        main = _ref.main,
        mask = _ref.mask,
        explicitMaskId = _ref.maskId,
        transform = _ref.transform;
    var mainWidth = main.width,
        mainPath = main.icon;
    var maskWidth = mask.width,
        maskPath = mask.icon;
    var trans = transformForSvg({
      transform: transform,
      containerWidth: maskWidth,
      iconWidth: mainWidth
    });
    var maskRect = {
      tag: 'rect',
      attributes: _objectSpread2(_objectSpread2({}, ALL_SPACE), {}, {
        fill: 'white'
      })
    };
    var maskInnerGroupChildrenMixin = mainPath.children ? {
      children: mainPath.children.map(fillBlack)
    } : {};
    var maskInnerGroup = {
      tag: 'g',
      attributes: _objectSpread2({}, trans.inner),
      children: [fillBlack(_objectSpread2({
        tag: mainPath.tag,
        attributes: _objectSpread2(_objectSpread2({}, mainPath.attributes), trans.path)
      }, maskInnerGroupChildrenMixin))]
    };
    var maskOuterGroup = {
      tag: 'g',
      attributes: _objectSpread2({}, trans.outer),
      children: [maskInnerGroup]
    };
    var maskId = "mask-".concat(explicitMaskId || nextUniqueId());
    var clipId = "clip-".concat(explicitMaskId || nextUniqueId());
    var maskTag = {
      tag: 'mask',
      attributes: _objectSpread2(_objectSpread2({}, ALL_SPACE), {}, {
        id: maskId,
        maskUnits: 'userSpaceOnUse',
        maskContentUnits: 'userSpaceOnUse'
      }),
      children: [maskRect, maskOuterGroup]
    };
    var defs = {
      tag: 'defs',
      children: [{
        tag: 'clipPath',
        attributes: {
          id: clipId
        },
        children: deGroup(maskPath)
      }, maskTag]
    };
    children.push(defs, {
      tag: 'rect',
      attributes: _objectSpread2({
        fill: 'currentColor',
        'clip-path': "url(#".concat(clipId, ")"),
        mask: "url(#".concat(maskId, ")")
      }, ALL_SPACE)
    });
    return {
      children: children,
      attributes: attributes
    };
  }

  function makeIconStandard (_ref) {
    var children = _ref.children,
        attributes = _ref.attributes,
        main = _ref.main,
        transform = _ref.transform,
        styles = _ref.styles;
    var styleString = joinStyles(styles);

    if (styleString.length > 0) {
      attributes['style'] = styleString;
    }

    if (transformIsMeaningful(transform)) {
      var trans = transformForSvg({
        transform: transform,
        containerWidth: main.width,
        iconWidth: main.width
      });
      children.push({
        tag: 'g',
        attributes: _objectSpread2({}, trans.outer),
        children: [{
          tag: 'g',
          attributes: _objectSpread2({}, trans.inner),
          children: [{
            tag: main.icon.tag,
            children: main.icon.children,
            attributes: _objectSpread2(_objectSpread2({}, main.icon.attributes), trans.path)
          }]
        }]
      });
    } else {
      children.push(main.icon);
    }

    return {
      children: children,
      attributes: attributes
    };
  }

  function asIcon (_ref) {
    var children = _ref.children,
        main = _ref.main,
        mask = _ref.mask,
        attributes = _ref.attributes,
        styles = _ref.styles,
        transform = _ref.transform;

    if (transformIsMeaningful(transform) && main.found && !mask.found) {
      var width = main.width,
          height = main.height;
      var offset = {
        x: width / height / 2,
        y: 0.5
      };
      attributes['style'] = joinStyles(_objectSpread2(_objectSpread2({}, styles), {}, {
        'transform-origin': "".concat(offset.x + transform.x / 16, "em ").concat(offset.y + transform.y / 16, "em")
      }));
    }

    return [{
      tag: 'svg',
      attributes: attributes,
      children: children
    }];
  }

  function asSymbol (_ref) {
    var prefix = _ref.prefix,
        iconName = _ref.iconName,
        children = _ref.children,
        attributes = _ref.attributes,
        symbol = _ref.symbol;
    var id = symbol === true ? "".concat(prefix, "-").concat(config.familyPrefix, "-").concat(iconName) : symbol;
    return [{
      tag: 'svg',
      attributes: {
        style: 'display: none;'
      },
      children: [{
        tag: 'symbol',
        attributes: _objectSpread2(_objectSpread2({}, attributes), {}, {
          id: id
        }),
        children: children
      }]
    }];
  }

  function makeInlineSvgAbstract(params) {
    var _params$icons = params.icons,
        main = _params$icons.main,
        mask = _params$icons.mask,
        prefix = params.prefix,
        iconName = params.iconName,
        transform = params.transform,
        symbol = params.symbol,
        title = params.title,
        maskId = params.maskId,
        titleId = params.titleId,
        extra = params.extra,
        _params$watchable = params.watchable,
        watchable = _params$watchable === void 0 ? false : _params$watchable;

    var _ref = mask.found ? mask : main,
        width = _ref.width,
        height = _ref.height;

    var isUploadedIcon = prefix === 'fak';
    var widthClass = isUploadedIcon ? '' : "fa-w-".concat(Math.ceil(width / height * 16));
    var attrClass = [config.replacementClass, iconName ? "".concat(config.familyPrefix, "-").concat(iconName) : '', widthClass].filter(function (c) {
      return extra.classes.indexOf(c) === -1;
    }).filter(function (c) {
      return c !== '' || !!c;
    }).concat(extra.classes).join(' ');
    var content = {
      children: [],
      attributes: _objectSpread2(_objectSpread2({}, extra.attributes), {}, {
        'data-prefix': prefix,
        'data-icon': iconName,
        'class': attrClass,
        'role': extra.attributes.role || 'img',
        'xmlns': 'http://www.w3.org/2000/svg',
        'viewBox': "0 0 ".concat(width, " ").concat(height)
      })
    };
    var uploadedIconWidthStyle = isUploadedIcon && !~extra.classes.indexOf('fa-fw') ? {
      width: "".concat(width / height * 16 * 0.0625, "em")
    } : {};

    if (watchable) {
      content.attributes[DATA_FA_I2SVG] = '';
    }

    if (title) content.children.push({
      tag: 'title',
      attributes: {
        id: content.attributes['aria-labelledby'] || "title-".concat(titleId || nextUniqueId())
      },
      children: [title]
    });

    var args = _objectSpread2(_objectSpread2({}, content), {}, {
      prefix: prefix,
      iconName: iconName,
      main: main,
      mask: mask,
      maskId: maskId,
      transform: transform,
      symbol: symbol,
      styles: _objectSpread2(_objectSpread2({}, uploadedIconWidthStyle), extra.styles)
    });

    var _ref2 = mask.found && main.found ? makeIconMasking(args) : makeIconStandard(args),
        children = _ref2.children,
        attributes = _ref2.attributes;

    args.children = children;
    args.attributes = attributes;

    if (symbol) {
      return asSymbol(args);
    } else {
      return asIcon(args);
    }
  }
  function makeLayersTextAbstract(params) {
    var content = params.content,
        width = params.width,
        height = params.height,
        transform = params.transform,
        title = params.title,
        extra = params.extra,
        _params$watchable2 = params.watchable,
        watchable = _params$watchable2 === void 0 ? false : _params$watchable2;

    var attributes = _objectSpread2(_objectSpread2(_objectSpread2({}, extra.attributes), title ? {
      'title': title
    } : {}), {}, {
      'class': extra.classes.join(' ')
    });

    if (watchable) {
      attributes[DATA_FA_I2SVG] = '';
    }

    var styles = _objectSpread2({}, extra.styles);

    if (transformIsMeaningful(transform)) {
      styles['transform'] = transformForCss({
        transform: transform,
        startCentered: true,
        width: width,
        height: height
      });
      styles['-webkit-transform'] = styles['transform'];
    }

    var styleString = joinStyles(styles);

    if (styleString.length > 0) {
      attributes['style'] = styleString;
    }

    var val = [];
    val.push({
      tag: 'span',
      attributes: attributes,
      children: [content]
    });

    if (title) {
      val.push({
        tag: 'span',
        attributes: {
          class: 'sr-only'
        },
        children: [title]
      });
    }

    return val;
  }
  function makeLayersCounterAbstract(params) {
    var content = params.content,
        title = params.title,
        extra = params.extra;

    var attributes = _objectSpread2(_objectSpread2(_objectSpread2({}, extra.attributes), title ? {
      'title': title
    } : {}), {}, {
      'class': extra.classes.join(' ')
    });

    var styleString = joinStyles(extra.styles);

    if (styleString.length > 0) {
      attributes['style'] = styleString;
    }

    var val = [];
    val.push({
      tag: 'span',
      attributes: attributes,
      children: [content]
    });

    if (title) {
      val.push({
        tag: 'span',
        attributes: {
          class: 'sr-only'
        },
        children: [title]
      });
    }

    return val;
  }

  var noop$1 = function noop() {};

  var p = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {
    mark: noop$1,
    measure: noop$1
  };
  var preamble = "FA \"5.15.4\"";

  var begin = function begin(name) {
    p.mark("".concat(preamble, " ").concat(name, " begins"));
    return function () {
      return end(name);
    };
  };

  var end = function end(name) {
    p.mark("".concat(preamble, " ").concat(name, " ends"));
    p.measure("".concat(preamble, " ").concat(name), "".concat(preamble, " ").concat(name, " begins"), "".concat(preamble, " ").concat(name, " ends"));
  };

  var perf = {
    begin: begin,
    end: end
  };

  /**
   * Internal helper to bind a function known to have 4 arguments
   * to a given context.
   */

  var bindInternal4 = function bindInternal4(func, thisContext) {
    return function (a, b, c, d) {
      return func.call(thisContext, a, b, c, d);
    };
  };

  /**
   * # Reduce
   *
   * A fast object `.reduce()` implementation.
   *
   * @param  {Object}   subject      The object to reduce over.
   * @param  {Function} fn           The reducer function.
   * @param  {mixed}    initialValue The initial value for the reducer, defaults to subject[0].
   * @param  {Object}   thisContext  The context for the reducer.
   * @return {mixed}                 The final result.
   */


  var reduce = function fastReduceObject(subject, fn, initialValue, thisContext) {
    var keys = Object.keys(subject),
        length = keys.length,
        iterator = thisContext !== undefined ? bindInternal4(fn, thisContext) : fn,
        i,
        key,
        result;

    if (initialValue === undefined) {
      i = 1;
      result = subject[keys[0]];
    } else {
      i = 0;
      result = initialValue;
    }

    for (; i < length; i++) {
      key = keys[i];
      result = iterator(result, subject[key], key, subject);
    }

    return result;
  };

  function toHex(unicode) {
    var result = '';

    for (var i = 0; i < unicode.length; i++) {
      var hex = unicode.charCodeAt(i).toString(16);
      result += ('000' + hex).slice(-4);
    }

    return result;
  }

  function defineIcons(prefix, icons) {
    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var _params$skipHooks = params.skipHooks,
        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;
    var normalized = Object.keys(icons).reduce(function (acc, iconName) {
      var icon = icons[iconName];
      var expanded = !!icon.icon;

      if (expanded) {
        acc[icon.iconName] = icon.icon;
      } else {
        acc[iconName] = icon;
      }

      return acc;
    }, {});

    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {
      namespace.hooks.addPack(prefix, normalized);
    } else {
      namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), normalized);
    }
    /**
     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction
     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias
     * for `fas` so we'll easy the upgrade process for our users by automatically defining
     * this as well.
     */


    if (prefix === 'fas') {
      defineIcons('fa', icons);
    }
  }

  var styles = namespace.styles,
      shims = namespace.shims;
  var _byUnicode = {};
  var _byLigature = {};
  var _byOldName = {};
  var build = function build() {
    var lookup = function lookup(reducer) {
      return reduce(styles, function (o, style, prefix) {
        o[prefix] = reduce(style, reducer, {});
        return o;
      }, {});
    };

    _byUnicode = lookup(function (acc, icon, iconName) {
      if (icon[3]) {
        acc[icon[3]] = iconName;
      }

      return acc;
    });
    _byLigature = lookup(function (acc, icon, iconName) {
      var ligatures = icon[2];
      acc[iconName] = iconName;
      ligatures.forEach(function (ligature) {
        acc[ligature] = iconName;
      });
      return acc;
    });
    var hasRegular = ('far' in styles);
    _byOldName = reduce(shims, function (acc, shim) {
      var oldName = shim[0];
      var prefix = shim[1];
      var iconName = shim[2];

      if (prefix === 'far' && !hasRegular) {
        prefix = 'fas';
      }

      acc[oldName] = {
        prefix: prefix,
        iconName: iconName
      };
      return acc;
    }, {});
  };
  build();
  function byUnicode(prefix, unicode) {
    return (_byUnicode[prefix] || {})[unicode];
  }
  function byLigature(prefix, ligature) {
    return (_byLigature[prefix] || {})[ligature];
  }
  function byOldName(name) {
    return _byOldName[name] || {
      prefix: null,
      iconName: null
    };
  }

  var styles$1 = namespace.styles;
  var emptyCanonicalIcon = function emptyCanonicalIcon() {
    return {
      prefix: null,
      iconName: null,
      rest: []
    };
  };
  function getCanonicalIcon(values) {
    return values.reduce(function (acc, cls) {
      var iconName = getIconName(config.familyPrefix, cls);

      if (styles$1[cls]) {
        acc.prefix = cls;
      } else if (config.autoFetchSvg && Object.keys(PREFIX_TO_STYLE).indexOf(cls) > -1) {
        acc.prefix = cls;
      } else if (iconName) {
        var shim = acc.prefix === 'fa' ? byOldName(iconName) : {};
        acc.iconName = shim.iconName || iconName;
        acc.prefix = shim.prefix || acc.prefix;
      } else if (cls !== config.replacementClass && cls.indexOf('fa-w-') !== 0) {
        acc.rest.push(cls);
      }

      return acc;
    }, emptyCanonicalIcon());
  }
  function iconFromMapping(mapping, prefix, iconName) {
    if (mapping && mapping[prefix] && mapping[prefix][iconName]) {
      return {
        prefix: prefix,
        iconName: iconName,
        icon: mapping[prefix][iconName]
      };
    }
  }

  function toHtml(abstractNodes) {
    var tag = abstractNodes.tag,
        _abstractNodes$attrib = abstractNodes.attributes,
        attributes = _abstractNodes$attrib === void 0 ? {} : _abstractNodes$attrib,
        _abstractNodes$childr = abstractNodes.children,
        children = _abstractNodes$childr === void 0 ? [] : _abstractNodes$childr;

    if (typeof abstractNodes === 'string') {
      return htmlEscape(abstractNodes);
    } else {
      return "<".concat(tag, " ").concat(joinAttributes(attributes), ">").concat(children.map(toHtml).join(''), "</").concat(tag, ">");
    }
  }

  var noop$2 = function noop() {};

  function isWatched(node) {
    var i2svg = node.getAttribute ? node.getAttribute(DATA_FA_I2SVG) : null;
    return typeof i2svg === 'string';
  }

  function getMutator() {
    if (config.autoReplaceSvg === true) {
      return mutators.replace;
    }

    var mutator = mutators[config.autoReplaceSvg];
    return mutator || mutators.replace;
  }

  var mutators = {
    replace: function replace(mutation) {
      var node = mutation[0];
      var abstract = mutation[1];
      var newOuterHTML = abstract.map(function (a) {
        return toHtml(a);
      }).join('\n');

      if (node.parentNode && node.outerHTML) {
        node.outerHTML = newOuterHTML + (config.keepOriginalSource && node.tagName.toLowerCase() !== 'svg' ? "<!-- ".concat(node.outerHTML, " Font Awesome fontawesome.com -->") : '');
      } else if (node.parentNode) {
        var newNode = document.createElement('span');
        node.parentNode.replaceChild(newNode, node);
        newNode.outerHTML = newOuterHTML;
      }
    },
    nest: function nest(mutation) {
      var node = mutation[0];
      var abstract = mutation[1]; // If we already have a replaced node we do not want to continue nesting within it.
      // Short-circuit to the standard replacement

      if (~classArray(node).indexOf(config.replacementClass)) {
        return mutators.replace(mutation);
      }

      var forSvg = new RegExp("".concat(config.familyPrefix, "-.*"));
      delete abstract[0].attributes.style;
      delete abstract[0].attributes.id;
      var splitClasses = abstract[0].attributes.class.split(' ').reduce(function (acc, cls) {
        if (cls === config.replacementClass || cls.match(forSvg)) {
          acc.toSvg.push(cls);
        } else {
          acc.toNode.push(cls);
        }

        return acc;
      }, {
        toNode: [],
        toSvg: []
      });
      abstract[0].attributes.class = splitClasses.toSvg.join(' ');
      var newInnerHTML = abstract.map(function (a) {
        return toHtml(a);
      }).join('\n');
      node.setAttribute('class', splitClasses.toNode.join(' '));
      node.setAttribute(DATA_FA_I2SVG, '');
      node.innerHTML = newInnerHTML;
    }
  };

  function performOperationSync(op) {
    op();
  }

  function perform(mutations, callback) {
    var callbackFunction = typeof callback === 'function' ? callback : noop$2;

    if (mutations.length === 0) {
      callbackFunction();
    } else {
      var frame = performOperationSync;

      if (config.mutateApproach === MUTATION_APPROACH_ASYNC) {
        frame = WINDOW.requestAnimationFrame || performOperationSync;
      }

      frame(function () {
        var mutator = getMutator();
        var mark = perf.begin('mutate');
        mutations.map(mutator);
        mark();
        callbackFunction();
      });
    }
  }
  var disabled = false;
  function disableObservation() {
    disabled = true;
  }
  function enableObservation() {
    disabled = false;
  }
  var mo = null;
  function observe(options) {
    if (!MUTATION_OBSERVER) {
      return;
    }

    if (!config.observeMutations) {
      return;
    }

    var treeCallback = options.treeCallback,
        nodeCallback = options.nodeCallback,
        pseudoElementsCallback = options.pseudoElementsCallback,
        _options$observeMutat = options.observeMutationsRoot,
        observeMutationsRoot = _options$observeMutat === void 0 ? DOCUMENT : _options$observeMutat;
    mo = new MUTATION_OBSERVER(function (objects) {
      if (disabled) return;
      toArray(objects).forEach(function (mutationRecord) {
        if (mutationRecord.type === 'childList' && mutationRecord.addedNodes.length > 0 && !isWatched(mutationRecord.addedNodes[0])) {
          if (config.searchPseudoElements) {
            pseudoElementsCallback(mutationRecord.target);
          }

          treeCallback(mutationRecord.target);
        }

        if (mutationRecord.type === 'attributes' && mutationRecord.target.parentNode && config.searchPseudoElements) {
          pseudoElementsCallback(mutationRecord.target.parentNode);
        }

        if (mutationRecord.type === 'attributes' && isWatched(mutationRecord.target) && ~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(mutationRecord.attributeName)) {
          if (mutationRecord.attributeName === 'class') {
            var _getCanonicalIcon = getCanonicalIcon(classArray(mutationRecord.target)),
                prefix = _getCanonicalIcon.prefix,
                iconName = _getCanonicalIcon.iconName;

            if (prefix) mutationRecord.target.setAttribute('data-prefix', prefix);
            if (iconName) mutationRecord.target.setAttribute('data-icon', iconName);
          } else {
            nodeCallback(mutationRecord.target);
          }
        }
      });
    });
    if (!IS_DOM) return;
    mo.observe(observeMutationsRoot, {
      childList: true,
      attributes: true,
      characterData: true,
      subtree: true
    });
  }
  function disconnect() {
    if (!mo) return;
    mo.disconnect();
  }

  function styleParser (node) {
    var style = node.getAttribute('style');
    var val = [];

    if (style) {
      val = style.split(';').reduce(function (acc, style) {
        var styles = style.split(':');
        var prop = styles[0];
        var value = styles.slice(1);

        if (prop && value.length > 0) {
          acc[prop] = value.join(':').trim();
        }

        return acc;
      }, {});
    }

    return val;
  }

  function classParser (node) {
    var existingPrefix = node.getAttribute('data-prefix');
    var existingIconName = node.getAttribute('data-icon');
    var innerText = node.innerText !== undefined ? node.innerText.trim() : '';
    var val = getCanonicalIcon(classArray(node));

    if (existingPrefix && existingIconName) {
      val.prefix = existingPrefix;
      val.iconName = existingIconName;
    }

    if (val.prefix && innerText.length > 1) {
      val.iconName = byLigature(val.prefix, node.innerText);
    } else if (val.prefix && innerText.length === 1) {
      val.iconName = byUnicode(val.prefix, toHex(node.innerText));
    }

    return val;
  }

  var parseTransformString = function parseTransformString(transformString) {
    var transform = {
      size: 16,
      x: 0,
      y: 0,
      flipX: false,
      flipY: false,
      rotate: 0
    };

    if (!transformString) {
      return transform;
    } else {
      return transformString.toLowerCase().split(' ').reduce(function (acc, n) {
        var parts = n.toLowerCase().split('-');
        var first = parts[0];
        var rest = parts.slice(1).join('-');

        if (first && rest === 'h') {
          acc.flipX = true;
          return acc;
        }

        if (first && rest === 'v') {
          acc.flipY = true;
          return acc;
        }

        rest = parseFloat(rest);

        if (isNaN(rest)) {
          return acc;
        }

        switch (first) {
          case 'grow':
            acc.size = acc.size + rest;
            break;

          case 'shrink':
            acc.size = acc.size - rest;
            break;

          case 'left':
            acc.x = acc.x - rest;
            break;

          case 'right':
            acc.x = acc.x + rest;
            break;

          case 'up':
            acc.y = acc.y - rest;
            break;

          case 'down':
            acc.y = acc.y + rest;
            break;

          case 'rotate':
            acc.rotate = acc.rotate + rest;
            break;
        }

        return acc;
      }, transform);
    }
  };
  function transformParser (node) {
    return parseTransformString(node.getAttribute('data-fa-transform'));
  }

  function symbolParser (node) {
    var symbol = node.getAttribute('data-fa-symbol');
    return symbol === null ? false : symbol === '' ? true : symbol;
  }

  function attributesParser (node) {
    var extraAttributes = toArray(node.attributes).reduce(function (acc, attr) {
      if (acc.name !== 'class' && acc.name !== 'style') {
        acc[attr.name] = attr.value;
      }

      return acc;
    }, {});
    var title = node.getAttribute('title');
    var titleId = node.getAttribute('data-fa-title-id');

    if (config.autoA11y) {
      if (title) {
        extraAttributes['aria-labelledby'] = "".concat(config.replacementClass, "-title-").concat(titleId || nextUniqueId());
      } else {
        extraAttributes['aria-hidden'] = 'true';
        extraAttributes['focusable'] = 'false';
      }
    }

    return extraAttributes;
  }

  function maskParser (node) {
    var mask = node.getAttribute('data-fa-mask');

    if (!mask) {
      return emptyCanonicalIcon();
    } else {
      return getCanonicalIcon(mask.split(' ').map(function (i) {
        return i.trim();
      }));
    }
  }

  function blankMeta() {
    return {
      iconName: null,
      title: null,
      titleId: null,
      prefix: null,
      transform: meaninglessTransform,
      symbol: false,
      mask: null,
      maskId: null,
      extra: {
        classes: [],
        styles: {},
        attributes: {}
      }
    };
  }
  function parseMeta(node) {
    var _classParser = classParser(node),
        iconName = _classParser.iconName,
        prefix = _classParser.prefix,
        extraClasses = _classParser.rest;

    var extraStyles = styleParser(node);
    var transform = transformParser(node);
    var symbol = symbolParser(node);
    var extraAttributes = attributesParser(node);
    var mask = maskParser(node);
    return {
      iconName: iconName,
      title: node.getAttribute('title'),
      titleId: node.getAttribute('data-fa-title-id'),
      prefix: prefix,
      transform: transform,
      symbol: symbol,
      mask: mask,
      maskId: node.getAttribute('data-fa-mask-id'),
      extra: {
        classes: extraClasses,
        styles: extraStyles,
        attributes: extraAttributes
      }
    };
  }

  function MissingIcon(error) {
    this.name = 'MissingIcon';
    this.message = error || 'Icon unavailable';
    this.stack = new Error().stack;
  }
  MissingIcon.prototype = Object.create(Error.prototype);
  MissingIcon.prototype.constructor = MissingIcon;

  var FILL = {
    fill: 'currentColor'
  };
  var ANIMATION_BASE = {
    attributeType: 'XML',
    repeatCount: 'indefinite',
    dur: '2s'
  };
  var RING = {
    tag: 'path',
    attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
      d: 'M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z'
    })
  };

  var OPACITY_ANIMATE = _objectSpread2(_objectSpread2({}, ANIMATION_BASE), {}, {
    attributeName: 'opacity'
  });

  var DOT = {
    tag: 'circle',
    attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
      cx: '256',
      cy: '364',
      r: '28'
    }),
    children: [{
      tag: 'animate',
      attributes: _objectSpread2(_objectSpread2({}, ANIMATION_BASE), {}, {
        attributeName: 'r',
        values: '28;14;28;28;14;28;'
      })
    }, {
      tag: 'animate',
      attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
        values: '1;0;1;1;0;1;'
      })
    }]
  };
  var QUESTION = {
    tag: 'path',
    attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
      opacity: '1',
      d: 'M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z'
    }),
    children: [{
      tag: 'animate',
      attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
        values: '1;0;0;0;0;1;'
      })
    }]
  };
  var EXCLAMATION = {
    tag: 'path',
    attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
      opacity: '0',
      d: 'M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z'
    }),
    children: [{
      tag: 'animate',
      attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
        values: '0;0;1;1;0;0;'
      })
    }]
  };
  var missing = {
    tag: 'g',
    children: [RING, DOT, QUESTION, EXCLAMATION]
  };

  var styles$2 = namespace.styles;
  function asFoundIcon(icon) {
    var width = icon[0];
    var height = icon[1];

    var _icon$slice = icon.slice(4),
        _icon$slice2 = _slicedToArray(_icon$slice, 1),
        vectorData = _icon$slice2[0];

    var element = null;

    if (Array.isArray(vectorData)) {
      element = {
        tag: 'g',
        attributes: {
          class: "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.GROUP)
        },
        children: [{
          tag: 'path',
          attributes: {
            class: "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.SECONDARY),
            fill: 'currentColor',
            d: vectorData[0]
          }
        }, {
          tag: 'path',
          attributes: {
            class: "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.PRIMARY),
            fill: 'currentColor',
            d: vectorData[1]
          }
        }]
      };
    } else {
      element = {
        tag: 'path',
        attributes: {
          fill: 'currentColor',
          d: vectorData
        }
      };
    }

    return {
      found: true,
      width: width,
      height: height,
      icon: element
    };
  }
  function findIcon(iconName, prefix) {
    return new picked(function (resolve, reject) {
      var val = {
        found: false,
        width: 512,
        height: 512,
        icon: missing
      };

      if (iconName && prefix && styles$2[prefix] && styles$2[prefix][iconName]) {
        var icon = styles$2[prefix][iconName];
        return resolve(asFoundIcon(icon));
      }

      if (iconName && prefix && !config.showMissingIcons) {
        reject(new MissingIcon("Icon is missing for prefix ".concat(prefix, " with icon name ").concat(iconName)));
      } else {
        resolve(val);
      }
    });
  }

  var styles$3 = namespace.styles;

  function generateSvgReplacementMutation(node, nodeMeta) {
    var iconName = nodeMeta.iconName,
        title = nodeMeta.title,
        titleId = nodeMeta.titleId,
        prefix = nodeMeta.prefix,
        transform = nodeMeta.transform,
        symbol = nodeMeta.symbol,
        mask = nodeMeta.mask,
        maskId = nodeMeta.maskId,
        extra = nodeMeta.extra;
    return new picked(function (resolve, reject) {
      picked.all([findIcon(iconName, prefix), findIcon(mask.iconName, mask.prefix)]).then(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
            main = _ref2[0],
            mask = _ref2[1];

        resolve([node, makeInlineSvgAbstract({
          icons: {
            main: main,
            mask: mask
          },
          prefix: prefix,
          iconName: iconName,
          transform: transform,
          symbol: symbol,
          mask: mask,
          maskId: maskId,
          title: title,
          titleId: titleId,
          extra: extra,
          watchable: true
        })]);
      });
    });
  }

  function generateLayersText(node, nodeMeta) {
    var title = nodeMeta.title,
        transform = nodeMeta.transform,
        extra = nodeMeta.extra;
    var width = null;
    var height = null;

    if (IS_IE) {
      var computedFontSize = parseInt(getComputedStyle(node).fontSize, 10);
      var boundingClientRect = node.getBoundingClientRect();
      width = boundingClientRect.width / computedFontSize;
      height = boundingClientRect.height / computedFontSize;
    }

    if (config.autoA11y && !title) {
      extra.attributes['aria-hidden'] = 'true';
    }

    return picked.resolve([node, makeLayersTextAbstract({
      content: node.innerHTML,
      width: width,
      height: height,
      transform: transform,
      title: title,
      extra: extra,
      watchable: true
    })]);
  }

  function generateMutation(node) {
    var nodeMeta = parseMeta(node);

    if (~nodeMeta.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME)) {
      return generateLayersText(node, nodeMeta);
    } else {
      return generateSvgReplacementMutation(node, nodeMeta);
    }
  }

  function onTree(root) {
    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    if (!IS_DOM) return;
    var htmlClassList = DOCUMENT.documentElement.classList;

    var hclAdd = function hclAdd(suffix) {
      return htmlClassList.add("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
    };

    var hclRemove = function hclRemove(suffix) {
      return htmlClassList.remove("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
    };

    var prefixes = config.autoFetchSvg ? Object.keys(PREFIX_TO_STYLE) : Object.keys(styles$3);
    var prefixesDomQuery = [".".concat(LAYERS_TEXT_CLASSNAME, ":not([").concat(DATA_FA_I2SVG, "])")].concat(prefixes.map(function (p) {
      return ".".concat(p, ":not([").concat(DATA_FA_I2SVG, "])");
    })).join(', ');

    if (prefixesDomQuery.length === 0) {
      return;
    }

    var candidates = [];

    try {
      candidates = toArray(root.querySelectorAll(prefixesDomQuery));
    } catch (e) {// noop
    }

    if (candidates.length > 0) {
      hclAdd('pending');
      hclRemove('complete');
    } else {
      return;
    }

    var mark = perf.begin('onTree');
    var mutations = candidates.reduce(function (acc, node) {
      try {
        var mutation = generateMutation(node);

        if (mutation) {
          acc.push(mutation);
        }
      } catch (e) {
        if (!PRODUCTION) {
          if (e instanceof MissingIcon) {
            console.error(e);
          }
        }
      }

      return acc;
    }, []);
    return new picked(function (resolve, reject) {
      picked.all(mutations).then(function (resolvedMutations) {
        perform(resolvedMutations, function () {
          hclAdd('active');
          hclAdd('complete');
          hclRemove('pending');
          if (typeof callback === 'function') callback();
          mark();
          resolve();
        });
      }).catch(function () {
        mark();
        reject();
      });
    });
  }
  function onNode(node) {
    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    generateMutation(node).then(function (mutation) {
      if (mutation) {
        perform([mutation], callback);
      }
    });
  }

  function replaceForPosition(node, position) {
    var pendingAttribute = "".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(position.replace(':', '-'));
    return new picked(function (resolve, reject) {
      if (node.getAttribute(pendingAttribute) !== null) {
        // This node is already being processed
        return resolve();
      }

      var children = toArray(node.children);
      var alreadyProcessedPseudoElement = children.filter(function (c) {
        return c.getAttribute(DATA_FA_PSEUDO_ELEMENT) === position;
      })[0];
      var styles = WINDOW.getComputedStyle(node, position);
      var fontFamily = styles.getPropertyValue('font-family').match(FONT_FAMILY_PATTERN);
      var fontWeight = styles.getPropertyValue('font-weight');
      var content = styles.getPropertyValue('content');

      if (alreadyProcessedPseudoElement && !fontFamily) {
        // If we've already processed it but the current computed style does not result in a font-family,
        // that probably means that a class name that was previously present to make the icon has been
        // removed. So we now should delete the icon.
        node.removeChild(alreadyProcessedPseudoElement);
        return resolve();
      } else if (fontFamily && content !== 'none' && content !== '') {
        var _content = styles.getPropertyValue('content');

        var prefix = ~['Solid', 'Regular', 'Light', 'Duotone', 'Brands', 'Kit'].indexOf(fontFamily[2]) ? STYLE_TO_PREFIX[fontFamily[2].toLowerCase()] : FONT_WEIGHT_TO_PREFIX[fontWeight];
        var hexValue = toHex(_content.length === 3 ? _content.substr(1, 1) : _content);
        var iconName = byUnicode(prefix, hexValue);
        var iconIdentifier = iconName; // Only convert the pseudo element in this :before/:after position into an icon if we haven't
        // already done so with the same prefix and iconName

        if (iconName && (!alreadyProcessedPseudoElement || alreadyProcessedPseudoElement.getAttribute(DATA_PREFIX) !== prefix || alreadyProcessedPseudoElement.getAttribute(DATA_ICON) !== iconIdentifier)) {
          node.setAttribute(pendingAttribute, iconIdentifier);

          if (alreadyProcessedPseudoElement) {
            // Delete the old one, since we're replacing it with a new one
            node.removeChild(alreadyProcessedPseudoElement);
          }

          var meta = blankMeta();
          var extra = meta.extra;
          extra.attributes[DATA_FA_PSEUDO_ELEMENT] = position;
          findIcon(iconName, prefix).then(function (main) {
            var abstract = makeInlineSvgAbstract(_objectSpread2(_objectSpread2({}, meta), {}, {
              icons: {
                main: main,
                mask: emptyCanonicalIcon()
              },
              prefix: prefix,
              iconName: iconIdentifier,
              extra: extra,
              watchable: true
            }));
            var element = DOCUMENT.createElement('svg');

            if (position === ':before') {
              node.insertBefore(element, node.firstChild);
            } else {
              node.appendChild(element);
            }

            element.outerHTML = abstract.map(function (a) {
              return toHtml(a);
            }).join('\n');
            node.removeAttribute(pendingAttribute);
            resolve();
          }).catch(reject);
        } else {
          resolve();
        }
      } else {
        resolve();
      }
    });
  }

  function replace(node) {
    return picked.all([replaceForPosition(node, ':before'), replaceForPosition(node, ':after')]);
  }

  function processable(node) {
    return node.parentNode !== document.head && !~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(node.tagName.toUpperCase()) && !node.getAttribute(DATA_FA_PSEUDO_ELEMENT) && (!node.parentNode || node.parentNode.tagName !== 'svg');
  }

  function searchPseudoElements (root) {
    if (!IS_DOM) return;
    return new picked(function (resolve, reject) {
      var operations = toArray(root.querySelectorAll('*')).filter(processable).map(replace);
      var end = perf.begin('searchPseudoElements');
      disableObservation();
      picked.all(operations).then(function () {
        end();
        enableObservation();
        resolve();
      }).catch(function () {
        end();
        enableObservation();
        reject();
      });
    });
  }

  var baseStyles = "svg:not(:root).svg-inline--fa{overflow:visible}.svg-inline--fa{display:inline-block;font-size:inherit;height:1em;overflow:visible;vertical-align:-.125em}.svg-inline--fa.fa-lg{vertical-align:-.225em}.svg-inline--fa.fa-w-1{width:.0625em}.svg-inline--fa.fa-w-2{width:.125em}.svg-inline--fa.fa-w-3{width:.1875em}.svg-inline--fa.fa-w-4{width:.25em}.svg-inline--fa.fa-w-5{width:.3125em}.svg-inline--fa.fa-w-6{width:.375em}.svg-inline--fa.fa-w-7{width:.4375em}.svg-inline--fa.fa-w-8{width:.5em}.svg-inline--fa.fa-w-9{width:.5625em}.svg-inline--fa.fa-w-10{width:.625em}.svg-inline--fa.fa-w-11{width:.6875em}.svg-inline--fa.fa-w-12{width:.75em}.svg-inline--fa.fa-w-13{width:.8125em}.svg-inline--fa.fa-w-14{width:.875em}.svg-inline--fa.fa-w-15{width:.9375em}.svg-inline--fa.fa-w-16{width:1em}.svg-inline--fa.fa-w-17{width:1.0625em}.svg-inline--fa.fa-w-18{width:1.125em}.svg-inline--fa.fa-w-19{width:1.1875em}.svg-inline--fa.fa-w-20{width:1.25em}.svg-inline--fa.fa-pull-left{margin-right:.3em;width:auto}.svg-inline--fa.fa-pull-right{margin-left:.3em;width:auto}.svg-inline--fa.fa-border{height:1.5em}.svg-inline--fa.fa-li{width:2em}.svg-inline--fa.fa-fw{width:1.25em}.fa-layers svg.svg-inline--fa{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.fa-layers{display:inline-block;height:1em;position:relative;text-align:center;vertical-align:-.125em;width:1em}.fa-layers svg.svg-inline--fa{-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter,.fa-layers-text{display:inline-block;position:absolute;text-align:center}.fa-layers-text{left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter{background-color:#ff253a;border-radius:1em;-webkit-box-sizing:border-box;box-sizing:border-box;color:#fff;height:1.5em;line-height:1;max-width:5em;min-width:1.5em;overflow:hidden;padding:.25em;right:0;text-overflow:ellipsis;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-bottom-right{bottom:0;right:0;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom right;transform-origin:bottom right}.fa-layers-bottom-left{bottom:0;left:0;right:auto;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom left;transform-origin:bottom left}.fa-layers-top-right{right:0;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-top-left{left:0;right:auto;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top left;transform-origin:top left}.fa-lg{font-size:1.3333333333em;line-height:.75em;vertical-align:-.0667em}.fa-xs{font-size:.75em}.fa-sm{font-size:.875em}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:2.5em;padding-left:0}.fa-ul>li{position:relative}.fa-li{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}.fa-border{border:solid .08em #eee;border-radius:.1em;padding:.2em .25em .15em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left,.fab.fa-pull-left,.fal.fa-pull-left,.far.fa-pull-left,.fas.fa-pull-left{margin-right:.3em}.fa.fa-pull-right,.fab.fa-pull-right,.fal.fa-pull-right,.far.fa-pull-right,.fas.fa-pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.fa-rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-webkit-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{-webkit-transform:scale(1,-1);transform:scale(1,-1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{-webkit-transform:scale(-1,-1);transform:scale(-1,-1)}:root .fa-flip-both,:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-rotate-90{-webkit-filter:none;filter:none}.fa-stack{display:inline-block;height:2em;position:relative;width:2.5em}.fa-stack-1x,.fa-stack-2x{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.svg-inline--fa.fa-stack-1x{height:1em;width:1.25em}.svg-inline--fa.fa-stack-2x{height:2em;width:2.5em}.fa-inverse{color:#fff}.sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sr-only-focusable:active,.sr-only-focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}.svg-inline--fa .fa-primary{fill:var(--fa-primary-color,currentColor);opacity:1;opacity:var(--fa-primary-opacity,1)}.svg-inline--fa .fa-secondary{fill:var(--fa-secondary-color,currentColor);opacity:.4;opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-primary{opacity:.4;opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-secondary{opacity:1;opacity:var(--fa-primary-opacity,1)}.svg-inline--fa mask .fa-primary,.svg-inline--fa mask .fa-secondary{fill:#000}.fad.fa-inverse{color:#fff}";

  function css () {
    var dfp = DEFAULT_FAMILY_PREFIX;
    var drc = DEFAULT_REPLACEMENT_CLASS;
    var fp = config.familyPrefix;
    var rc = config.replacementClass;
    var s = baseStyles;

    if (fp !== dfp || rc !== drc) {
      var dPatt = new RegExp("\\.".concat(dfp, "\\-"), 'g');
      var customPropPatt = new RegExp("\\--".concat(dfp, "\\-"), 'g');
      var rPatt = new RegExp("\\.".concat(drc), 'g');
      s = s.replace(dPatt, ".".concat(fp, "-")).replace(customPropPatt, "--".concat(fp, "-")).replace(rPatt, ".".concat(rc));
    }

    return s;
  }

  var Library = /*#__PURE__*/function () {
    function Library() {
      _classCallCheck(this, Library);

      this.definitions = {};
    }

    _createClass(Library, [{
      key: "add",
      value: function add() {
        var _this = this;

        for (var _len = arguments.length, definitions = new Array(_len), _key = 0; _key < _len; _key++) {
          definitions[_key] = arguments[_key];
        }

        var additions = definitions.reduce(this._pullDefinitions, {});
        Object.keys(additions).forEach(function (key) {
          _this.definitions[key] = _objectSpread2(_objectSpread2({}, _this.definitions[key] || {}), additions[key]);
          defineIcons(key, additions[key]);
          build();
        });
      }
    }, {
      key: "reset",
      value: function reset() {
        this.definitions = {};
      }
    }, {
      key: "_pullDefinitions",
      value: function _pullDefinitions(additions, definition) {
        var normalized = definition.prefix && definition.iconName && definition.icon ? {
          0: definition
        } : definition;
        Object.keys(normalized).map(function (key) {
          var _normalized$key = normalized[key],
              prefix = _normalized$key.prefix,
              iconName = _normalized$key.iconName,
              icon = _normalized$key.icon;
          if (!additions[prefix]) additions[prefix] = {};
          additions[prefix][iconName] = icon;
        });
        return additions;
      }
    }]);

    return Library;
  }();

  function ensureCss() {
    if (config.autoAddCss && !_cssInserted) {
      insertCss(css());

      _cssInserted = true;
    }
  }

  function apiObject(val, abstractCreator) {
    Object.defineProperty(val, 'abstract', {
      get: abstractCreator
    });
    Object.defineProperty(val, 'html', {
      get: function get() {
        return val.abstract.map(function (a) {
          return toHtml(a);
        });
      }
    });
    Object.defineProperty(val, 'node', {
      get: function get() {
        if (!IS_DOM) return;
        var container = DOCUMENT.createElement('div');
        container.innerHTML = val.html;
        return container.children;
      }
    });
    return val;
  }

  function findIconDefinition(iconLookup) {
    var _iconLookup$prefix = iconLookup.prefix,
        prefix = _iconLookup$prefix === void 0 ? 'fa' : _iconLookup$prefix,
        iconName = iconLookup.iconName;
    if (!iconName) return;
    return iconFromMapping(library.definitions, prefix, iconName) || iconFromMapping(namespace.styles, prefix, iconName);
  }

  function resolveIcons(next) {
    return function (maybeIconDefinition) {
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var iconDefinition = (maybeIconDefinition || {}).icon ? maybeIconDefinition : findIconDefinition(maybeIconDefinition || {});
      var mask = params.mask;

      if (mask) {
        mask = (mask || {}).icon ? mask : findIconDefinition(mask || {});
      }

      return next(iconDefinition, _objectSpread2(_objectSpread2({}, params), {}, {
        mask: mask
      }));
    };
  }

  var library = new Library();
  var noAuto = function noAuto() {
    config.autoReplaceSvg = false;
    config.observeMutations = false;
    disconnect();
  };
  var _cssInserted = false;
  var dom = {
    i2svg: function i2svg() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      if (IS_DOM) {
        ensureCss();
        var _params$node = params.node,
            node = _params$node === void 0 ? DOCUMENT : _params$node,
            _params$callback = params.callback,
            callback = _params$callback === void 0 ? function () {} : _params$callback;

        if (config.searchPseudoElements) {
          searchPseudoElements(node);
        }

        return onTree(node, callback);
      } else {
        return picked.reject('Operation requires a DOM of some kind.');
      }
    },
    css: css,
    insertCss: function insertCss$$1() {
      if (!_cssInserted) {
        insertCss(css());

        _cssInserted = true;
      }
    },
    watch: function watch() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var autoReplaceSvgRoot = params.autoReplaceSvgRoot,
          observeMutationsRoot = params.observeMutationsRoot;

      if (config.autoReplaceSvg === false) {
        config.autoReplaceSvg = true;
      }

      config.observeMutations = true;
      domready(function () {
        autoReplace({
          autoReplaceSvgRoot: autoReplaceSvgRoot
        });
        observe({
          treeCallback: onTree,
          nodeCallback: onNode,
          pseudoElementsCallback: searchPseudoElements,
          observeMutationsRoot: observeMutationsRoot
        });
      });
    }
  };
  var parse = {
    transform: function transform(transformString) {
      return parseTransformString(transformString);
    }
  };
  var icon = resolveIcons(function (iconDefinition) {
    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var _params$transform = params.transform,
        transform = _params$transform === void 0 ? meaninglessTransform : _params$transform,
        _params$symbol = params.symbol,
        symbol = _params$symbol === void 0 ? false : _params$symbol,
        _params$mask = params.mask,
        mask = _params$mask === void 0 ? null : _params$mask,
        _params$maskId = params.maskId,
        maskId = _params$maskId === void 0 ? null : _params$maskId,
        _params$title = params.title,
        title = _params$title === void 0 ? null : _params$title,
        _params$titleId = params.titleId,
        titleId = _params$titleId === void 0 ? null : _params$titleId,
        _params$classes = params.classes,
        classes = _params$classes === void 0 ? [] : _params$classes,
        _params$attributes = params.attributes,
        attributes = _params$attributes === void 0 ? {} : _params$attributes,
        _params$styles = params.styles,
        styles = _params$styles === void 0 ? {} : _params$styles;
    if (!iconDefinition) return;
    var prefix = iconDefinition.prefix,
        iconName = iconDefinition.iconName,
        icon = iconDefinition.icon;
    return apiObject(_objectSpread2({
      type: 'icon'
    }, iconDefinition), function () {
      ensureCss();

      if (config.autoA11y) {
        if (title) {
          attributes['aria-labelledby'] = "".concat(config.replacementClass, "-title-").concat(titleId || nextUniqueId());
        } else {
          attributes['aria-hidden'] = 'true';
          attributes['focusable'] = 'false';
        }
      }

      return makeInlineSvgAbstract({
        icons: {
          main: asFoundIcon(icon),
          mask: mask ? asFoundIcon(mask.icon) : {
            found: false,
            width: null,
            height: null,
            icon: {}
          }
        },
        prefix: prefix,
        iconName: iconName,
        transform: _objectSpread2(_objectSpread2({}, meaninglessTransform), transform),
        symbol: symbol,
        title: title,
        maskId: maskId,
        titleId: titleId,
        extra: {
          attributes: attributes,
          styles: styles,
          classes: classes
        }
      });
    });
  });
  var text = function text(content) {
    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var _params$transform2 = params.transform,
        transform = _params$transform2 === void 0 ? meaninglessTransform : _params$transform2,
        _params$title2 = params.title,
        title = _params$title2 === void 0 ? null : _params$title2,
        _params$classes2 = params.classes,
        classes = _params$classes2 === void 0 ? [] : _params$classes2,
        _params$attributes2 = params.attributes,
        attributes = _params$attributes2 === void 0 ? {} : _params$attributes2,
        _params$styles2 = params.styles,
        styles = _params$styles2 === void 0 ? {} : _params$styles2;
    return apiObject({
      type: 'text',
      content: content
    }, function () {
      ensureCss();
      return makeLayersTextAbstract({
        content: content,
        transform: _objectSpread2(_objectSpread2({}, meaninglessTransform), transform),
        title: title,
        extra: {
          attributes: attributes,
          styles: styles,
          classes: ["".concat(config.familyPrefix, "-layers-text")].concat(_toConsumableArray(classes))
        }
      });
    });
  };
  var counter = function counter(content) {
    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var _params$title3 = params.title,
        title = _params$title3 === void 0 ? null : _params$title3,
        _params$classes3 = params.classes,
        classes = _params$classes3 === void 0 ? [] : _params$classes3,
        _params$attributes3 = params.attributes,
        attributes = _params$attributes3 === void 0 ? {} : _params$attributes3,
        _params$styles3 = params.styles,
        styles = _params$styles3 === void 0 ? {} : _params$styles3;
    return apiObject({
      type: 'counter',
      content: content
    }, function () {
      ensureCss();
      return makeLayersCounterAbstract({
        content: content.toString(),
        title: title,
        extra: {
          attributes: attributes,
          styles: styles,
          classes: ["".concat(config.familyPrefix, "-layers-counter")].concat(_toConsumableArray(classes))
        }
      });
    });
  };
  var layer = function layer(assembler) {
    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var _params$classes4 = params.classes,
        classes = _params$classes4 === void 0 ? [] : _params$classes4;
    return apiObject({
      type: 'layer'
    }, function () {
      ensureCss();
      var children = [];
      assembler(function (args) {
        Array.isArray(args) ? args.map(function (a) {
          children = children.concat(a.abstract);
        }) : children = children.concat(args.abstract);
      });
      return [{
        tag: 'span',
        attributes: {
          class: ["".concat(config.familyPrefix, "-layers")].concat(_toConsumableArray(classes)).join(' ')
        },
        children: children
      }];
    });
  };
  var api = {
    noAuto: noAuto,
    config: config,
    dom: dom,
    library: library,
    parse: parse,
    findIconDefinition: findIconDefinition,
    icon: icon,
    text: text,
    counter: counter,
    layer: layer,
    toHtml: toHtml
  };

  var autoReplace = function autoReplace() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var _params$autoReplaceSv = params.autoReplaceSvgRoot,
        autoReplaceSvgRoot = _params$autoReplaceSv === void 0 ? DOCUMENT : _params$autoReplaceSv;
    if ((Object.keys(namespace.styles).length > 0 || config.autoFetchSvg) && IS_DOM && config.autoReplaceSvg) api.dom.i2svg({
      node: autoReplaceSvgRoot
    });
  };

  function bootstrap() {
    if (IS_BROWSER) {
      if (!WINDOW.FontAwesome) {
        WINDOW.FontAwesome = api;
      }

      domready(function () {
        autoReplace();
        observe({
          treeCallback: onTree,
          nodeCallback: onNode,
          pseudoElementsCallback: searchPseudoElements
        });
      });
    }

    namespace.hooks = _objectSpread2(_objectSpread2({}, namespace.hooks), {}, {
      addPack: function addPack(prefix, icons) {
        namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), icons);
        build();
        autoReplace();
      },
      addShims: function addShims(shims) {
        var _namespace$shims;

        (_namespace$shims = namespace.shims).push.apply(_namespace$shims, _toConsumableArray(shims));

        build();
        autoReplace();
      }
    });
  }

  bunker(bootstrap);

}());
